{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Copy of Untitled2.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyNXVTKxJ97mgIv85gbO2x0H",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/ash-netizen/datascience/blob/master/Incident%20Classification\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zjlpw-DYDuVl",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 107
        },
        "outputId": "8e2f7926-45d1-4d5b-a9b6-e16411755540"
      },
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import keras \n",
        "import numpy as np\n",
        "from keras.preprocessing.text import Tokenizer\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "from keras.models import Sequential\n",
        "from keras.layers import Dense\n",
        "from keras.preprocessing.sequence import pad_sequences\n",
        "from keras.layers import Input, Dense, Dropout, Embedding, LSTM, Flatten\n",
        "from keras.models import Model\n",
        "from keras.utils import to_categorical\n",
        "from keras.callbacks import ModelCheckpoint\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.metrics import accuracy_score\n",
        "plt.style.use('ggplot')\n",
        "%matplotlib inline\n",
        "from IPython.core.display import display, HTML\n",
        "display(HTML(\"<style>.container { width:100% !important; }</style>\"))\n",
        "\n",
        "from sklearn.feature_extraction.text import CountVectorizer, TfidfTransformer\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import re\n",
        "import warnings\n",
        "\n",
        "#Visualisation\n",
        "import matplotlib.pyplot as plt\n",
        "import matplotlib\n",
        "import seaborn as sns\n",
        "from IPython.display import display\n",
        "#from mpl_toolkits.basemap import Basemap\n",
        "from wordcloud import WordCloud, STOPWORDS\n",
        "\n",
        "#nltk\n",
        "from nltk.stem import WordNetLemmatizer\n",
        "from nltk.sentiment.vader import SentimentIntensityAnalyzer\n",
        "from nltk.sentiment.util import *\n",
        "from nltk import tokenize"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/statsmodels/tools/_testing.py:19: FutureWarning: pandas.util.testing is deprecated. Use the functions in the public API at pandas.testing instead.\n",
            "  import pandas.util.testing as tm\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<style>.container { width:100% !important; }</style>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/nltk/twitter/__init__.py:20: UserWarning: The twython library has not been installed. Some functionality from the twitter package will not be available.\n",
            "  warnings.warn(\"The twython library has not been installed. \"\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KzVKTqqtE5yC",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "04402542-49a4-4ebf-d70d-7caceef9de47"
      },
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/gdrive')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Drive already mounted at /content/gdrive; to attempt to forcibly remount, call drive.mount(\"/content/gdrive\", force_remount=True).\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "28m2DpD4Eeuw",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "df = pd.read_csv('/content/gdrive/My Drive/incident.csv', encoding = \"ISO-8859-1\")\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "38BvlNzLFb9S",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 237
        },
        "outputId": "5ad8f1c6-7397-4aef-a02f-ae47286c3f72"
      },
      "source": [
        "df.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>description</th>\n",
              "      <th>assignment_group</th>\n",
              "      <th>category</th>\n",
              "      <th>target</th>\n",
              "      <th>num_words</th>\n",
              "      <th>bins</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>The toggle switch in the arm barrier 7 is miss...</td>\n",
              "      <td>ISD-ISS-L3</td>\n",
              "      <td>ISD Services</td>\n",
              "      <td>3</td>\n",
              "      <td>10</td>\n",
              "      <td>0-50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>The disk E: on computer JBLDCVSPAOD05.AD.SADAR...</td>\n",
              "      <td>IT-Database-L3</td>\n",
              "      <td>IT for IT</td>\n",
              "      <td>4</td>\n",
              "      <td>22</td>\n",
              "      <td>0-50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>App Fabric Caching Sevice is down</td>\n",
              "      <td>IT-BusinessApplication&amp;Transformation-L3</td>\n",
              "      <td>Email, Collaboration, Content Management</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>0-50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>While scanning PCOM label for job 341489 there...</td>\n",
              "      <td>IT-MFG-PCOM-PackagingCenter-L3</td>\n",
              "      <td>MOM Applications</td>\n",
              "      <td>5</td>\n",
              "      <td>38</td>\n",
              "      <td>0-50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>nt@@AZUWEVSPSHPWE01.AD.SADARA.COM\\r\\n10.51.19.81</td>\n",
              "      <td>IT-BusinessApplication&amp;Transformation-L3</td>\n",
              "      <td>Email, Collaboration, Content Management</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0-50</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                                         description  ...  bins\n",
              "0  The toggle switch in the arm barrier 7 is miss...  ...  0-50\n",
              "1  The disk E: on computer JBLDCVSPAOD05.AD.SADAR...  ...  0-50\n",
              "2                  App Fabric Caching Sevice is down  ...  0-50\n",
              "3  While scanning PCOM label for job 341489 there...  ...  0-50\n",
              "4   nt@@AZUWEVSPSHPWE01.AD.SADARA.COM\\r\\n10.51.19.81  ...  0-50\n",
              "\n",
              "[5 rows x 6 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 97
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "WP7Nz_vMi8tK",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 225
        },
        "outputId": "d5e8ec3b-48cd-44e3-9dbc-6b055d96e1ff"
      },
      "source": [
        "df.assignment_group.value_counts()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "IT-FieldSupport-L2             2670\n",
              "IT-ServiceDesk-L1              1074\n",
              "IT-Security-IAM-L2              888\n",
              "IT-Hosting-L3                   566\n",
              "IT-Workplace-Workstation-L3     376\n",
              "                               ... \n",
              "IT-CAS-K2-L2                      1\n",
              "IT-SV-MSS-L1                      1\n",
              "IT-Workplace-O365-L3              1\n",
              "IT-ERP-AMS-WPR-TEC                1\n",
              "IT-ERP-DEV-L2                     1\n",
              "Name: assignment_group, Length: 76, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qTuKz5zPi_5q",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 87
        },
        "outputId": "03f71241-29cf-49a8-c6da-46d13e6abcf8"
      },
      "source": [
        "df.isnull().sum()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "description         0\n",
              "assignment_group    0\n",
              "category            0\n",
              "dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "M6SzSHsQv1r0",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "U52dPn_AJsrw",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 243
        },
        "outputId": "364b65ef-bdb5-4885-907d-6157ae4637cc"
      },
      "source": [
        "df.category.value_counts()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "ERP/SAP/Analytics                           1477\n",
              "User Account Management                     1444\n",
              "Email, Collaboration, Content Management    1413\n",
              "IT for IT                                   1410\n",
              "Network/Connectivity                        1094\n",
              "Workstations and Accessories                1070\n",
              "MOM Applications                             958\n",
              "Business and Office Applications             884\n",
              "Print Services                               388\n",
              "Plant IT Services                            357\n",
              "Mobile and Desk Phone                        255\n",
              "ISD Services                                 213\n",
              "Name: category, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yO_ZpqAIPqOF",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "df['target'] = df.category.astype('category').cat.codes\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "iBkVnJedU4qu",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 202
        },
        "outputId": "2bca5052-6128-4494-fcd1-55aa16116145"
      },
      "source": [
        "df.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>description</th>\n",
              "      <th>assignment_group</th>\n",
              "      <th>category</th>\n",
              "      <th>target</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>The toggle switch in the arm barrier 7 is miss...</td>\n",
              "      <td>ISD-ISS-L3</td>\n",
              "      <td>ISD Services</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>The disk E: on computer JBLDCVSPAOD05.AD.SADAR...</td>\n",
              "      <td>IT-Database-L3</td>\n",
              "      <td>IT for IT</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>App Fabric Caching Sevice is down</td>\n",
              "      <td>IT-BusinessApplication&amp;Transformation-L3</td>\n",
              "      <td>Email, Collaboration, Content Management</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>While scanning PCOM label for job 341489 there...</td>\n",
              "      <td>IT-MFG-PCOM-PackagingCenter-L3</td>\n",
              "      <td>MOM Applications</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>nt@@AZUWEVSPSHPWE01.AD.SADARA.COM\\r\\n10.51.19.81</td>\n",
              "      <td>IT-BusinessApplication&amp;Transformation-L3</td>\n",
              "      <td>Email, Collaboration, Content Management</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                                         description  ... target\n",
              "0  The toggle switch in the arm barrier 7 is miss...  ...      3\n",
              "1  The disk E: on computer JBLDCVSPAOD05.AD.SADAR...  ...      4\n",
              "2                  App Fabric Caching Sevice is down  ...      2\n",
              "3  While scanning PCOM label for job 341489 there...  ...      5\n",
              "4   nt@@AZUWEVSPSHPWE01.AD.SADARA.COM\\r\\n10.51.19.81  ...      2\n",
              "\n",
              "[5 rows x 4 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "78XhW_Fwwn0g",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "df['num_words'] = df.description.apply(lambda x : len(x.split()))\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-zmvXEaQwnxz",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "bins=[0,50,75, np.inf]\n",
        "df['bins']=pd.cut(df.num_words, bins=[0,50,100,300, 500,np.inf], labels=['0-50', '50-100', '100-300','300-500' ,'>500'])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "g0xw5vwhwnvV",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "word_distribution = df.groupby('bins').size().reset_index().rename(columns={0:'counts'})\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_z_rVFNTwntD",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 202
        },
        "outputId": "c554071f-4470-47fe-e030-c1f5e5410e99"
      },
      "source": [
        "word_distribution.head()\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>bins</th>\n",
              "      <th>counts</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0-50</td>\n",
              "      <td>10252</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>50-100</td>\n",
              "      <td>611</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>100-300</td>\n",
              "      <td>92</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>300-500</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>&gt;500</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "      bins  counts\n",
              "0     0-50   10252\n",
              "1   50-100     611\n",
              "2  100-300      92\n",
              "3  300-500       5\n",
              "4     >500       3"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_DF0Idwfwnra",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 317
        },
        "outputId": "f8142da3-8b41-473c-80ff-9564a3fd8aa6"
      },
      "source": [
        "sns.barplot(x='bins', y='counts', data=word_distribution).set_title(\"Word distribution per bin\")\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Word distribution per bin')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 16
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VlYqvm8iwnpv",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 237
        },
        "outputId": "9fe082c2-61c9-4353-deac-e6cf19612b27"
      },
      "source": [
        "df.head()\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>description</th>\n",
              "      <th>assignment_group</th>\n",
              "      <th>category</th>\n",
              "      <th>target</th>\n",
              "      <th>num_words</th>\n",
              "      <th>bins</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>The toggle switch in the arm barrier 7 is miss...</td>\n",
              "      <td>ISD-ISS-L3</td>\n",
              "      <td>ISD Services</td>\n",
              "      <td>3</td>\n",
              "      <td>10</td>\n",
              "      <td>0-50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>The disk E: on computer JBLDCVSPAOD05.AD.SADAR...</td>\n",
              "      <td>IT-Database-L3</td>\n",
              "      <td>IT for IT</td>\n",
              "      <td>4</td>\n",
              "      <td>22</td>\n",
              "      <td>0-50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>App Fabric Caching Sevice is down</td>\n",
              "      <td>IT-BusinessApplication&amp;Transformation-L3</td>\n",
              "      <td>Email, Collaboration, Content Management</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "      <td>0-50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>While scanning PCOM label for job 341489 there...</td>\n",
              "      <td>IT-MFG-PCOM-PackagingCenter-L3</td>\n",
              "      <td>MOM Applications</td>\n",
              "      <td>5</td>\n",
              "      <td>38</td>\n",
              "      <td>0-50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>nt@@AZUWEVSPSHPWE01.AD.SADARA.COM\\r\\n10.51.19.81</td>\n",
              "      <td>IT-BusinessApplication&amp;Transformation-L3</td>\n",
              "      <td>Email, Collaboration, Content Management</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0-50</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                                         description  ...  bins\n",
              "0  The toggle switch in the arm barrier 7 is miss...  ...  0-50\n",
              "1  The disk E: on computer JBLDCVSPAOD05.AD.SADAR...  ...  0-50\n",
              "2                  App Fabric Caching Sevice is down  ...  0-50\n",
              "3  While scanning PCOM label for job 341489 there...  ...  0-50\n",
              "4   nt@@AZUWEVSPSHPWE01.AD.SADARA.COM\\r\\n10.51.19.81  ...  0-50\n",
              "\n",
              "[5 rows x 6 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Q1lZN4g4wnnu",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "num_class = len(np.unique(df.category.values))\n",
        "y = df['target'].values"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "O8CSnmSewniD",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5dT6wpKOy68K",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "df['description'] = df['description'].astype(str)\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "i4S51dwozAgt",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "1845f31d-8243-4b27-ff10-44c586beb207"
      },
      "source": [
        "type(df['description'])\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "pandas.core.series.Series"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8SwlN67BzOlW",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "df_description = df.description.values\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Xn1DI8O_zOn0",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "811181ff-bb3d-4874-f257-7fdc2ac39630"
      },
      "source": [
        "type(df_description)\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "numpy.ndarray"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qcMU8wcLzYc5",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "cb07a448-6201-45be-c3f1-e8408eaa73f0"
      },
      "source": [
        "#cv = # Initialize a CountVectorizer object: count_vectorizer\n",
        "count_vec = CountVectorizer(stop_words=\"english\", analyzer='word', \n",
        "                            ngram_range=(1, 1), max_df=1, min_df=1, max_features=None)\n",
        "\n",
        "# convert text data into term-frequency matrix\n",
        "df_description = count_vec.fit_transform(df_description)\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "tfidf_transformer = TfidfTransformer()\n",
        "\n",
        "# convert term-frequency matrix into tf-idf\n",
        "tfidf_matrix = tfidf_transformer.fit_transform(df_description)\n",
        "\n",
        "# create dictionary to find a tfidf word each word\n",
        "word2tfidf = dict(zip(count_vec.get_feature_names(), tfidf_transformer.idf_))\n",
        "\n",
        "for word, score in word2tfidf.items():\n",
        "    print(word, score)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "\u001b[1;30;43mStreaming output truncated to the last 5000 lines.\u001b[0m\n",
            "e2e2 9.60922527686273\n",
            "e2o4bd6sh2b1sjk56 9.60922527686273\n",
            "e32f6a27 9.60922527686273\n",
            "e36 9.60922527686273\n",
            "e367 9.60922527686273\n",
            "e405fe3d902f 9.60922527686273\n",
            "e424dea1225a 9.60922527686273\n",
            "e42c 9.60922527686273\n",
            "e445 9.60922527686273\n",
            "e448223c 9.60922527686273\n",
            "e4af0e1ef566 9.60922527686273\n",
            "e4ds9kmh 9.60922527686273\n",
            "e500dba5 9.60922527686273\n",
            "e527 9.60922527686273\n",
            "e5a0 9.60922527686273\n",
            "e5ud9xh7fppe78y 9.60922527686273\n",
            "e63232ba23f4da117e208d8c0bf99390 9.60922527686273\n",
            "e67a 9.60922527686273\n",
            "e67bf71bb486 9.60922527686273\n",
            "e71b 9.60922527686273\n",
            "e74 9.60922527686273\n",
            "e7xfxb 9.60922527686273\n",
            "e864f3dd 9.60922527686273\n",
            "e96d 9.60922527686273\n",
            "e9f3 9.60922527686273\n",
            "e9ff 9.60922527686273\n",
            "ea39 9.60922527686273\n",
            "eae 9.60922527686273\n",
            "eajb 9.60922527686273\n",
            "eamil 9.60922527686273\n",
            "eand 9.60922527686273\n",
            "earlie 9.60922527686273\n",
            "earlist 9.60922527686273\n",
            "earphone 9.60922527686273\n",
            "easier 9.60922527686273\n",
            "eastern 9.60922527686273\n",
            "eastwestcenter 9.60922527686273\n",
            "easydatatransfercleansystemprofessional 9.60922527686273\n",
            "easymp 9.60922527686273\n",
            "eatool 9.60922527686273\n",
            "eb 9.60922527686273\n",
            "ebe 9.60922527686273\n",
            "ebh3zy1l0l66zt144 9.60922527686273\n",
            "ebilegc 9.60922527686273\n",
            "ebilegcx 9.60922527686273\n",
            "ebwz497 9.60922527686273\n",
            "eby9vr1o5 9.60922527686273\n",
            "ec2648d0466e 9.60922527686273\n",
            "ec58 9.60922527686273\n",
            "ec9052a 9.60922527686273\n",
            "ec9440d 9.60922527686273\n",
            "eca660d9 9.60922527686273\n",
            "ecab 9.60922527686273\n",
            "ecea8c26 9.60922527686273\n",
            "ecloud 9.60922527686273\n",
            "ecp 9.60922527686273\n",
            "ecy 9.60922527686273\n",
            "ed19 9.60922527686273\n",
            "edae 9.60922527686273\n",
            "edc 9.60922527686273\n",
            "editable 9.60922527686273\n",
            "edited 9.60922527686273\n",
            "edm 9.60922527686273\n",
            "edszkas7gimk7v 9.60922527686273\n",
            "edu 9.60922527686273\n",
            "edwin 9.60922527686273\n",
            "edzj 9.60922527686273\n",
            "ee81 9.60922527686273\n",
            "eebsmp01 9.60922527686273\n",
            "eed335d2 9.60922527686273\n",
            "eed9jqjd4b600bu2b 9.60922527686273\n",
            "ef3e6b9b 9.60922527686273\n",
            "ef4f 9.60922527686273\n",
            "efe 9.60922527686273\n",
            "effected 9.60922527686273\n",
            "effectivity 9.60922527686273\n",
            "efforts 9.60922527686273\n",
            "eg03 9.60922527686273\n",
            "eg100014100100001029036510010 9.60922527686273\n",
            "eg4 9.60922527686273\n",
            "egg 9.60922527686273\n",
            "egx 9.60922527686273\n",
            "ehan_process_safety 9.60922527686273\n",
            "ehp6 9.60922527686273\n",
            "ehp8 9.60922527686273\n",
            "ehs_mva 9.60922527686273\n",
            "ehs_mva_itm 9.60922527686273\n",
            "ehs_upg 9.60922527686273\n",
            "ehs_upg2 9.60922527686273\n",
            "ehs_upg3 9.60922527686273\n",
            "ehs_upg4 9.60922527686273\n",
            "ehs_upg5 9.60922527686273\n",
            "eidxia00 9.60922527686273\n",
            "ejbldcvsptpf1 9.60922527686273\n",
            "ejbxpycjgowcygb 9.60922527686273\n",
            "el3 9.60922527686273\n",
            "elastomar 9.60922527686273\n",
            "elb 9.60922527686273\n",
            "elb097307 9.60922527686273\n",
            "eleanor 9.60922527686273\n",
            "elec 9.60922527686273\n",
            "eleethub 9.60922527686273\n",
            "element 9.60922527686273\n",
            "elena 9.60922527686273\n",
            "elepsed 9.60922527686273\n",
            "elevenca 9.60922527686273\n",
            "eliminate 9.60922527686273\n",
            "elirning 9.60922527686273\n",
            "elite 9.60922527686273\n",
            "elitedisplay 9.60922527686273\n",
            "eliwma00 9.60922527686273\n",
            "elshkx00 9.60922527686273\n",
            "elwh2 9.60922527686273\n",
            "email_wo 9.60922527686273\n",
            "emaill 9.60922527686273\n",
            "emailnotificationtask 9.60922527686273\n",
            "emaint 9.60922527686273\n",
            "embassy 9.60922527686273\n",
            "emergensy 9.60922527686273\n",
            "emerson 9.60922527686273\n",
            "emil 9.60922527686273\n",
            "emirates 9.60922527686273\n",
            "empelipe 9.60922527686273\n",
            "employer 9.60922527686273\n",
            "employment 9.60922527686273\n",
            "empolyees 9.60922527686273\n",
            "emptied 9.60922527686273\n",
            "ems 9.60922527686273\n",
            "emulator 9.60922527686273\n",
            "en_us 9.60922527686273\n",
            "enableautoaction 9.60922527686273\n",
            "enablement 9.60922527686273\n",
            "enblr 9.60922527686273\n",
            "encoding 9.60922527686273\n",
            "ended 9.60922527686273\n",
            "endlessly 9.60922527686273\n",
            "ends 9.60922527686273\n",
            "enews 9.60922527686273\n",
            "enezi 9.60922527686273\n",
            "engaged 9.60922527686273\n",
            "engagement 9.60922527686273\n",
            "engr 9.60922527686273\n",
            "engraving 9.60922527686273\n",
            "enh 9.60922527686273\n",
            "enhancements 9.60922527686273\n",
            "enhancer 9.60922527686273\n",
            "enormous 9.60922527686273\n",
            "ensemblejuvavum 9.60922527686273\n",
            "entir 9.60922527686273\n",
            "entirely 9.60922527686273\n",
            "entitlement 9.60922527686273\n",
            "entitlements 9.60922527686273\n",
            "entrance 9.60922527686273\n",
            "entre 9.60922527686273\n",
            "enu 9.60922527686273\n",
            "envelop 9.60922527686273\n",
            "envelops 9.60922527686273\n",
            "envi 9.60922527686273\n",
            "enviroment 9.60922527686273\n",
            "environmental 9.60922527686273\n",
            "eod173e5dbdf 9.60922527686273\n",
            "eoiriyadh 9.60922527686273\n",
            "eop 9.60922527686273\n",
            "eos 9.60922527686273\n",
            "epjl 9.60922527686273\n",
            "eporss 9.60922527686273\n",
            "erased 9.60922527686273\n",
            "erasing 9.60922527686273\n",
            "erc 9.60922527686273\n",
            "eric 9.60922527686273\n",
            "ericabel2020 9.60922527686273\n",
            "err 9.60922527686273\n",
            "err_tunnel_connection_failed 9.60922527686273\n",
            "erratic 9.60922527686273\n",
            "errir 9.60922527686273\n",
            "erroneous 9.60922527686273\n",
            "errorid 9.60922527686273\n",
            "errormessage 9.60922527686273\n",
            "errorname 9.60922527686273\n",
            "ers50_pkg 9.60922527686273\n",
            "eryna 9.60922527686273\n",
            "escalation 9.60922527686273\n",
            "esdojmtwn6brgruf3 9.60922527686273\n",
            "esolutions 9.60922527686273\n",
            "esom 9.60922527686273\n",
            "esoms 9.60922527686273\n",
            "esp 9.60922527686273\n",
            "espe 9.60922527686273\n",
            "espially 9.60922527686273\n",
            "esplody 9.60922527686273\n",
            "esrc 9.60922527686273\n",
            "esser 9.60922527686273\n",
            "estack 9.60922527686273\n",
            "estimate 9.60922527686273\n",
            "estimated 9.60922527686273\n",
            "et 9.60922527686273\n",
            "etab 9.60922527686273\n",
            "etf 9.60922527686273\n",
            "ethanol 9.60922527686273\n",
            "ethereum 9.60922527686273\n",
            "eto9ve1 9.60922527686273\n",
            "ettebiermahalet 9.60922527686273\n",
            "eur 9.60922527686273\n",
            "evacuate 9.60922527686273\n",
            "evcrea 9.60922527686273\n",
            "evening 9.60922527686273\n",
            "evernote 9.60922527686273\n",
            "evfnb 9.60922527686273\n",
            "evidence 9.60922527686273\n",
            "ew1 9.60922527686273\n",
            "ewcnt 9.60922527686273\n",
            "ewsponding 9.60922527686273\n",
            "exact 9.60922527686273\n",
            "exam 9.60922527686273\n",
            "examined 9.60922527686273\n",
            "examples 9.60922527686273\n",
            "exams 9.60922527686273\n",
            "excell 9.60922527686273\n",
            "excelsheet 9.60922527686273\n",
            "exceptionforarraybinddml 9.60922527686273\n",
            "excessive 9.60922527686273\n",
            "excluding 9.60922527686273\n",
            "excuses 9.60922527686273\n",
            "exec 9.60922527686273\n",
            "executable 9.60922527686273\n",
            "executable_id 9.60922527686273\n",
            "executecommandline 9.60922527686273\n",
            "executedbdatareader 9.60922527686273\n",
            "executereader 9.60922527686273\n",
            "executing 9.60922527686273\n",
            "exercise 9.60922527686273\n",
            "exfu0574755 9.60922527686273\n",
            "exfu2501254 9.60922527686273\n",
            "exfu5512951 9.60922527686273\n",
            "exhibitionstroking 9.60922527686273\n",
            "existed 9.60922527686273\n",
            "existence 9.60922527686273\n",
            "existent 9.60922527686273\n",
            "exite 9.60922527686273\n",
            "expat 9.60922527686273\n",
            "expect 9.60922527686273\n",
            "expedited 9.60922527686273\n",
            "expediting 9.60922527686273\n",
            "expedito 9.60922527686273\n",
            "experts 9.60922527686273\n",
            "expiring 9.60922527686273\n",
            "explaining 9.60922527686273\n",
            "explanations 9.60922527686273\n",
            "explication 9.60922527686273\n",
            "exploit 9.60922527686273\n",
            "exports 9.60922527686273\n",
            "exposed 9.60922527686273\n",
            "express 9.60922527686273\n",
            "extender 9.60922527686273\n",
            "extensively 9.60922527686273\n",
            "extent 9.60922527686273\n",
            "externals 9.60922527686273\n",
            "extincted 9.60922527686273\n",
            "extinguisher 9.60922527686273\n",
            "extraction 9.60922527686273\n",
            "extremal 9.60922527686273\n",
            "exw 9.60922527686273\n",
            "eyes 9.60922527686273\n",
            "f04f 9.60922527686273\n",
            "f060230e 9.60922527686273\n",
            "f08a99cf 9.60922527686273\n",
            "f09c 9.60922527686273\n",
            "f0fd 9.60922527686273\n",
            "f0hc7osjnl2vi61g 9.60922527686273\n",
            "f0u0ieg3sce8l4zxd2fl2qhhwcznzpf6x 9.60922527686273\n",
            "f1 9.60922527686273\n",
            "f150 9.60922527686273\n",
            "f17cd369 9.60922527686273\n",
            "f2072395 9.60922527686273\n",
            "f28c6842 9.60922527686273\n",
            "f35 9.60922527686273\n",
            "f35a 9.60922527686273\n",
            "f36 9.60922527686273\n",
            "f56dad610042 9.60922527686273\n",
            "f5956709 9.60922527686273\n",
            "f5ab 9.60922527686273\n",
            "f60e96c654c1 9.60922527686273\n",
            "f66f 9.60922527686273\n",
            "f6a567cf 9.60922527686273\n",
            "f6b1 9.60922527686273\n",
            "f7ba 9.60922527686273\n",
            "f85605241685 9.60922527686273\n",
            "f86b 9.60922527686273\n",
            "f882c03a853f 9.60922527686273\n",
            "f8ee 9.60922527686273\n",
            "f9 9.60922527686273\n",
            "f98a 9.60922527686273\n",
            "f9c5f869 9.60922527686273\n",
            "f9f84d6d 9.60922527686273\n",
            "fa2 9.60922527686273\n",
            "fa37 9.60922527686273\n",
            "fa51985a 9.60922527686273\n",
            "fab2cd10faf0 9.60922527686273\n",
            "faber 9.60922527686273\n",
            "fabianurquiza 9.60922527686273\n",
            "fabrication 9.60922527686273\n",
            "fac6 9.60922527686273\n",
            "faceing 9.60922527686273\n",
            "facemask 9.60922527686273\n",
            "facetohen 9.60922527686273\n",
            "faconnableactrite 9.60922527686273\n",
            "facp 9.60922527686273\n",
            "factore 9.60922527686273\n",
            "fad1904a 9.60922527686273\n",
            "fadd57c6b575 9.60922527686273\n",
            "fadi 9.60922527686273\n",
            "fadilah 9.60922527686273\n",
            "fae6 9.60922527686273\n",
            "fagifa00 9.60922527686273\n",
            "fahd 9.60922527686273\n",
            "fahmi 9.60922527686273\n",
            "faicing 9.60922527686273\n",
            "failback 9.60922527686273\n",
            "faild 9.60922527686273\n",
            "failover 9.60922527686273\n",
            "failur 9.60922527686273\n",
            "failure_cr0004161 9.60922527686273\n",
            "fairoz 9.60922527686273\n",
            "fairoze 9.60922527686273\n",
            "faizan 9.60922527686273\n",
            "faizanabdulaziz 9.60922527686273\n",
            "fakeav 9.60922527686273\n",
            "fakeframes 9.60922527686273\n",
            "fal 9.60922527686273\n",
            "falid 9.60922527686273\n",
            "falkagidi 9.60922527686273\n",
            "fallatah 9.60922527686273\n",
            "falling 9.60922527686273\n",
            "fane 9.60922527686273\n",
            "fao 9.60922527686273\n",
            "faranm00 9.60922527686273\n",
            "farawm01 9.60922527686273\n",
            "farefx00 9.60922527686273\n",
            "farhan 9.60922527686273\n",
            "farid 9.60922527686273\n",
            "farreaj00 9.60922527686273\n",
            "fast 9.60922527686273\n",
            "fastandstrongwolf 9.60922527686273\n",
            "fat 9.60922527686273\n",
            "fata 9.60922527686273\n",
            "fatal 9.60922527686273\n",
            "fathom 9.60922527686273\n",
            "fatimah 9.60922527686273\n",
            "faturamento 9.60922527686273\n",
            "favor 9.60922527686273\n",
            "favorable 9.60922527686273\n",
            "favorities 9.60922527686273\n",
            "fawzi 9.60922527686273\n",
            "fax 9.60922527686273\n",
            "fayza 9.60922527686273\n",
            "fb0xl 9.60922527686273\n",
            "fb3c 9.60922527686273\n",
            "fb415a0d 9.60922527686273\n",
            "fbcdn 9.60922527686273\n",
            "fbchifh 9.60922527686273\n",
            "fberg_encrypted_cfdd1df 9.60922527686273\n",
            "fbiu0460489 9.60922527686273\n",
            "fca 9.60922527686273\n",
            "fca1dac3 9.60922527686273\n",
            "fch2031206t 9.60922527686273\n",
            "fcw1815c0dh 9.60922527686273\n",
            "fcw1817l0a6 9.60922527686273\n",
            "fcw2116d0ux 9.60922527686273\n",
            "fd810611 9.60922527686273\n",
            "fdd8b7addc2a 9.60922527686273\n",
            "fdhwgm 9.60922527686273\n",
            "fdmd 9.60922527686273\n",
            "fdsjfjdsfjdsdsjajjs 9.60922527686273\n",
            "fdsjfjdsfjdsjfdjsfh 9.60922527686273\n",
            "fe0f58a5 9.60922527686273\n",
            "fec56 9.60922527686273\n",
            "fec71 9.60922527686273\n",
            "fec73 9.60922527686273\n",
            "fec74 9.60922527686273\n",
            "fec75 9.60922527686273\n",
            "fec78 9.60922527686273\n",
            "fedex 9.60922527686273\n",
            "fee 9.60922527686273\n",
            "feeding 9.60922527686273\n",
            "fees 9.60922527686273\n",
            "feet 9.60922527686273\n",
            "fef32dcc191b 9.60922527686273\n",
            "feifanpj 9.60922527686273\n",
            "female 9.60922527686273\n",
            "fen 9.60922527686273\n",
            "fenka37 9.60922527686273\n",
            "fepz41 9.60922527686273\n",
            "feras 9.60922527686273\n",
            "fernando 9.60922527686273\n",
            "fernbc00 9.60922527686273\n",
            "feuture 9.60922527686273\n",
            "ff17106a95da 9.60922527686273\n",
            "ff20dd47 9.60922527686273\n",
            "ff6e 9.60922527686273\n",
            "ffau1185832 9.60922527686273\n",
            "ffip 9.60922527686273\n",
            "ffksaba01 9.60922527686273\n",
            "ffzlp02 9.60922527686273\n",
            "fghjk 9.60922527686273\n",
            "fgl2009y05u 9.60922527686273\n",
            "fhb 9.60922527686273\n",
            "fhhohndorf 9.60922527686273\n",
            "fi430208 9.60922527686273\n",
            "fic 9.60922527686273\n",
            "fico 9.60922527686273\n",
            "fieldvalue 9.60922527686273\n",
            "fiexed 9.60922527686273\n",
            "fightcovid19 9.60922527686273\n",
            "fighterjuggalette 9.60922527686273\n",
            "figure 9.60922527686273\n",
            "fihuh 9.60922527686273\n",
            "filedecryptor 9.60922527686273\n",
            "fileexchangeserverprotocolsystemintergra 9.60922527686273\n",
            "fileinfo 9.60922527686273\n",
            "filename 9.60922527686273\n",
            "filetransferservice 9.60922527686273\n",
            "filing 9.60922527686273\n",
            "fillrequest 9.60922527686273\n",
            "filse 9.60922527686273\n",
            "filtermist 9.60922527686273\n",
            "filtration 9.60922527686273\n",
            "finalizing 9.60922527686273\n",
            "finaly 9.60922527686273\n",
            "findings 9.60922527686273\n",
            "findulz 9.60922527686273\n",
            "fined 9.60922527686273\n",
            "finesse 9.60922527686273\n",
            "firman 9.60922527686273\n",
            "firstly 9.60922527686273\n",
            "fish 9.60922527686273\n",
            "fished 9.60922527686273\n",
            "fisher 9.60922527686273\n",
            "fist 9.60922527686273\n",
            "fitehook 9.60922527686273\n",
            "fitting 9.60922527686273\n",
            "fixer 9.60922527686273\n",
            "fixpinnedexecutables 9.60922527686273\n",
            "fixt 9.60922527686273\n",
            "flablenitev 9.60922527686273\n",
            "flagged 9.60922527686273\n",
            "flags 9.60922527686273\n",
            "flapalinta1950 9.60922527686273\n",
            "flare 9.60922527686273\n",
            "flashnewsservice 9.60922527686273\n",
            "flat 9.60922527686273\n",
            "flir 9.60922527686273\n",
            "float 9.60922527686273\n",
            "floated 9.60922527686273\n",
            "flogging 9.60922527686273\n",
            "floppy 9.60922527686273\n",
            "florensio 9.60922527686273\n",
            "flour 9.60922527686273\n",
            "flowmeter 9.60922527686273\n",
            "flv 9.60922527686273\n",
            "flw 9.60922527686273\n",
            "fml 9.60922527686273\n",
            "fmp 9.60922527686273\n",
            "focus 9.60922527686273\n",
            "foe 9.60922527686273\n",
            "foids 9.60922527686273\n",
            "foiss68b 9.60922527686273\n",
            "folderctid 9.60922527686273\n",
            "folds 9.60922527686273\n",
            "folio1040 9.60922527686273\n",
            "followup 9.60922527686273\n",
            "fonix 9.60922527686273\n",
            "footer 9.60922527686273\n",
            "fore 9.60922527686273\n",
            "foreachasync 9.60922527686273\n",
            "foremens 9.60922527686273\n",
            "forg0001 9.60922527686273\n",
            "forgets 9.60922527686273\n",
            "forgotten 9.60922527686273\n",
            "forklift 9.60922527686273\n",
            "formalin 9.60922527686273\n",
            "formatted 9.60922527686273\n",
            "formulaarray 9.60922527686273\n",
            "forthcoming 9.60922527686273\n",
            "fortinet 9.60922527686273\n",
            "forwarder 9.60922527686273\n",
            "fouad 9.60922527686273\n",
            "foward 9.60922527686273\n",
            "foxbit 9.60922527686273\n",
            "fps_browser_app_profile_string 9.60922527686273\n",
            "fps_browser_user_profile_string 9.60922527686273\n",
            "fqbgvl 9.60922527686273\n",
            "fre 9.60922527686273\n",
            "fredoam 9.60922527686273\n",
            "freeagent 9.60922527686273\n",
            "freedisk 9.60922527686273\n",
            "freedom 9.60922527686273\n",
            "freeing 9.60922527686273\n",
            "freezed 9.60922527686273\n",
            "freight 9.60922527686273\n",
            "freqent 9.60922527686273\n",
            "freshly 9.60922527686273\n",
            "fringing 9.60922527686273\n",
            "frm 9.60922527686273\n",
            "fro 9.60922527686273\n",
            "frog 9.60922527686273\n",
            "fromsoftware 9.60922527686273\n",
            "fslakdasjdnsasjsj 9.60922527686273\n",
            "ft23fpcu5yabw2 9.60922527686273\n",
            "ft6gw 9.60922527686273\n",
            "fter 9.60922527686273\n",
            "ftp1ba8qj 9.60922527686273\n",
            "ftxp 9.60922527686273\n",
            "fucntionlity 9.60922527686273\n",
            "fulfilling 9.60922527686273\n",
            "functional_db 9.60922527686273\n",
            "functionalities 9.60922527686273\n",
            "fundamental 9.60922527686273\n",
            "funtik 9.60922527686273\n",
            "funtional 9.60922527686273\n",
            "furnaces 9.60922527686273\n",
            "furthermore 9.60922527686273\n",
            "fv 9.60922527686273\n",
            "fw6rzlxc 9.60922527686273\n",
            "fwwkhbipizxtzfilpvviovfmg 9.60922527686273\n",
            "fya 9.60922527686273\n",
            "fz782ze 9.60922527686273\n",
            "g009clvp1l7 9.60922527686273\n",
            "g05 9.60922527686273\n",
            "g07 9.60922527686273\n",
            "g088 9.60922527686273\n",
            "g111 9.60922527686273\n",
            "g2 9.60922527686273\n",
            "g36 9.60922527686273\n",
            "g48 9.60922527686273\n",
            "g555 9.60922527686273\n",
            "g6 9.60922527686273\n",
            "g7bxxcu 9.60922527686273\n",
            "g7goqaarrrcjxplbfreym1xln0w 9.60922527686273\n",
            "g9uknpabdcnyoveh8vkbyrbzheogpd46_il4mdhbii9 9.60922527686273\n",
            "gadgetops 9.60922527686273\n",
            "gain 9.60922527686273\n",
            "gained 9.60922527686273\n",
            "galennou 9.60922527686273\n",
            "gam1ap8hvfuvwxf0u1csnf00743z98k8g5xkhgixsnzhysn2e 9.60922527686273\n",
            "game2015 9.60922527686273\n",
            "gandael6 9.60922527686273\n",
            "gandotra 9.60922527686273\n",
            "gangadharan 9.60922527686273\n",
            "gani 9.60922527686273\n",
            "gaon 9.60922527686273\n",
            "gap 9.60922527686273\n",
            "garble 9.60922527686273\n",
            "garirk00 9.60922527686273\n",
            "garnmh01 9.60922527686273\n",
            "garry 9.60922527686273\n",
            "gasang 9.60922527686273\n",
            "gasket 9.60922527686273\n",
            "gast 9.60922527686273\n",
            "gat 9.60922527686273\n",
            "gayfotosaffiliate 9.60922527686273\n",
            "gb_otc_sadara 9.60922527686273\n",
            "gcxu2220389 9.60922527686273\n",
            "gd 9.60922527686273\n",
            "geeting 9.60922527686273\n",
            "geewkmy 9.60922527686273\n",
            "generates 9.60922527686273\n",
            "gent 9.60922527686273\n",
            "gentleman 9.60922527686273\n",
            "genuine 9.60922527686273\n",
            "genuineintel 9.60922527686273\n",
            "gesu8033751 9.60922527686273\n",
            "gesu8070586 9.60922527686273\n",
            "getorcreatestageduserid 9.60922527686273\n",
            "getphkdevuxfp9mog 9.60922527686273\n",
            "gfr 9.60922527686273\n",
            "gfrnddoc 9.60922527686273\n",
            "ghahgs00 9.60922527686273\n",
            "ghamaa04 9.60922527686273\n",
            "ghamaa09 9.60922527686273\n",
            "ghamaa17 9.60922527686273\n",
            "ghamaa20 9.60922527686273\n",
            "ghamaa21 9.60922527686273\n",
            "ghamas03 9.60922527686273\n",
            "ghamhm00 9.60922527686273\n",
            "ghamls00 9.60922527686273\n",
            "ghamna02 9.60922527686273\n",
            "gharawi 9.60922527686273\n",
            "gharkx00 9.60922527686273\n",
            "ghavanalkar 9.60922527686273\n",
            "ghoshal 9.60922527686273\n",
            "ghossc00 9.60922527686273\n",
            "ghost 9.60922527686273\n",
            "ghufran 9.60922527686273\n",
            "gi4 9.60922527686273\n",
            "giafh 9.60922527686273\n",
            "gibu 9.60922527686273\n",
            "gies 9.60922527686273\n",
            "gigabitethernet1 9.60922527686273\n",
            "gigabitethernet2 9.60922527686273\n",
            "giridly 9.60922527686273\n",
            "givel 9.60922527686273\n",
            "gjdredj 9.60922527686273\n",
            "glad 9.60922527686273\n",
            "glary 9.60922527686273\n",
            "glasses 9.60922527686273\n",
            "glitching 9.60922527686273\n",
            "gljrnk 9.60922527686273\n",
            "globalstudygroup 9.60922527686273\n",
            "globe 9.60922527686273\n",
            "glowing 9.60922527686273\n",
            "gm 9.60922527686273\n",
            "gma7im 9.60922527686273\n",
            "gmhltex 9.60922527686273\n",
            "gmt 9.60922527686273\n",
            "gngr 9.60922527686273\n",
            "goaf 9.60922527686273\n",
            "gohel 9.60922527686273\n",
            "golfprogroup 9.60922527686273\n",
            "golive 9.60922527686273\n",
            "googleapis 9.60922527686273\n",
            "goongnam 9.60922527686273\n",
            "gopiax01 9.60922527686273\n",
            "gopinath 9.60922527686273\n",
            "gour 9.60922527686273\n",
            "goutam 9.60922527686273\n",
            "govaz 9.60922527686273\n",
            "governance 9.60922527686273\n",
            "governmentmm 9.60922527686273\n",
            "govilx00 9.60922527686273\n",
            "govind 9.60922527686273\n",
            "govindasamy 9.60922527686273\n",
            "govt 9.60922527686273\n",
            "gpo 9.60922527686273\n",
            "gr223t 9.60922527686273\n",
            "grabupdate 9.60922527686273\n",
            "graceneufville 9.60922527686273\n",
            "gramma 9.60922527686273\n",
            "granddrycleaners 9.60922527686273\n",
            "granting 9.60922527686273\n",
            "gray 9.60922527686273\n",
            "grayscreen 9.60922527686273\n",
            "grc_sm_grc_rfc_role 9.60922527686273\n",
            "grcac_spool 9.60922527686273\n",
            "great 9.60922527686273\n",
            "greece 9.60922527686273\n",
            "grereting 9.60922527686273\n",
            "groovy 9.60922527686273\n",
            "groud 9.60922527686273\n",
            "grover 9.60922527686273\n",
            "grpgscmadma01 9.60922527686273\n",
            "grumnoud 9.60922527686273\n",
            "gs 9.60922527686273\n",
            "gsskrb5 9.60922527686273\n",
            "gstat 9.60922527686273\n",
            "gtech 9.60922527686273\n",
            "gubega00 9.60922527686273\n",
            "guiapocos 9.60922527686273\n",
            "guideonwebs 9.60922527686273\n",
            "guilty 9.60922527686273\n",
            "gujaratifavourite 9.60922527686273\n",
            "gulam 9.60922527686273\n",
            "gunasekaran 9.60922527686273\n",
            "guptpk00 9.60922527686273\n",
            "gurukx00 9.60922527686273\n",
            "gurung 9.60922527686273\n",
            "gustavo 9.60922527686273\n",
            "gwn2649pm 9.60922527686273\n",
            "gx6995 9.60922527686273\n",
            "gz 9.60922527686273\n",
            "gzhaat 9.60922527686273\n",
            "gzjcwacg9cpsx6wblg 9.60922527686273\n",
            "gzlp 9.60922527686273\n",
            "gzshengbaohg 9.60922527686273\n",
            "gzzpt 9.60922527686273\n",
            "gzzqf 9.60922527686273\n",
            "h1qvm 9.60922527686273\n",
            "h2131 9.60922527686273\n",
            "h2141 9.60922527686273\n",
            "h2so4 9.60922527686273\n",
            "h6e2at7du07f7a2ip 9.60922527686273\n",
            "hababi 9.60922527686273\n",
            "habass00 9.60922527686273\n",
            "habib 9.60922527686273\n",
            "habit 9.60922527686273\n",
            "hadi 9.60922527686273\n",
            "hafiz 9.60922527686273\n",
            "hafizam 9.60922527686273\n",
            "haider 9.60922527686273\n",
            "hajrjm00 9.60922527686273\n",
            "hakami 9.60922527686273\n",
            "halettebiermann 9.60922527686273\n",
            "halle 9.60922527686273\n",
            "hallway 9.60922527686273\n",
            "halt 9.60922527686273\n",
            "hamidi 9.60922527686273\n",
            "hammad 9.60922527686273\n",
            "hammki01 9.60922527686273\n",
            "hamoud 9.60922527686273\n",
            "hamper 9.60922527686273\n",
            "hampered 9.60922527686273\n",
            "hampering 9.60922527686273\n",
            "handlenonsuccessanddebuggernotification 9.60922527686273\n",
            "handleparseresult 9.60922527686273\n",
            "handler 9.60922527686273\n",
            "handleserverfiletransfermessage 9.60922527686273\n",
            "handling_rfp 9.60922527686273\n",
            "hands 9.60922527686273\n",
            "handset 9.60922527686273\n",
            "hangover 9.60922527686273\n",
            "hanif 9.60922527686273\n",
            "hans 9.60922527686273\n",
            "haponebitold 9.60922527686273\n",
            "happing 9.60922527686273\n",
            "harddiskvolume3 9.60922527686273\n",
            "harddrive 9.60922527686273\n",
            "hardik 9.60922527686273\n",
            "hardly 9.60922527686273\n",
            "harold 9.60922527686273\n",
            "harrison 9.60922527686273\n",
            "harroj00 9.60922527686273\n",
            "harshvardhan 9.60922527686273\n",
            "hasajs00 9.60922527686273\n",
            "hasakx00 9.60922527686273\n",
            "hasmorerowsindb 9.60922527686273\n",
            "hasnat 9.60922527686273\n",
            "hasu1280920 9.60922527686273\n",
            "hasu4438100 9.60922527686273\n",
            "hat 9.60922527686273\n",
            "hatem 9.60922527686273\n",
            "hathal 9.60922527686273\n",
            "hatim 9.60922527686273\n",
            "hatlta00 9.60922527686273\n",
            "hawkeyesss 9.60922527686273\n",
            "hay 9.60922527686273\n",
            "haziak00 9.60922527686273\n",
            "hcl 9.60922527686273\n",
            "hdktax 9.60922527686273\n",
            "healthcaresupport 9.60922527686273\n",
            "healthe 9.60922527686273\n",
            "healthservice 9.60922527686273\n",
            "healty 9.60922527686273\n",
            "heat 9.60922527686273\n",
            "heavies 9.60922527686273\n",
            "heclinggotof 9.60922527686273\n",
            "hectic 9.60922527686273\n",
            "hedriks 9.60922527686273\n",
            "hegnarelliliwenw 9.60922527686273\n",
            "helaax00 9.60922527686273\n",
            "heliyedekparca 9.60922527686273\n",
            "helmi 9.60922527686273\n",
            "helpful 9.60922527686273\n",
            "helps 9.60922527686273\n",
            "hemphil 9.60922527686273\n",
            "hempjj00 9.60922527686273\n",
            "henderson 9.60922527686273\n",
            "henrnx01 9.60922527686273\n",
            "henry1 9.60922527686273\n",
            "heop_aromatic 9.60922527686273\n",
            "herbob 9.60922527686273\n",
            "hernani 9.60922527686273\n",
            "heroisshit 9.60922527686273\n",
            "herokuapp 9.60922527686273\n",
            "herokussl 9.60922527686273\n",
            "herzqvtpb99m0cn 9.60922527686273\n",
            "heungjung 9.60922527686273\n",
            "hexane 9.60922527686273\n",
            "hexene 9.60922527686273\n",
            "hg 9.60922527686273\n",
            "hges2gnmvvv8mv8yi 9.60922527686273\n",
            "hgtu2408139 9.60922527686273\n",
            "hgtu2602041 9.60922527686273\n",
            "hgtu2602904 9.60922527686273\n",
            "hh7jjf1585585434c5df13d4d2f423c6de7abf2d1bbb5f97c5df13d4d2f423c6de7abf2d1bbb5f97c5df13d4d2f423c6de7abf2d1bbb5f97c5df13d4d2f423c6de7abf2d1bbb5f97c5df13d4d2f423c6de7abf2d1bbb5f97 9.60922527686273\n",
            "hidden 9.60922527686273\n",
            "hierarchy 9.60922527686273\n",
            "highlight 9.60922527686273\n",
            "hindering 9.60922527686273\n",
            "hirano 9.60922527686273\n",
            "hirxmj00 9.60922527686273\n",
            "his3t35rif0krjkn 9.60922527686273\n",
            "hizax00 9.60922527686273\n",
            "hjcu1109848 9.60922527686273\n",
            "hkalin 9.60922527686273\n",
            "hl420 9.60922527686273\n",
            "hl806 9.60922527686273\n",
            "hl808 9.60922527686273\n",
            "hl809 9.60922527686273\n",
            "hlbu1267130 9.60922527686273\n",
            "hlbu2065129 9.60922527686273\n",
            "hlbu2206280 9.60922527686273\n",
            "hlbu2217788 9.60922527686273\n",
            "hlbu2387064 9.60922527686273\n",
            "hlbu2856686 9.60922527686273\n",
            "hlbu2873868 9.60922527686273\n",
            "hlp 9.60922527686273\n",
            "hlxu8537024 9.60922527686273\n",
            "hlyctn2zx8zyjox1 9.60922527686273\n",
            "hmw 9.60922527686273\n",
            "hodonin 9.60922527686273\n",
            "hoffmanneitle 9.60922527686273\n",
            "hohnfx00 9.60922527686273\n",
            "holds 9.60922527686273\n",
            "holf 9.60922527686273\n",
            "hollandsebarton 9.60922527686273\n",
            "holtrm00 9.60922527686273\n",
            "homedrive 9.60922527686273\n",
            "homepath 9.60922527686273\n",
            "hong 9.60922527686273\n",
            "honglk00 9.60922527686273\n",
            "hope2011 9.60922527686273\n",
            "hopefully 9.60922527686273\n",
            "hose 9.60922527686273\n",
            "hostnames 9.60922527686273\n",
            "hotels 9.60922527686273\n",
            "hotphonecall 9.60922527686273\n",
            "hotspots 9.60922527686273\n",
            "hotu2412032 9.60922527686273\n",
            "hou 9.60922527686273\n",
            "houses 9.60922527686273\n",
            "housox00 9.60922527686273\n",
            "howsawi 9.60922527686273\n",
            "howsmi00 9.60922527686273\n",
            "hppe 9.60922527686273\n",
            "hr_center 9.60922527686273\n",
            "hris_staff 9.60922527686273\n",
            "hrmemutil 9.60922527686273\n",
            "hrsd 9.60922527686273\n",
            "hrservices_smp_administration 9.60922527686273\n",
            "hrservices_smp_dropcandidate 9.60922527686273\n",
            "hrservices_smp_invoices 9.60922527686273\n",
            "hrw 9.60922527686273\n",
            "hrwsrukhvhmuzhqwtwvqhtoxupxjbrvs 9.60922527686273\n",
            "hs 9.60922527686273\n",
            "hs823352 9.60922527686273\n",
            "hswawuo7c8axfxw3 9.60922527686273\n",
            "htmlpasta 9.60922527686273\n",
            "htpp 9.60922527686273\n",
            "hu 9.60922527686273\n",
            "hubarm00 9.60922527686273\n",
            "hughes 9.60922527686273\n",
            "huongdandatkeo 9.60922527686273\n",
            "hussrr00 9.60922527686273\n",
            "husssx07 9.60922527686273\n",
            "husstx02 9.60922527686273\n",
            "huttprimax 9.60922527686273\n",
            "huzhqjcq 9.60922527686273\n",
            "hvop 9.60922527686273\n",
            "hwa 9.60922527686273\n",
            "hwpopxsndrg4uc5y 9.60922527686273\n",
            "hxr 9.60922527686273\n",
            "hxueyojjrtgf 9.60922527686273\n",
            "hybrid 9.60922527686273\n",
            "hydrocarbon 9.60922527686273\n",
            "hydrochloric 9.60922527686273\n",
            "hydrogen 9.60922527686273\n",
            "hydroxide 9.60922527686273\n",
            "hysis 9.60922527686273\n",
            "hzo0aut97bfu7zweb 9.60922527686273\n",
            "i74 9.60922527686273\n",
            "ia 9.60922527686273\n",
            "iamm 9.60922527686273\n",
            "iamtech 9.60922527686273\n",
            "iasgroup 9.60922527686273\n",
            "iban 9.60922527686273\n",
            "ibds 9.60922527686273\n",
            "ibmdefaultbp 9.60922527686273\n",
            "icmp 9.60922527686273\n",
            "icp 9.60922527686273\n",
            "id1 9.60922527686273\n",
            "id2 9.60922527686273\n",
            "id2524b2f97 9.60922527686273\n",
            "id_update_request_rev1 9.60922527686273\n",
            "idbcommand 9.60922527686273\n",
            "ide 9.60922527686273\n",
            "ideal 9.60922527686273\n",
            "ideas 9.60922527686273\n",
            "identical 9.60922527686273\n",
            "identification 9.60922527686273\n",
            "identities 9.60922527686273\n",
            "identrust 9.60922527686273\n",
            "idisaudhasdhasdj 9.60922527686273\n",
            "idsakjfsanfaskj 9.60922527686273\n",
            "ienablelogger 9.60922527686273\n",
            "ienumerable 9.60922527686273\n",
            "ienumwbemclassobject 9.60922527686273\n",
            "iexplore 9.60922527686273\n",
            "ifc 9.60922527686273\n",
            "ifoperstatusdown 9.60922527686273\n",
            "ifrc 9.60922527686273\n",
            "ifs 9.60922527686273\n",
            "ih 9.60922527686273\n",
            "ih06 9.60922527686273\n",
            "ih08 9.60922527686273\n",
            "ihgd1u 9.60922527686273\n",
            "ihracat 9.60922527686273\n",
            "iibb9j93k0z 9.60922527686273\n",
            "iin 9.60922527686273\n",
            "iiqhrbatch 9.60922527686273\n",
            "ikon 9.60922527686273\n",
            "il 9.60922527686273\n",
            "illness 9.60922527686273\n",
            "iloveyoubaby1 9.60922527686273\n",
            "im0022389_pr 9.60922527686273\n",
            "im0035375 9.60922527686273\n",
            "im0039958 9.60922527686273\n",
            "im0040355 9.60922527686273\n",
            "im0040729 9.60922527686273\n",
            "im0041510 9.60922527686273\n",
            "im0041713 9.60922527686273\n",
            "im0041884 9.60922527686273\n",
            "im0042045 9.60922527686273\n",
            "im0042098 9.60922527686273\n",
            "im0042546 9.60922527686273\n",
            "im0042666 9.60922527686273\n",
            "im0043823 9.60922527686273\n",
            "im0043881 9.60922527686273\n",
            "im0043958 9.60922527686273\n",
            "im0044174 9.60922527686273\n",
            "im0044253 9.60922527686273\n",
            "im0044631 9.60922527686273\n",
            "im0044653 9.60922527686273\n",
            "im0044739 9.60922527686273\n",
            "im0044800 9.60922527686273\n",
            "im0045440 9.60922527686273\n",
            "im0045533 9.60922527686273\n",
            "im0045678 9.60922527686273\n",
            "im0045689 9.60922527686273\n",
            "im0045807 9.60922527686273\n",
            "im0046289 9.60922527686273\n",
            "im0046318 9.60922527686273\n",
            "im0046319 9.60922527686273\n",
            "im0046336 9.60922527686273\n",
            "im0046364 9.60922527686273\n",
            "im0046418 9.60922527686273\n",
            "im0046478 9.60922527686273\n",
            "im0046526 9.60922527686273\n",
            "im0046557 9.60922527686273\n",
            "im0046672 9.60922527686273\n",
            "im0046745 9.60922527686273\n",
            "im0046749 9.60922527686273\n",
            "im0047345 9.60922527686273\n",
            "im0047350 9.60922527686273\n",
            "im0047461 9.60922527686273\n",
            "im0047515 9.60922527686273\n",
            "im0047685 9.60922527686273\n",
            "im0047903 9.60922527686273\n",
            "im0047905 9.60922527686273\n",
            "im0048217 9.60922527686273\n",
            "im0048250 9.60922527686273\n",
            "im0048270 9.60922527686273\n",
            "im0048331 9.60922527686273\n",
            "im0048503 9.60922527686273\n",
            "im0048505 9.60922527686273\n",
            "im0048578 9.60922527686273\n",
            "im0048641 9.60922527686273\n",
            "im0048643 9.60922527686273\n",
            "im0048893 9.60922527686273\n",
            "im0048908 9.60922527686273\n",
            "im0048969 9.60922527686273\n",
            "im0048983 9.60922527686273\n",
            "im0049036 9.60922527686273\n",
            "im0049092 9.60922527686273\n",
            "im0049156 9.60922527686273\n",
            "im0049193 9.60922527686273\n",
            "im0049345 9.60922527686273\n",
            "im0049778 9.60922527686273\n",
            "im0049922 9.60922527686273\n",
            "im0049984 9.60922527686273\n",
            "im0050097 9.60922527686273\n",
            "im0050117 9.60922527686273\n",
            "im0050336 9.60922527686273\n",
            "im0050699 9.60922527686273\n",
            "im0050714 9.60922527686273\n",
            "im0050779 9.60922527686273\n",
            "im0050952 9.60922527686273\n",
            "im0051752 9.60922527686273\n",
            "im0052033 9.60922527686273\n",
            "im0052188 9.60922527686273\n",
            "im0052464 9.60922527686273\n",
            "im0052863 9.60922527686273\n",
            "im0052967 9.60922527686273\n",
            "im0053371 9.60922527686273\n",
            "im0053892 9.60922527686273\n",
            "imaba 9.60922527686273\n",
            "image001 9.60922527686273\n",
            "image006 9.60922527686273\n",
            "imagedesignersinc 9.60922527686273\n",
            "imagined 9.60922527686273\n",
            "img123101 9.60922527686273\n",
            "imgae 9.60922527686273\n",
            "imgbox 9.60922527686273\n",
            "imgur 9.60922527686273\n",
            "impactful 9.60922527686273\n",
            "impacts 9.60922527686273\n",
            "impairment 9.60922527686273\n",
            "implementation 9.60922527686273\n",
            "importa 9.60922527686273\n",
            "imported 9.60922527686273\n",
            "imports 9.60922527686273\n",
            "impression 9.60922527686273\n",
            "improving 9.60922527686273\n",
            "imt 9.60922527686273\n",
            "inability 9.60922527686273\n",
            "inaccessible 9.60922527686273\n",
            "inaccurate 9.60922527686273\n",
            "inactivate 9.60922527686273\n",
            "inappropriate 9.60922527686273\n",
            "inciden 9.60922527686273\n",
            "incidsent 9.60922527686273\n",
            "includetaskcanceledexceptions 9.60922527686273\n",
            "inclusion 9.60922527686273\n",
            "incompatibility 9.60922527686273\n",
            "incompatible 9.60922527686273\n",
            "inconso 9.60922527686273\n",
            "inconvenience 9.60922527686273\n",
            "incorporate 9.60922527686273\n",
            "incorporated 9.60922527686273\n",
            "incorporates 9.60922527686273\n",
            "incorrectly 9.60922527686273\n",
            "increased 9.60922527686273\n",
            "incumbent 9.60922527686273\n",
            "ind_pt 9.60922527686273\n",
            "indent 9.60922527686273\n",
            "indentity 9.60922527686273\n",
            "indesign 9.60922527686273\n",
            "indexer 9.60922527686273\n",
            "indexing 9.60922527686273\n",
            "indicates 9.60922527686273\n",
            "indirect 9.60922527686273\n",
            "individiually 9.60922527686273\n",
            "individually 9.60922527686273\n",
            "indoor 9.60922527686273\n",
            "ine 9.60922527686273\n",
            "ineffective 9.60922527686273\n",
            "inf 9.60922527686273\n",
            "infinitydeveloperspes 9.60922527686273\n",
            "info_sec_project 9.60922527686273\n",
            "infomieren 9.60922527686273\n",
            "informatio 9.60922527686273\n",
            "informations 9.60922527686273\n",
            "informatioshopname 9.60922527686273\n",
            "informing 9.60922527686273\n",
            "ingenia 9.60922527686273\n",
            "initialising 9.60922527686273\n",
            "initialize 9.60922527686273\n",
            "initially 9.60922527686273\n",
            "initiating 9.60922527686273\n",
            "initiator 9.60922527686273\n",
            "inje 9.60922527686273\n",
            "injury 9.60922527686273\n",
            "inn 9.60922527686273\n",
            "inner 9.60922527686273\n",
            "innerinvoke 9.60922527686273\n",
            "innov8 9.60922527686273\n",
            "inorder 9.60922527686273\n",
            "inplviewhash28d41366 9.60922527686273\n",
            "inprogress 9.60922527686273\n",
            "inputting 9.60922527686273\n",
            "inquire 9.60922527686273\n",
            "inquires 9.60922527686273\n",
            "inquiry 9.60922527686273\n",
            "insatalled 9.60922527686273\n",
            "insiderppe 9.60922527686273\n",
            "insisting 9.60922527686273\n",
            "inspected 9.60922527686273\n",
            "inst 9.60922527686273\n",
            "instaed 9.60922527686273\n",
            "instagram 9.60922527686273\n",
            "installsource 9.60922527686273\n",
            "instances 9.60922527686273\n",
            "instantly 9.60922527686273\n",
            "instructor 9.60922527686273\n",
            "insure 9.60922527686273\n",
            "int64 9.60922527686273\n",
            "integrate 9.60922527686273\n",
            "integrationservices 9.60922527686273\n",
            "intel 9.60922527686273\n",
            "intel64 9.60922527686273\n",
            "intention 9.60922527686273\n",
            "interception 9.60922527686273\n",
            "interfaceadminupoperdowntrigger 9.60922527686273\n",
            "intergraph 9.60922527686273\n",
            "interior 9.60922527686273\n",
            "internalinitiallobfs 9.60922527686273\n",
            "internalwritealltext 9.60922527686273\n",
            "internationally 9.60922527686273\n",
            "interrupt 9.60922527686273\n",
            "interrupting 9.60922527686273\n",
            "interruptions 9.60922527686273\n",
            "interrupts 9.60922527686273\n",
            "intervals 9.60922527686273\n",
            "intial 9.60922527686273\n",
            "intra 9.60922527686273\n",
            "introduction 9.60922527686273\n",
            "intrupts 9.60922527686273\n",
            "intrusion 9.60922527686273\n",
            "inustalition 9.60922527686273\n",
            "inv 9.60922527686273\n",
            "inverter 9.60922527686273\n",
            "investigated 9.60922527686273\n",
            "investigating 9.60922527686273\n",
            "investigations 9.60922527686273\n",
            "invetigate 9.60922527686273\n",
            "invistigate 9.60922527686273\n",
            "invited 9.60922527686273\n",
            "invoices1 9.60922527686273\n",
            "inztaqram 9.60922527686273\n",
            "ion 9.60922527686273\n",
            "iot 9.60922527686273\n",
            "iovation 9.60922527686273\n",
            "ip_softphone 9.60922527686273\n",
            "ipnfbqg2raz3asn4j631ha453bbr4h 9.60922527686273\n",
            "ipod 9.60922527686273\n",
            "ipv4 9.60922527686273\n",
            "iqbal1 9.60922527686273\n",
            "iqw 9.60922527686273\n",
            "ir_change_log 9.60922527686273\n",
            "ir_ls_hrc 9.60922527686273\n",
            "irfan 9.60922527686273\n",
            "iris 9.60922527686273\n",
            "isapi 9.60922527686273\n",
            "isdescribeonly 9.60922527686273\n",
            "isdsupportservices 9.60922527686273\n",
            "ise3595 9.60922527686273\n",
            "isfromef 9.60922527686273\n",
            "isg 9.60922527686273\n",
            "ishan 9.60922527686273\n",
            "isis 9.60922527686273\n",
            "islacangrejo 9.60922527686273\n",
            "island 9.60922527686273\n",
            "isnash 9.60922527686273\n",
            "isocynates 9.60922527686273\n",
            "isogta2021 9.60922527686273\n",
            "isolation 9.60922527686273\n",
            "isrg 9.60922527686273\n",
            "isse 9.60922527686273\n",
            "issu 9.60922527686273\n",
            "it0105 9.60922527686273\n",
            "it_erp_ehs_l2 9.60922527686273\n",
            "it_external_audits 9.60922527686273\n",
            "it_secuirty_team 9.60922527686273\n",
            "ita 9.60922527686273\n",
            "itf 9.60922527686273\n",
            "itf4097e 9.60922527686273\n",
            "itifsl 9.60922527686273\n",
            "itlt 9.60922527686273\n",
            "itmomintegtea 9.60922527686273\n",
            "iton 9.60922527686273\n",
            "itoolss 9.60922527686273\n",
            "itpk 9.60922527686273\n",
            "itunes 9.60922527686273\n",
            "iv 9.60922527686273\n",
            "ivr 9.60922527686273\n",
            "iw 9.60922527686273\n",
            "iw21 9.60922527686273\n",
            "iw28 9.60922527686273\n",
            "iw33 9.60922527686273\n",
            "iw38 9.60922527686273\n",
            "iw39 9.60922527686273\n",
            "iw41 9.60922527686273\n",
            "ixxxux00 9.60922527686273\n",
            "ixxxyx00 9.60922527686273\n",
            "j01 9.60922527686273\n",
            "j20d7b 9.60922527686273\n",
            "j25 9.60922527686273\n",
            "j26 9.60922527686273\n",
            "j2888hennene 9.60922527686273\n",
            "j29 9.60922527686273\n",
            "j2ee 9.60922527686273\n",
            "j30 9.60922527686273\n",
            "j4abq17dqadmb4hz 9.60922527686273\n",
            "j5sfioue15kxqs 9.60922527686273\n",
            "jab 9.60922527686273\n",
            "jabareman 9.60922527686273\n",
            "jabber 9.60922527686273\n",
            "jaber 9.60922527686273\n",
            "jacking 9.60922527686273\n",
            "jacobs 9.60922527686273\n",
            "jafata00 9.60922527686273\n",
            "jaffali 9.60922527686273\n",
            "jafgyfpe 9.60922527686273\n",
            "jagdish 9.60922527686273\n",
            "jainnx01 9.60922527686273\n",
            "jalawi 9.60922527686273\n",
            "jamaan 9.60922527686273\n",
            "jamaludeen 9.60922527686273\n",
            "jamesgonzaleswork1972 9.60922527686273\n",
            "jamjmm00 9.60922527686273\n",
            "jamjoom 9.60922527686273\n",
            "jamjooom 9.60922527686273\n",
            "jams 9.60922527686273\n",
            "jang 9.60922527686273\n",
            "jano 9.60922527686273\n",
            "january 9.60922527686273\n",
            "jared 9.60922527686273\n",
            "jassim 9.60922527686273\n",
            "javapath 9.60922527686273\n",
            "javeed 9.60922527686273\n",
            "jaxonsorensen 9.60922527686273\n",
            "jayamx00 9.60922527686273\n",
            "jazakallahukhair 9.60922527686273\n",
            "jb 9.60922527686273\n",
            "jbdldcvsaprm01 9.60922527686273\n",
            "jbla2101 9.60922527686273\n",
            "jbla2760 9.60922527686273\n",
            "jbla2767 9.60922527686273\n",
            "jblb3901 9.60922527686273\n",
            "jblc5vsaalm05 9.60922527686273\n",
            "jblc5vspaim02 9.60922527686273\n",
            "jblc5vsphis21 9.60922527686273\n",
            "jblc5vspqas05 9.60922527686273\n",
            "jblc5vspvbp02 9.60922527686273\n",
            "jblc5vstaim02 9.60922527686273\n",
            "jblc5vstaim03 9.60922527686273\n",
            "jblc6vphis07 9.60922527686273\n",
            "jblc6vsaalm06 9.60922527686273\n",
            "jblc6vspaim04 9.60922527686273\n",
            "jblc6vspdhc02 9.60922527686273\n",
            "jblc6vsphis08 9.60922527686273\n",
            "jblc6vspwdc01 9.60922527686273\n",
            "jblc6vstaim02 9.60922527686273\n",
            "jblc6vstaim03 9.60922527686273\n",
            "jblc7pesxcob02 9.60922527686273\n",
            "jblc7vsahis10 9.60922527686273\n",
            "jblc7vspaim02 9.60922527686273\n",
            "jblc7vspaim03 9.60922527686273\n",
            "jblc7vspdhc02 9.60922527686273\n",
            "jblc7vsphis08 9.60922527686273\n",
            "jblc7vspmdp01 9.60922527686273\n",
            "jblc7vspqas07 9.60922527686273\n",
            "jblc7vspwdc01 9.60922527686273\n",
            "jblc8_sm 9.60922527686273\n",
            "jblc8r6 9.60922527686273\n",
            "jblc8vsahis19 9.60922527686273\n",
            "jblc8vspaim02 9.60922527686273\n",
            "jblc8vspaim03 9.60922527686273\n",
            "jblc8vspaim04 9.60922527686273\n",
            "jblc8vspdhc02 9.60922527686273\n",
            "jblc8vsphis01 9.60922527686273\n",
            "jblc8vsphis15 9.60922527686273\n",
            "jblc8vsphis17 9.60922527686273\n",
            "jblc8vspopt01 9.60922527686273\n",
            "jblc8vspqas08 9.60922527686273\n",
            "jblc8vstaim04 9.60922527686273\n",
            "jblclvspols01 9.60922527686273\n",
            "jbldcd09 9.60922527686273\n",
            "jbldcf09 9.60922527686273\n",
            "jbldcpesxapp11ad 9.60922527686273\n",
            "jbldcpesxdb205 9.60922527686273\n",
            "jbldcpesxdb207 9.60922527686273\n",
            "jbldcpesxdb208 9.60922527686273\n",
            "jbldcpesxdmz01 9.60922527686273\n",
            "jbldcpesxdmz02 9.60922527686273\n",
            "jbldcpesxrhl01 9.60922527686273\n",
            "jbldcpesxsql02 9.60922527686273\n",
            "jbldcpspae103 9.60922527686273\n",
            "jbldcpspnas02 9.60922527686273\n",
            "jbldcpsppas01 9.60922527686273\n",
            "jbldcpspuch01 9.60922527686273\n",
            "jbldcpspuch02 9.60922527686273\n",
            "jbldcpspvcn03 9.60922527686273\n",
            "jbldcpspwms01 9.60922527686273\n",
            "jbldcresxdb204 9.60922527686273\n",
            "jbldcvadons01 9.60922527686273\n",
            "jbldcvadons02 9.60922527686273\n",
            "jbldcvapnsm02 9.60922527686273\n",
            "jbldcvapscm01 9.60922527686273\n",
            "jbldcvsahis20 9.60922527686273\n",
            "jbldcvsddas01 9.60922527686273\n",
            "jbldcvsddb203 9.60922527686273\n",
            "jbldcvsddb216 9.60922527686273\n",
            "jbldcvsddda01 9.60922527686273\n",
            "jbldcvsdepa01 9.60922527686273\n",
            "jbldcvsdk2s03 9.60922527686273\n",
            "jbldcvsdodw01 9.60922527686273\n",
            "jbldcvsdorg01 9.60922527686273\n",
            "jbldcvsdsql01 9.60922527686273\n",
            "jbldcvsdsql02 9.60922527686273\n",
            "jbldcvsdtest01 9.60922527686273\n",
            "jbldcvsdwat01 9.60922527686273\n",
            "jbldcvspaad01 9.60922527686273\n",
            "jbldcvspaod01 9.60922527686273\n",
            "jbldcvspasc05 9.60922527686273\n",
            "jbldcvspasp01 9.60922527686273\n",
            "jbldcvspavs02 9.60922527686273\n",
            "jbldcvspbzt01 9.60922527686273\n",
            "jbldcvspbzt02 9.60922527686273\n",
            "jbldcvspcas01 9.60922527686273\n",
            "jbldcvspcdir01 9.60922527686273\n",
            "jbldcvspclic01 9.60922527686273\n",
            "jbldcvspcol01 9.60922527686273\n",
            "jbldcvspcps02 9.60922527686273\n",
            "jbldcvspcsf03 9.60922527686273\n",
            "jbldcvspcsf04 9.60922527686273\n",
            "jbldcvspcst02 9.60922527686273\n",
            "jbldcvspcxa01 9.60922527686273\n",
            "jbldcvspdb213 9.60922527686273\n",
            "jbldcvspdb239 9.60922527686273\n",
            "jbldcvspdb241 9.60922527686273\n",
            "jbldcvspdb245 9.60922527686273\n",
            "jbldcvspdb252 9.60922527686273\n",
            "jbldcvspdcm01 9.60922527686273\n",
            "jbldcvspdcs01 9.60922527686273\n",
            "jbldcvspdhc01 9.60922527686273\n",
            "jbldcvspdhc02 9.60922527686273\n",
            "jbldcvspdsm01 9.60922527686273\n",
            "jbldcvspdsm02 9.60922527686273\n",
            "jbldcvspenf01 9.60922527686273\n",
            "jbldcvspepd01 9.60922527686273\n",
            "jbldcvspepd02 9.60922527686273\n",
            "jbldcvsperd02 9.60922527686273\n",
            "jbldcvspesl01 9.60922527686273\n",
            "jbldcvspewm02 9.60922527686273\n",
            "jbldcvspfax02 9.60922527686273\n",
            "jbldcvspfeg01 9.60922527686273\n",
            "jbldcvspica01 9.60922527686273\n",
            "jbldcvspiiq01 9.60922527686273\n",
            "jbldcvspiiq02 9.60922527686273\n",
            "jbldcvspiiq03 9.60922527686273\n",
            "jbldcvspiiq04 9.60922527686273\n",
            "jbldcvspims01 9.60922527686273\n",
            "jbldcvspind01 9.60922527686273\n",
            "jbldcvspipc02 9.60922527686273\n",
            "jbldcvspjbs01 9.60922527686273\n",
            "jbldcvspk2s02 9.60922527686273\n",
            "jbldcvsplfi01 9.60922527686273\n",
            "jbldcvspmox01 9.60922527686273\n",
            "jbldcvspmsc01 9.60922527686273\n",
            "jbldcvspmsc02 9.60922527686273\n",
            "jbldcvspmvm01 9.60922527686273\n",
            "jbldcvspndp01 9.60922527686273\n",
            "jbldcvspnms01 9.60922527686273\n",
            "jbldcvspnms02 9.60922527686273\n",
            "jbldcvspnpm01 9.60922527686273\n",
            "jbldcvspnpw02 9.60922527686273\n",
            "jbldcvspnsc01 9.60922527686273\n",
            "jbldcvspodb01 9.60922527686273\n",
            "jbldcvspoddw01 9.60922527686273\n",
            "jbldcvspoel01 9.60922527686273\n",
            "jbldcvspolh05 9.60922527686273\n",
            "jbldcvspomw01 9.60922527686273\n",
            "jbldcvsppac01 9.60922527686273\n",
            "jbldcvsppia01 9.60922527686273\n",
            "jbldcvsppia02 9.60922527686273\n",
            "jbldcvsppia04 9.60922527686273\n",
            "jbldcvspprc02 9.60922527686273\n",
            "jbldcvspprc03 9.60922527686273\n",
            "jbldcvspprc04 9.60922527686273\n",
            "jbldcvspqas01 9.60922527686273\n",
            "jbldcvspqrm01 9.60922527686273\n",
            "jbldcvsprbr03 9.60922527686273\n",
            "jbldcvsprbr04 9.60922527686273\n",
            "jbldcvsprms03 9.60922527686273\n",
            "jbldcvsprms04 9.60922527686273\n",
            "jbldcvsprms05 9.60922527686273\n",
            "jbldcvsprtm02 9.60922527686273\n",
            "jbldcvsps3d01 9.60922527686273\n",
            "jbldcvspsce04 9.60922527686273\n",
            "jbldcvspscs01 9.60922527686273\n",
            "jbldcvspsdm01 9.60922527686273\n",
            "jbldcvspsep01 9.60922527686273\n",
            "jbldcvspsep02 9.60922527686273\n",
            "jbldcvspsft0 9.60922527686273\n",
            "jbldcvspshp01 9.60922527686273\n",
            "jbldcvspsld01 9.60922527686273\n",
            "jbldcvspslm03 9.60922527686273\n",
            "jbldcvspsmt10 9.60922527686273\n",
            "jbldcvspsmt11 9.60922527686273\n",
            "jbldcvspsop01 9.60922527686273\n",
            "jbldcvspsql27 9.60922527686273\n",
            "jbldcvspsql28 9.60922527686273\n",
            "jbldcvspsr01 9.60922527686273\n",
            "jbldcvspsr02 9.60922527686273\n",
            "jbldcvspsss01 9.60922527686273\n",
            "jbldcvspsup01 9.60922527686273\n",
            "jbldcvspsvs01 9.60922527686273\n",
            "jbldcvsptd201 9.60922527686273\n",
            "jbldcvsptdc01 9.60922527686273\n",
            "jbldcvsptim01 9.60922527686273\n",
            "jbldcvsptit01 9.60922527686273\n",
            "jbldcvsptit04 9.60922527686273\n",
            "jbldcvsptls02 9.60922527686273\n",
            "jbldcvsptma02 9.60922527686273\n",
            "jbldcvsptma03 9.60922527686273\n",
            "jbldcvsptma04 9.60922527686273\n",
            "jbldcvsptma06 9.60922527686273\n",
            "jbldcvsptma07 9.60922527686273\n",
            "jbldcvsptma08 9.60922527686273\n",
            "jbldcvsptma09 9.60922527686273\n",
            "jbldcvsptma10 9.60922527686273\n",
            "jbldcvsptma11 9.60922527686273\n",
            "jbldcvsptma12 9.60922527686273\n",
            "jbldcvsptrx01 9.60922527686273\n",
            "jbldcvsptwe01 9.60922527686273\n",
            "jbldcvspucx02 9.60922527686273\n",
            "jbldcvspvbo01 9.60922527686273\n",
            "jbldcvspvbp14 9.60922527686273\n",
            "jbldcvspvca01 9.60922527686273\n",
            "jbldcvspvcb01 9.60922527686273\n",
            "jbldcvspvtl01 9.60922527686273\n",
            "jbldcvspwdc01 9.60922527686273\n",
            "jbldcvspxwm01 9.60922527686273\n",
            "jbldcvsrdb204 9.60922527686273\n",
            "jbldcvsrdb207 9.60922527686273\n",
            "jbldcvsrdoc02 9.60922527686273\n",
            "jbldcvssm04 9.60922527686273\n",
            "jbldcvsspsql25 9.60922527686273\n",
            "jbldcvssql25 9.60922527686273\n",
            "jbldcvstdb211 9.60922527686273\n",
            "jbldcvstinn01 9.60922527686273\n",
            "jbldcvstk2s01 9.60922527686273\n",
            "jbldcvstsps01 9.60922527686273\n",
            "jbldcvsusop01 9.60922527686273\n",
            "jbldcwvnpica01 9.60922527686273\n",
            "jbldcwvnpica02 9.60922527686273\n",
            "jbldcwvnpvcn01 9.60922527686273\n",
            "jbll1306 9.60922527686273\n",
            "jblpca03 9.60922527686273\n",
            "jblpca04 9.60922527686273\n",
            "jblpcpesxpkg01 9.60922527686273\n",
            "jbls0502 9.60922527686273\n",
            "jbls0702 9.60922527686273\n",
            "jbls0902 9.60922527686273\n",
            "jblscvspscm01 9.60922527686273\n",
            "jbltdcr1 9.60922527686273\n",
            "jbltfob 9.60922527686273\n",
            "jblu2603 9.60922527686273\n",
            "jblu4303 9.60922527686273\n",
            "jblv2503a 9.60922527686273\n",
            "jblvamcc01 9.60922527686273\n",
            "jbp 9.60922527686273\n",
            "jclvl 9.60922527686273\n",
            "jdafiasfjsafahhfs 9.60922527686273\n",
            "jdcvdprm01 9.60922527686273\n",
            "jdcvtsvn02 9.60922527686273\n",
            "je85oemozig2x4yq 9.60922527686273\n",
            "jeffrey 9.60922527686273\n",
            "jefri 9.60922527686273\n",
            "jenstc00 9.60922527686273\n",
            "jeragh 9.60922527686273\n",
            "jeyapaul 9.60922527686273\n",
            "jhaxak00 9.60922527686273\n",
            "jiajie 9.60922527686273\n",
            "jiangyin 9.60922527686273\n",
            "jillianbullockwriter 9.60922527686273\n",
            "jim 9.60922527686273\n",
            "jimenezv 9.60922527686273\n",
            "jirui 9.60922527686273\n",
            "jiteshkumar 9.60922527686273\n",
            "jjj 9.60922527686273\n",
            "jjyfkrjdogxmppjbcpi 9.60922527686273\n",
            "jleasm00 9.60922527686273\n",
            "jmrmfitym 9.60922527686273\n",
            "john 9.60922527686273\n",
            "johnrey 9.60922527686273\n",
            "joinee 9.60922527686273\n",
            "joint 9.60922527686273\n",
            "jomar 9.60922527686273\n",
            "joshmx00 9.60922527686273\n",
            "jpmxsmjnjq 9.60922527686273\n",
            "jqnulygkgemmto 9.60922527686273\n",
            "jr 9.60922527686273\n",
            "jsbcaddcpdhcp02 9.60922527686273\n",
            "jsbcaddcpjmp01 9.60922527686273\n",
            "jsbcaddcpprn01 9.60922527686273\n",
            "jsbcaddcpsepm01 9.60922527686273\n",
            "jsbcaddcpsql01 9.60922527686273\n",
            "jsbcadmf01clr02 9.60922527686273\n",
            "jsbcadmf03clr02 9.60922527686273\n",
            "jsbcadmf098clr01 9.60922527686273\n",
            "jsbcnf2f01clr02 9.60922527686273\n",
            "jsbcnf2f02clr02 9.60922527686273\n",
            "jsbcnf2f03clr01 9.60922527686273\n",
            "jsbcnf2f03clr02 9.60922527686273\n",
            "jsbcstcf01clr02 9.60922527686273\n",
            "jsbcvspdre01 9.60922527686273\n",
            "jsbcvspnws01 9.60922527686273\n",
            "jscbnf2f02clr03 9.60922527686273\n",
            "jscszqyhk6mucm1fk0hy0hjtygh4fwz64fidfuaiwh07kb4xsbn35jgr8paropgagborwgvcevjuxjd1 9.60922527686273\n",
            "jse 9.60922527686273\n",
            "json 9.60922527686273\n",
            "jtjewifyn 9.60922527686273\n",
            "juithen 9.60922527686273\n",
            "julasa00 9.60922527686273\n",
            "july3 9.60922527686273\n",
            "jumaah 9.60922527686273\n",
            "jumble 9.60922527686273\n",
            "jumps 9.60922527686273\n",
            "jun 9.60922527686273\n",
            "juntadeandalucia 9.60922527686273\n",
            "jurams00 9.60922527686273\n",
            "justbesarnia 9.60922527686273\n",
            "juuwpw6onwl1wkux 9.60922527686273\n",
            "juwafb00 9.60922527686273\n",
            "jwm 9.60922527686273\n",
            "jxlpi8xhsv 9.60922527686273\n",
            "jzi0hc 9.60922527686273\n",
            "k0llld9j 9.60922527686273\n",
            "k1n3pxnd5e6x2h09a 9.60922527686273\n",
            "k2rundev 9.60922527686273\n",
            "k2runprod 9.60922527686273\n",
            "k2runtest 9.60922527686273\n",
            "k4xqhb6u4fo 9.60922527686273\n",
            "k8g 9.60922527686273\n",
            "kabi 9.60922527686273\n",
            "kablfa00 9.60922527686273\n",
            "kafilul 9.60922527686273\n",
            "kakkss00 9.60922527686273\n",
            "kamal 9.60922527686273\n",
            "kamalak 9.60922527686273\n",
            "kamlesh 9.60922527686273\n",
            "kaniyamkulam 9.60922527686273\n",
            "kannan 9.60922527686273\n",
            "kanoo 9.60922527686273\n",
            "kanshara 9.60922527686273\n",
            "kansts00 9.60922527686273\n",
            "karim 9.60922527686273\n",
            "kasfajfsafhasfhaf 9.60922527686273\n",
            "kashif 9.60922527686273\n",
            "katljx00 9.60922527686273\n",
            "kattakkal 9.60922527686273\n",
            "kattpp00 9.60922527686273\n",
            "kattsx00 9.60922527686273\n",
            "kausvx00 9.60922527686273\n",
            "kawano 9.60922527686273\n",
            "kazuhiro 9.60922527686273\n",
            "kb 9.60922527686273\n",
            "kc 9.60922527686273\n",
            "kcs 9.60922527686273\n",
            "kdsidsiadsakfsas 9.60922527686273\n",
            "keehmk00 9.60922527686273\n",
            "keepers 9.60922527686273\n",
            "kentz 9.60922527686273\n",
            "kerberoast 9.60922527686273\n",
            "kerberos 9.60922527686273\n",
            "kernel 9.60922527686273\n",
            "keyword 9.60922527686273\n",
            "kfip 9.60922527686273\n",
            "kfu 9.60922527686273\n",
            "kgr 9.60922527686273\n",
            "kh0mu 9.60922527686273\n",
            "khajamm 9.60922527686273\n",
            "khalaa02 9.60922527686273\n",
            "khalmb01 9.60922527686273\n",
            "khammj00 9.60922527686273\n",
            "khan1 9.60922527686273\n",
            "khanix01 9.60922527686273\n",
            "khanmx08 9.60922527686273\n",
            "kharbanda 9.60922527686273\n",
            "kharbouch 9.60922527686273\n",
            "kharns00 9.60922527686273\n",
            "khatmk00 9.60922527686273\n",
            "khazi 9.60922527686273\n",
            "khobar 9.60922527686273\n",
            "khothm00 9.60922527686273\n",
            "kichen 9.60922527686273\n",
            "kick 9.60922527686273\n",
            "kid 9.60922527686273\n",
            "kidnly 9.60922527686273\n",
            "kikadavila 9.60922527686273\n",
            "kindky 9.60922527686273\n",
            "kindlt 9.60922527686273\n",
            "kinds 9.60922527686273\n",
            "kinknm2g 9.60922527686273\n",
            "kinldy 9.60922527686273\n",
            "kishpx00 9.60922527686273\n",
            "kizlarsoroyur 9.60922527686273\n",
            "kldinninger 9.60922527686273\n",
            "kliju 9.60922527686273\n",
            "klt9x5q3tj 9.60922527686273\n",
            "kmdvelhn6ghi7smbe9w 9.60922527686273\n",
            "kn7mc 9.60922527686273\n",
            "knowing 9.60922527686273\n",
            "knowledgebase 9.60922527686273\n",
            "knrowz 9.60922527686273\n",
            "ko 9.60922527686273\n",
            "kogamx03 9.60922527686273\n",
            "kone 9.60922527686273\n",
            "kordelservers 9.60922527686273\n",
            "korea 9.60922527686273\n",
            "kpi 9.60922527686273\n",
            "kpis 9.60922527686273\n",
            "kpro 9.60922527686273\n",
            "krg4flbh 9.60922527686273\n",
            "krishna 9.60922527686273\n",
            "krisrx02 9.60922527686273\n",
            "kristianfiedler 9.60922527686273\n",
            "kro 9.60922527686273\n",
            "krogue 9.60922527686273\n",
            "ks10100ue 9.60922527686273\n",
            "ktalents 9.60922527686273\n",
            "kttwx 9.60922527686273\n",
            "kucsojpvotbugpcnlhaxipdiaegds 9.60922527686273\n",
            "kumabx03 9.60922527686273\n",
            "kumanx04 9.60922527686273\n",
            "kumanx05 9.60922527686273\n",
            "kumapx04 9.60922527686273\n",
            "kumasx08 9.60922527686273\n",
            "kunchappan 9.60922527686273\n",
            "kung11ducationalstdydeveloperinvestmenty 9.60922527686273\n",
            "kungfrdyeducationalinvestment8agender 9.60922527686273\n",
            "kunwar 9.60922527686273\n",
            "kupidon_decrypt 9.60922527686273\n",
            "kuppam 9.60922527686273\n",
            "kurrak00 9.60922527686273\n",
            "kusumpokunasripushparamaya 9.60922527686273\n",
            "kuvk07l2dzj6wfc 9.60922527686273\n",
            "kvud_xrxip 9.60922527686273\n",
            "kwert 9.60922527686273\n",
            "kwjqbk2fw9p8q5y 9.60922527686273\n",
            "kxudi 9.60922527686273\n",
            "kyawtun119 9.60922527686273\n",
            "kyemtyjah 9.60922527686273\n",
            "kz 9.60922527686273\n",
            "kzex9vp0jfw6a8up1 9.60922527686273\n",
            "l0503 9.60922527686273\n",
            "l1305 9.60922527686273\n",
            "l1306 9.60922527686273\n",
            "l2132 9.60922527686273\n",
            "l2133 9.60922527686273\n",
            "l2311c 9.60922527686273\n",
            "l231c 9.60922527686273\n",
            "l3510 9.60922527686273\n",
            "l3901 9.60922527686273\n",
            "l7lju 9.60922527686273\n",
            "l95dtz8 9.60922527686273\n",
            "la6281 9.60922527686273\n",
            "labeled 9.60922527686273\n",
            "labelers 9.60922527686273\n",
            "labor 9.60922527686273\n",
            "labs 9.60922527686273\n",
            "lacasitadelaspalmas 9.60922527686273\n",
            "lacking 9.60922527686273\n",
            "laebat00 9.60922527686273\n",
            "lagged 9.60922527686273\n",
            "lags 9.60922527686273\n",
            "lahwe45a 9.60922527686273\n",
            "lakkundi 9.60922527686273\n",
            "lalit 9.60922527686273\n",
            "lalithkumar 9.60922527686273\n",
            "lamanak 9.60922527686273\n",
            "lambert 9.60922527686273\n",
            "lamis 9.60922527686273\n",
            "landcareus 9.60922527686273\n",
            "landingpage 9.60922527686273\n",
            "landscapes 9.60922527686273\n",
            "lapbel 9.60922527686273\n",
            "laps 9.60922527686273\n",
            "laptot 9.60922527686273\n",
            "largefamiliesonpurpose 9.60922527686273\n",
            "lasts 9.60922527686273\n",
            "laud 9.60922527686273\n",
            "launched 9.60922527686273\n",
            "laundry 9.60922527686273\n",
            "lavorl00 9.60922527686273\n",
            "lawnteam 9.60922527686273\n",
            "layeeque 9.60922527686273\n",
            "layer 9.60922527686273\n",
            "lazymodule 9.60922527686273\n",
            "lcd 9.60922527686273\n",
            "lcdcgg 9.60922527686273\n",
            "lcm 9.60922527686273\n",
            "lcs 9.60922527686273\n",
            "lcuster 9.60922527686273\n",
            "ld 9.60922527686273\n",
            "le 9.60922527686273\n",
            "le7dv4wry1qy0dozb 9.60922527686273\n",
            "leaders 9.60922527686273\n",
            "leading 9.60922527686273\n",
            "leads 9.60922527686273\n",
            "leaf 9.60922527686273\n",
            "leakage 9.60922527686273\n",
            "leaking 9.60922527686273\n",
            "leanproconsulting 9.60922527686273\n",
            "learing 9.60922527686273\n",
            "leave2 9.60922527686273\n",
            "lebiling 9.60922527686273\n",
            "leering 9.60922527686273\n",
            "legal 9.60922527686273\n",
            "lehyay00 9.60922527686273\n",
            "lelgzz 9.60922527686273\n",
            "lemieux 9.60922527686273\n",
            "lendojekam 9.60922527686273\n",
            "lenght 9.60922527686273\n",
            "lenkcp00 9.60922527686273\n",
            "lenove 9.60922527686273\n",
            "lens 9.60922527686273\n",
            "lepetitchou 9.60922527686273\n",
            "leroy 9.60922527686273\n",
            "leslettrespersanes 9.60922527686273\n",
            "lesson 9.60922527686273\n",
            "lety 9.60922527686273\n",
            "levelling 9.60922527686273\n",
            "lf 9.60922527686273\n",
            "lfq4x 9.60922527686273\n",
            "lfyxi0jeo0wpifhtiseug008jtaeg4vpfhmjguaqhgqug2b7 9.60922527686273\n",
            "lhasrs 9.60922527686273\n",
            "lhcplanningschedulingteam 9.60922527686273\n",
            "li 9.60922527686273\n",
            "liaison 9.60922527686273\n",
            "lian 9.60922527686273\n",
            "liason 9.60922527686273\n",
            "licensed 9.60922527686273\n",
            "licensing 9.60922527686273\n",
            "lid 9.60922527686273\n",
            "lifetofly 9.60922527686273\n",
            "lift 9.60922527686273\n",
            "lijo 9.60922527686273\n",
            "likely 9.60922527686273\n",
            "lilaram 9.60922527686273\n",
            "limitations 9.60922527686273\n",
            "linde 9.60922527686273\n",
            "lining 9.60922527686273\n",
            "linke 9.60922527686273\n",
            "linking 9.60922527686273\n",
            "liquidate 9.60922527686273\n",
            "liquidated 9.60922527686273\n",
            "liquids 9.60922527686273\n",
            "listedit 9.60922527686273\n",
            "listener 9.60922527686273\n",
            "listening 9.60922527686273\n",
            "listing 9.60922527686273\n",
            "litecoin 9.60922527686273\n",
            "little 9.60922527686273\n",
            "lives 9.60922527686273\n",
            "liveupdate 9.60922527686273\n",
            "lj2xwtcr7920v8 9.60922527686273\n",
            "ljinfu 9.60922527686273\n",
            "ljsdvgt5 9.60922527686273\n",
            "lk 9.60922527686273\n",
            "lkub7mdhxae5oc5aca4gldzg7kt8n2m 9.60922527686273\n",
            "llatak00 9.60922527686273\n",
            "lli 9.60922527686273\n",
            "llzpqab 9.60922527686273\n",
            "lmkennard 9.60922527686273\n",
            "ln9xg 9.60922527686273\n",
            "loadin 9.60922527686273\n",
            "loadlocalreleases 9.60922527686273\n",
            "loag 9.60922527686273\n",
            "loai 9.60922527686273\n",
            "localappdata 9.60922527686273\n",
            "locale 9.60922527686273\n",
            "localhost 9.60922527686273\n",
            "locally 9.60922527686273\n",
            "localreleasefile 9.60922527686273\n",
            "locator 9.60922527686273\n",
            "lockedout 9.60922527686273\n",
            "locker 9.60922527686273\n",
            "locking 9.60922527686273\n",
            "locks 9.60922527686273\n",
            "lodge 9.60922527686273\n",
            "log4jv 9.60922527686273\n",
            "logbook 9.60922527686273\n",
            "loge 9.60922527686273\n",
            "logfileentry 9.60922527686273\n",
            "logginh 9.60922527686273\n",
            "logically 9.60922527686273\n",
            "logifthrows 9.60922527686273\n",
            "loging 9.60922527686273\n",
            "logoff 9.60922527686273\n",
            "logonserver 9.60922527686273\n",
            "logout 9.60922527686273\n",
            "logspace 9.60922527686273\n",
            "lokamr00 9.60922527686273\n",
            "loky3 9.60922527686273\n",
            "lolo 9.60922527686273\n",
            "lone 9.60922527686273\n",
            "longed 9.60922527686273\n",
            "longest 9.60922527686273\n",
            "longfetchsize 9.60922527686273\n",
            "longmusic 9.60922527686273\n",
            "loop 9.60922527686273\n",
            "looping 9.60922527686273\n",
            "loos 9.60922527686273\n",
            "loosen 9.60922527686273\n",
            "loosing 9.60922527686273\n",
            "lorina 9.60922527686273\n",
            "loses 9.60922527686273\n",
            "losing 9.60922527686273\n",
            "loss_prevention_principles 9.60922527686273\n",
            "losses 9.60922527686273\n",
            "loujain 9.60922527686273\n",
            "louter 9.60922527686273\n",
            "lpequdeliren 9.60922527686273\n",
            "lpf1ccnvn 9.60922527686273\n",
            "lpp 9.60922527686273\n",
            "lpp12_buildings 9.60922527686273\n",
            "lpp_12 9.60922527686273\n",
            "lq 9.60922527686273\n",
            "lrct 9.60922527686273\n",
            "ls2gbejezgdy14hvhfp4jjzjkoimgkbzay 9.60922527686273\n",
            "ls400 9.60922527686273\n",
            "ls9areetm1cxszmsg 9.60922527686273\n",
            "lt133 9.60922527686273\n",
            "ltounkara 9.60922527686273\n",
            "ltp00950 9.60922527686273\n",
            "ltp01464 9.60922527686273\n",
            "ltp01542 9.60922527686273\n",
            "lubberhuizen 9.60922527686273\n",
            "lucky 9.60922527686273\n",
            "ludo 9.60922527686273\n",
            "ludwoodgroup 9.60922527686273\n",
            "lunch 9.60922527686273\n",
            "luo 9.60922527686273\n",
            "luqigan 9.60922527686273\n",
            "lv_spi 9.60922527686273\n",
            "lvc 9.60922527686273\n",
            "lx2 9.60922527686273\n",
            "ly 9.60922527686273\n",
            "lynsub 9.60922527686273\n",
            "m04 9.60922527686273\n",
            "m0_showmm00 9.60922527686273\n",
            "m0np_belaam00 9.60922527686273\n",
            "m0np_showmm00 9.60922527686273\n",
            "m1rd9egxfxinnsoq 9.60922527686273\n",
            "m20 9.60922527686273\n",
            "m229 9.60922527686273\n",
            "m24 9.60922527686273\n",
            "m2jt_lf 9.60922527686273\n",
            "m2mfbpsqgq0e2e20 9.60922527686273\n",
            "m2trf4490gp4 9.60922527686273\n",
            "m2w6rz 9.60922527686273\n",
            "m36 9.60922527686273\n",
            "m4tz0of0xi8o3brr 9.60922527686273\n",
            "m53 9.60922527686273\n",
            "m74 9.60922527686273\n",
            "m8pwsczg0bbzw48j7 9.60922527686273\n",
            "m_anfr_bsa 9.60922527686273\n",
            "m_angb_bsa 9.60922527686273\n",
            "mabdulbari 9.60922527686273\n",
            "mache 9.60922527686273\n",
            "machnx00 9.60922527686273\n",
            "machunion 9.60922527686273\n",
            "macro 9.60922527686273\n",
            "madame 9.60922527686273\n",
            "madhu 9.60922527686273\n",
            "madlul 9.60922527686273\n",
            "mafana 9.60922527686273\n",
            "magnet 9.60922527686273\n",
            "magnets 9.60922527686273\n",
            "mah 9.60922527686273\n",
            "mahdsh00 9.60922527686273\n",
            "mahendra 9.60922527686273\n",
            "mahendrabhai 9.60922527686273\n",
            "mahesx00 9.60922527686273\n",
            "mahir 9.60922527686273\n",
            "mahmhm00 9.60922527686273\n",
            "mahsoon 9.60922527686273\n",
            "mailfence 9.60922527686273\n",
            "mailguardonline 9.60922527686273\n",
            "mailitdaemon 9.60922527686273\n",
            "mailto 9.60922527686273\n",
            "mainly 9.60922527686273\n",
            "maintainer 9.60922527686273\n",
            "maintenace 9.60922527686273\n",
            "maintenances 9.60922527686273\n",
            "maitsx00 9.60922527686273\n",
            "majeed 9.60922527686273\n",
            "majid 9.60922527686273\n",
            "majo 9.60922527686273\n",
            "majority 9.60922527686273\n",
            "majot 9.60922527686273\n",
            "malaax00 9.60922527686273\n",
            "malcolmrifkind 9.60922527686273\n",
            "male 9.60922527686273\n",
            "maledombrezplacni 9.60922527686273\n",
            "malfunction 9.60922527686273\n",
            "malfunctioned 9.60922527686273\n",
            "malfuntioning 9.60922527686273\n",
            "maliax01 9.60922527686273\n",
            "malibari 9.60922527686273\n",
            "malik 9.60922527686273\n",
            "malik1 9.60922527686273\n",
            "malkaf00 9.60922527686273\n",
            "mallinckrodt 9.60922527686273\n",
            "malougoogleda 9.60922527686273\n",
            "maly 9.60922527686273\n",
            "manageddataaccess 9.60922527686273\n",
            "manages 9.60922527686273\n",
            "managing 9.60922527686273\n",
            "manhic 9.60922527686273\n",
            "mani 9.60922527686273\n",
            "manisx00 9.60922527686273\n",
            "manljb02 9.60922527686273\n",
            "manoj 9.60922527686273\n",
            "manojkumar 9.60922527686273\n",
            "manotosh 9.60922527686273\n",
            "manpower 9.60922527686273\n",
            "manutobis 9.60922527686273\n",
            "manxam00 9.60922527686273\n",
            "mapaa00 9.60922527686273\n",
            "mapafo00 9.60922527686273\n",
            "mapi 9.60922527686273\n",
            "mapkar 9.60922527686273\n",
            "mapp 9.60922527686273\n",
            "mapping 9.60922527686273\n",
            "maps 9.60922527686273\n",
            "maqsood 9.60922527686273\n",
            "mar 9.60922527686273\n",
            "marafiq 9.60922527686273\n",
            "march262020 9.60922527686273\n",
            "marcos 9.60922527686273\n",
            "mariarti 9.60922527686273\n",
            "marico 9.60922527686273\n",
            "mario 9.60922527686273\n",
            "mariya 9.60922527686273\n",
            "market 9.60922527686273\n",
            "markplus 9.60922527686273\n",
            "marred 9.60922527686273\n",
            "marrhx01 9.60922527686273\n",
            "marseille 9.60922527686273\n",
            "marshalling 9.60922527686273\n",
            "marssa00 9.60922527686273\n",
            "martial 9.60922527686273\n",
            "martin 9.60922527686273\n",
            "martrx00 9.60922527686273\n",
            "maseeh 9.60922527686273\n",
            "masg 9.60922527686273\n",
            "mashail 9.60922527686273\n",
            "mashresearchb 9.60922527686273\n",
            "masikini 9.60922527686273\n",
            "massages 9.60922527686273\n",
            "mastervisacloudesystemprtomicrosftwareus 9.60922527686273\n",
            "maternity 9.60922527686273\n",
            "mathew 9.60922527686273\n",
            "matl 9.60922527686273\n",
            "matlap 9.60922527686273\n",
            "maty 9.60922527686273\n",
            "maximized 9.60922527686273\n",
            "mb 9.60922527686273\n",
            "mb1a 9.60922527686273\n",
            "mb1b 9.60922527686273\n",
            "mb21 9.60922527686273\n",
            "mb23 9.60922527686273\n",
            "mb51 9.60922527686273\n",
            "mb52 9.60922527686273\n",
            "mbst 9.60922527686273\n",
            "mbz8fv 9.60922527686273\n",
            "mbzrrt 9.60922527686273\n",
            "mcafesecurity 9.60922527686273\n",
            "mci 9.60922527686273\n",
            "mcs400 9.60922527686273\n",
            "mcshanefund 9.60922527686273\n",
            "mda 9.60922527686273\n",
            "mdawmsav9tzkwxwqryq0xce50abhkecqn5zakwyu 9.60922527686273\n",
            "mdawmsd_acsci6_1dic7v 9.60922527686273\n",
            "mdawmsdqufjnnqfnskuqwxsfpyh0z9_qxomurtk0gi_jru_fkoaz7nchxvkot8dz8taty6hcxcf7as15lmdc9hy783ilcvbjcdijbjskoo 9.60922527686273\n",
            "mdt007 9.60922527686273\n",
            "mdt009 9.60922527686273\n",
            "mdt027 9.60922527686273\n",
            "mdt057 9.60922527686273\n",
            "mdt058 9.60922527686273\n",
            "mdt103 9.60922527686273\n",
            "mdt113 9.60922527686273\n",
            "mdt130 9.60922527686273\n",
            "mdt132 9.60922527686273\n",
            "mdt147 9.60922527686273\n",
            "mdt156 9.60922527686273\n",
            "mdt160 9.60922527686273\n",
            "me15 9.60922527686273\n",
            "me2l 9.60922527686273\n",
            "me2n 9.60922527686273\n",
            "me303 9.60922527686273\n",
            "me53n 9.60922527686273\n",
            "me_dashboard 9.60922527686273\n",
            "meadco 9.60922527686273\n",
            "mean 9.60922527686273\n",
            "measure 9.60922527686273\n",
            "measurement 9.60922527686273\n",
            "mech 9.60922527686273\n",
            "medical4 9.60922527686273\n",
            "medium 9.60922527686273\n",
            "medu5625436 9.60922527686273\n",
            "meggs 9.60922527686273\n",
            "mehsari 9.60922527686273\n",
            "mekapipe 9.60922527686273\n",
            "mel 9.60922527686273\n",
            "melvale 9.60922527686273\n",
            "memedarka 9.60922527686273\n",
            "memorandum 9.60922527686273\n",
            "memorize 9.60922527686273\n",
            "menosita 9.60922527686273\n",
            "mentioning 9.60922527686273\n",
            "merging 9.60922527686273\n",
            "meridiumact_default_sadara 9.60922527686273\n",
            "meridiumprd_default_sadara 9.60922527686273\n",
            "merms 9.60922527686273\n",
            "mersrekdocuments 9.60922527686273\n",
            "merza 9.60922527686273\n",
            "mesaage 9.60922527686273\n",
            "mesh 9.60922527686273\n",
            "mesoplano 9.60922527686273\n",
            "messaging 9.60922527686273\n",
            "messege 9.60922527686273\n",
            "messge 9.60922527686273\n",
            "methgal 9.60922527686273\n",
            "metoc 9.60922527686273\n",
            "metrics 9.60922527686273\n",
            "mexicanasanthropomorphic 9.60922527686273\n",
            "mezzanine 9.60922527686273\n",
            "mfc120u 9.60922527686273\n",
            "mfc23 9.60922527686273\n",
            "mgmt3850 9.60922527686273\n",
            "mi 9.60922527686273\n",
            "mian 9.60922527686273\n",
            "miandfish 9.60922527686273\n",
            "michal 9.60922527686273\n",
            "microfone 9.60922527686273\n",
            "microphilanthropies 9.60922527686273\n",
            "microphones 9.60922527686273\n",
            "micros0ft 9.60922527686273\n",
            "microsofte 9.60922527686273\n",
            "microsoftteam 9.60922527686273\n",
            "microstation 9.60922527686273\n",
            "middile 9.60922527686273\n",
            "midnight 9.60922527686273\n",
            "mids 9.60922527686273\n",
            "midyear 9.60922527686273\n",
            "mifastubiv 9.60922527686273\n",
            "miguel 9.60922527686273\n",
            "mijn 9.60922527686273\n",
            "millinewton 9.60922527686273\n",
            "millisecondstimeout 9.60922527686273\n",
            "ming 9.60922527686273\n",
            "minibulk 9.60922527686273\n",
            "minimized 9.60922527686273\n",
            "minimum 9.60922527686273\n",
            "ministry 9.60922527686273\n",
            "mirroring 9.60922527686273\n",
            "mis 9.60922527686273\n",
            "misharialafasy 9.60922527686273\n",
            "mishsx03 9.60922527686273\n",
            "mismatch 9.60922527686273\n",
            "mismatching 9.60922527686273\n",
            "mission 9.60922527686273\n",
            "missmatch 9.60922527686273\n",
            "misspells 9.60922527686273\n",
            "mistakes 9.60922527686273\n",
            "misuse 9.60922527686273\n",
            "mitigate 9.60922527686273\n",
            "mix 9.60922527686273\n",
            "mixed 9.60922527686273\n",
            "mixing 9.60922527686273\n",
            "mjor 9.60922527686273\n",
            "mkprbdchnawzb 9.60922527686273\n",
            "mm02 9.60922527686273\n",
            "mm_request 9.60922527686273\n",
            "mma 9.60922527686273\n",
            "mmar 9.60922527686273\n",
            "mmdi 9.60922527686273\n",
            "mmxijfvyokvnobcjiqg1rqy4yfpqgmwigzhq 9.60922527686273\n",
            "mne_databases 9.60922527686273\n",
            "mng_res_auf 9.60922527686273\n",
            "mnt3495 9.60922527686273\n",
            "moahmmed 9.60922527686273\n",
            "moawaa00 9.60922527686273\n",
            "mobeextrem 9.60922527686273\n",
            "mobilink 9.60922527686273\n",
            "mobilization 9.60922527686273\n",
            "mobilize 9.60922527686273\n",
            "mocayco 9.60922527686273\n",
            "models 9.60922527686273\n",
            "modern 9.60922527686273\n",
            "modes 9.60922527686273\n",
            "modifiable 9.60922527686273\n",
            "modifications 9.60922527686273\n",
            "modified 9.60922527686273\n",
            "modifying 9.60922527686273\n",
            "mohaax12 9.60922527686273\n",
            "mohabx01 9.60922527686273\n",
            "mohakx03 9.60922527686273\n",
            "mohamad 9.60922527686273\n",
            "mohams00 9.60922527686273\n",
            "mohamud 9.60922527686273\n",
            "mohamx06 9.60922527686273\n",
            "mohan 9.60922527686273\n",
            "mohanan 9.60922527686273\n",
            "mohandes 9.60922527686273\n",
            "mohazu00 9.60922527686273\n",
            "mohiuddin 9.60922527686273\n",
            "mohsin 9.60922527686273\n",
            "moi 9.60922527686273\n",
            "moieed 9.60922527686273\n",
            "mokkha 9.60922527686273\n",
            "mon 9.60922527686273\n",
            "monalisapizzeriasi 9.60922527686273\n",
            "moncler 9.60922527686273\n",
            "monday 9.60922527686273\n",
            "monero 9.60922527686273\n",
            "monochlorobenzene 9.60922527686273\n",
            "monoxide 9.60922527686273\n",
            "mony 9.60922527686273\n",
            "monykandan 9.60922527686273\n",
            "mooc 9.60922527686273\n",
            "moore 9.60922527686273\n",
            "morenodorf 9.60922527686273\n",
            "morentok 9.60922527686273\n",
            "moring 9.60922527686273\n",
            "mostmkru 9.60922527686273\n",
            "mot 9.60922527686273\n",
            "motaz 9.60922527686273\n",
            "motherboard 9.60922527686273\n",
            "motion 9.60922527686273\n",
            "motivation 9.60922527686273\n",
            "mottair 9.60922527686273\n",
            "motu6724456 9.60922527686273\n",
            "moueed 9.60922527686273\n",
            "mounting 9.60922527686273\n",
            "mountpoint 9.60922527686273\n",
            "mouthpiece 9.60922527686273\n",
            "moutw 9.60922527686273\n",
            "movements 9.60922527686273\n",
            "movie 9.60922527686273\n",
            "mp 9.60922527686273\n",
            "mp4 9.60922527686273\n",
            "mp51 9.60922527686273\n",
            "mpe 9.60922527686273\n",
            "mpg 9.60922527686273\n",
            "mplastics 9.60922527686273\n",
            "mpod 9.60922527686273\n",
            "mpsnare 9.60922527686273\n",
            "mqeiq 9.60922527686273\n",
            "mriyas 9.60922527686273\n",
            "mrj0ldsp 9.60922527686273\n",
            "mrku3410070 9.60922527686273\n",
            "mrku3824424 9.60922527686273\n",
            "mrku5564964 9.60922527686273\n",
            "mrku5680711 9.60922527686273\n",
            "mrku6183690 9.60922527686273\n",
            "mrku9765680 9.60922527686273\n",
            "mrologistics 9.60922527686273\n",
            "mrslove 9.60922527686273\n",
            "mrsw5596 9.60922527686273\n",
            "mru5820 9.60922527686273\n",
            "ms565 9.60922527686273\n",
            "ms568 9.60922527686273\n",
            "ms732 9.60922527686273\n",
            "ms910 9.60922527686273\n",
            "msajor 9.60922527686273\n",
            "msar 9.60922527686273\n",
            "msc 9.60922527686273\n",
            "mscluster 9.60922527686273\n",
            "msd 9.60922527686273\n",
            "msdtsserver120 9.60922527686273\n",
            "msgactsrv 9.60922527686273\n",
            "msgcounter 9.60922527686273\n",
            "msheldmsg 9.60922527686273\n",
            "msi 9.60922527686273\n",
            "msku1874304 9.60922527686273\n",
            "msr 9.60922527686273\n",
            "mstr 9.60922527686273\n",
            "mtemas 9.60922527686273\n",
            "mtk 9.60922527686273\n",
            "mtm 9.60922527686273\n",
            "mtr00724 9.60922527686273\n",
            "mtyp 9.60922527686273\n",
            "mualkh00 9.60922527686273\n",
            "muddvx00 9.60922527686273\n",
            "mudurr00 9.60922527686273\n",
            "mughsa00 9.60922527686273\n",
            "muhaam01 9.60922527686273\n",
            "muhaideen 9.60922527686273\n",
            "muhasd00 9.60922527686273\n",
            "muilwr00 9.60922527686273\n",
            "mujeeb 9.60922527686273\n",
            "mukamx00 9.60922527686273\n",
            "mulayh 9.60922527686273\n",
            "multiples 9.60922527686273\n",
            "multiply 9.60922527686273\n",
            "multiplying 9.60922527686273\n",
            "mulye 9.60922527686273\n",
            "mummer 9.60922527686273\n",
            "munib 9.60922527686273\n",
            "munmun 9.60922527686273\n",
            "murad 9.60922527686273\n",
            "murimx00 9.60922527686273\n",
            "murlikrishna 9.60922527686273\n",
            "musa 9.60922527686273\n",
            "musana00 9.60922527686273\n",
            "muse 9.60922527686273\n",
            "mushabbab 9.60922527686273\n",
            "mushmx02 9.60922527686273\n",
            "mushtaq 9.60922527686273\n",
            "mushux00 9.60922527686273\n",
            "mustaf 9.60922527686273\n",
            "muthu 9.60922527686273\n",
            "muthukumar 9.60922527686273\n",
            "muttu 9.60922527686273\n",
            "mutu 9.60922527686273\n",
            "mutual 9.60922527686273\n",
            "muzaffar 9.60922527686273\n",
            "mva 9.60922527686273\n",
            "mwczc5011dwh 9.60922527686273\n",
            "mwebsoft 9.60922527686273\n",
            "mwtrf4320b9r 9.60922527686273\n",
            "mwtrf4350fp1 9.60922527686273\n",
            "myelitedesk2020 9.60922527686273\n",
            "mygpstrip 9.60922527686273\n",
            "myjdsq 9.60922527686273\n",
            "mynacx00 9.60922527686273\n",
            "mynote2020 9.60922527686273\n",
            "mypicks4u 9.60922527686273\n",
            "myq 9.60922527686273\n",
            "myside 9.60922527686273\n",
            "mystc 9.60922527686273\n",
            "myvplex 9.60922527686273\n",
            "mywipro 9.60922527686273\n",
            "mz6nh 9.60922527686273\n",
            "n0 9.60922527686273\n",
            "n122trx0221 9.60922527686273\n",
            "n122trx0313 9.60922527686273\n",
            "n2 9.60922527686273\n",
            "n58 9.60922527686273\n",
            "n91t78dxr3 9.60922527686273\n",
            "na200 9.60922527686273\n",
            "nabeel 9.60922527686273\n",
            "nabi 9.60922527686273\n",
            "nabirx00 9.60922527686273\n",
            "nacemo 9.60922527686273\n",
            "nafforah 9.60922527686273\n",
            "naffoura 9.60922527686273\n",
            "nagano 9.60922527686273\n",
            "nagen 9.60922527686273\n",
            "nagy 9.60922527686273\n",
            "naidkx00 9.60922527686273\n",
            "naidoo 9.60922527686273\n",
            "najeeb 9.60922527686273\n",
            "najla 9.60922527686273\n",
            "nammudeboolokam 9.60922527686273\n",
            "nan 9.60922527686273\n",
            "narendra 9.60922527686273\n",
            "narottam 9.60922527686273\n",
            "nas 9.60922527686273\n",
            "nasemx01 9.60922527686273\n",
            "naser 9.60922527686273\n",
            "nasirabbas80 9.60922527686273\n",
            "nasproje 9.60922527686273\n",
            "nassassry 9.60922527686273\n",
            "nasshx00 9.60922527686273\n",
            "nassmk00 9.60922527686273\n",
            "natamx00 9.60922527686273\n",
            "nathalie 9.60922527686273\n",
            "nation 9.60922527686273\n",
            "natural 9.60922527686273\n",
            "navigation 9.60922527686273\n",
            "nazifh00 9.60922527686273\n",
            "nbwvg2egflr8t2da1 9.60922527686273\n",
            "nbxicheqi 9.60922527686273\n",
            "nc 9.60922527686273\n",
            "ndemestrvvjpcqnxcaduejct 9.60922527686273\n",
            "nearmes 9.60922527686273\n",
            "neeful 9.60922527686273\n",
            "neeryx00 9.60922527686273\n",
            "negatively 9.60922527686273\n",
            "negligence 9.60922527686273\n",
            "neighboring 9.60922527686273\n",
            "nerwork 9.60922527686273\n",
            "nested 9.60922527686273\n",
            "neteork 9.60922527686273\n",
            "netportal 9.60922527686273\n",
            "netview 9.60922527686273\n",
            "netwaver 9.60922527686273\n",
            "netwok 9.60922527686273\n",
            "neuman 9.60922527686273\n",
            "newcomer 9.60922527686273\n",
            "newest 9.60922527686273\n",
            "newitpagamentofor 9.60922527686273\n",
            "newmessage 9.60922527686273\n",
            "nezar 9.60922527686273\n",
            "nf 9.60922527686273\n",
            "nf3ipqjivskqn9rkslu058sxje0xxyqijywbti3r 9.60922527686273\n",
            "nfc 9.60922527686273\n",
            "nfsserver_pkg 9.60922527686273\n",
            "ngannt 9.60922527686273\n",
            "ngunolrcspcrxldspn 9.60922527686273\n",
            "ngy43 9.60922527686273\n",
            "nhaccuatui 9.60922527686273\n",
            "nhsd 9.60922527686273\n",
            "niaconucil 9.60922527686273\n",
            "nicely 9.60922527686273\n",
            "nicola_hodson 9.60922527686273\n",
            "nights 9.60922527686273\n",
            "ninja 9.60922527686273\n",
            "nit 9.60922527686273\n",
            "nizam 9.60922527686273\n",
            "nktwx 9.60922527686273\n",
            "nmon 9.60922527686273\n",
            "no_polling_policy 9.60922527686273\n",
            "noaina00 9.60922527686273\n",
            "noblepublicschoolkgn 9.60922527686273\n",
            "noc 9.60922527686273\n",
            "nod 9.60922527686273\n",
            "node5 9.60922527686273\n",
            "nodenode 9.60922527686273\n",
            "nodes 9.60922527686273\n",
            "noface 9.60922527686273\n",
            "noman 9.60922527686273\n",
            "noncae 9.60922527686273\n",
            "nonsense 9.60922527686273\n",
            "nonsenseds 9.60922527686273\n",
            "noprint 9.60922527686273\n",
            "nora 9.60922527686273\n",
            "norah 9.60922527686273\n",
            "noreply 9.60922527686273\n",
            "normalize 9.60922527686273\n",
            "norsk 9.60922527686273\n",
            "norstar 9.60922527686273\n",
            "norwegianallinternal 9.60922527686273\n",
            "notconfigured 9.60922527686273\n",
            "nothging 9.60922527686273\n",
            "notices 9.60922527686273\n",
            "noticing 9.60922527686273\n",
            "notified 9.60922527686273\n",
            "noting 9.60922527686273\n",
            "notworking 9.60922527686273\n",
            "noura 9.60922527686273\n",
            "nowadays 9.60922527686273\n",
            "npblux 9.60922527686273\n",
            "npg 9.60922527686273\n",
            "nrhlxbt9covscex9b 9.60922527686273\n",
            "nscpatana 9.60922527686273\n",
            "nsgs 9.60922527686273\n",
            "nspowersupplychanged 9.60922527686273\n",
            "nsvoltagechanged 9.60922527686273\n",
            "nterface 9.60922527686273\n",
            "nu 9.60922527686273\n",
            "nuance 9.60922527686273\n",
            "nuke 9.60922527686273\n",
            "number_of_processors 9.60922527686273\n",
            "numbet 9.60922527686273\n",
            "numeri 9.60922527686273\n",
            "numerous 9.60922527686273\n",
            "numper 9.60922527686273\n",
            "nutarborg 9.60922527686273\n",
            "nval 9.60922527686273\n",
            "nvob 9.60922527686273\n",
            "nvrs 9.60922527686273\n",
            "nwwgbluv65j6g0xgr 9.60922527686273\n",
            "nyoxibwer 9.60922527686273\n",
            "nywmbvkbzscbzr9ebsmbkkqhtiqpy17gx9xlw7rwci9mf257h8p4g6sqbfwfx4fm 9.60922527686273\n",
            "o5jwwhxlyairnobmtd 9.60922527686273\n",
            "oab 9.60922527686273\n",
            "oajdasnndkdahm 9.60922527686273\n",
            "oas 9.60922527686273\n",
            "oauth2 9.60922527686273\n",
            "oaw5ibkcxru 9.60922527686273\n",
            "ob 9.60922527686273\n",
            "obadah 9.60922527686273\n",
            "obd73a 9.60922527686273\n",
            "obfhpfvweftmhm 9.60922527686273\n",
            "obkjtp 9.60922527686273\n",
            "obokay 9.60922527686273\n",
            "observing 9.60922527686273\n",
            "obsolete 9.60922527686273\n",
            "obstructing 9.60922527686273\n",
            "occupancy 9.60922527686273\n",
            "occurence 9.60922527686273\n",
            "ocr 9.60922527686273\n",
            "ocsp 9.60922527686273\n",
            "octene 9.60922527686273\n",
            "od 9.60922527686273\n",
            "odaktemellisesi 9.60922527686273\n",
            "odbs 9.60922527686273\n",
            "odcb 9.60922527686273\n",
            "odoncrol 9.60922527686273\n",
            "odonrx00 9.60922527686273\n",
            "odor 9.60922527686273\n",
            "odp 9.60922527686273\n",
            "odynbk 9.60922527686273\n",
            "oe 9.60922527686273\n",
            "offcialwrittencomplaint 9.60922527686273\n",
            "offered 9.60922527686273\n",
            "officedesk10 9.60922527686273\n",
            "officehnoc 9.60922527686273\n",
            "officeinventorys 9.60922527686273\n",
            "officemtr 9.60922527686273\n",
            "officesuited 9.60922527686273\n",
            "officesuitesoft 9.60922527686273\n",
            "offload 9.60922527686273\n",
            "ofga 9.60922527686273\n",
            "ofxvp 9.60922527686273\n",
            "ohalnf00 9.60922527686273\n",
            "ohb 9.60922527686273\n",
            "ohood 9.60922527686273\n",
            "oi2jidsdjsdd 9.60922527686273\n",
            "oing 9.60922527686273\n",
            "ojqijy52fl19aplw4tw 9.60922527686273\n",
            "okta 9.60922527686273\n",
            "ol 9.60922527686273\n",
            "older 9.60922527686273\n",
            "oliver 9.60922527686273\n",
            "olympicsmalarkey 9.60922527686273\n",
            "om4bkcvea 9.60922527686273\n",
            "omaincontroller 9.60922527686273\n",
            "omaraa00 9.60922527686273\n",
            "ompsai1 9.60922527686273\n",
            "omrahx00 9.60922527686273\n",
            "omw_connector 9.60922527686273\n",
            "onayhs00 9.60922527686273\n",
            "onbehlaf 9.60922527686273\n",
            "onboard 9.60922527686273\n",
            "onboarders 9.60922527686273\n",
            "onedrivecommercial 9.60922527686273\n",
            "onenote 9.60922527686273\n",
            "oneplus 9.60922527686273\n",
            "oneu0123233 9.60922527686273\n",
            "ongoing 9.60922527686273\n",
            "onl 9.60922527686273\n",
            "onw 9.60922527686273\n",
            "oof 9.60922527686273\n",
            "ook 9.60922527686273\n",
            "op 9.60922527686273\n",
            "opcenum 9.60922527686273\n",
            "openconnector 9.60922527686273\n",
            "openening 9.60922527686273\n",
            "openning 9.60922527686273\n",
            "openssh 9.60922527686273\n",
            "operatingsystem 9.60922527686273\n",
            "operationsmanager 9.60922527686273\n",
            "opetileon 9.60922527686273\n",
            "opining 9.60922527686273\n",
            "opisoy 9.60922527686273\n",
            "opned 9.60922527686273\n",
            "opposed 9.60922527686273\n",
            "ops 9.60922527686273\n",
            "optic 9.60922527686273\n",
            "opv 9.60922527686273\n",
            "opwp 9.60922527686273\n",
            "ora1120 9.60922527686273\n",
            "ora_home 9.60922527686273\n",
            "oraclecommand 9.60922527686273\n",
            "oraclecommandimpl 9.60922527686273\n",
            "oracleconnection 9.60922527686273\n",
            "oracleconnectionimpl 9.60922527686273\n",
            "oracledatareaderimpl 9.60922527686273\n",
            "oracledependencyimpl 9.60922527686273\n",
            "oracleexception 9.60922527686273\n",
            "oracleinternal 9.60922527686273\n",
            "oraclelogicaltransaction 9.60922527686273\n",
            "oracleparametercollection 9.60922527686273\n",
            "orcale 9.60922527686273\n",
            "orcldependencyimpl 9.60922527686273\n",
            "orcwj 9.60922527686273\n",
            "ord 9.60922527686273\n",
            "ordering 9.60922527686273\n",
            "orderrys 9.60922527686273\n",
            "ordertoproject 9.60922527686273\n",
            "organizational 9.60922527686273\n",
            "orgid 9.60922527686273\n",
            "orgin 9.60922527686273\n",
            "orh 9.60922527686273\n",
            "origin 9.60922527686273\n",
            "originalpath 9.60922527686273\n",
            "origins 9.60922527686273\n",
            "orlova 9.60922527686273\n",
            "orp 9.60922527686273\n",
            "osama 9.60922527686273\n",
            "osid 9.60922527686273\n",
            "osloger 9.60922527686273\n",
            "oss_304705 9.60922527686273\n",
            "oss_73578414 9.60922527686273\n",
            "ossmu 9.60922527686273\n",
            "ost 9.60922527686273\n",
            "otc_edsdc 9.60922527686273\n",
            "otc_rpt 9.60922527686273\n",
            "otfqdbu2mbinwy9kc7mnldvuw1raruclgadeaq36uqy9uv1atnstqbejf3ft2r7sm4x1nczg3i8s0gkxylggpcmih0xkkxrls7eps 9.60922527686273\n",
            "otps 9.60922527686273\n",
            "ottenbourg 9.60922527686273\n",
            "ouc 9.60922527686273\n",
            "ouchi 9.60922527686273\n",
            "oudax 9.60922527686273\n",
            "ous 9.60922527686273\n",
            "ouster 9.60922527686273\n",
            "outputs 9.60922527686273\n",
            "outsourcing 9.60922527686273\n",
            "ova 9.60922527686273\n",
            "ovc 9.60922527686273\n",
            "ovconfd 9.60922527686273\n",
            "ovcs 9.60922527686273\n",
            "overhead 9.60922527686273\n",
            "overheating 9.60922527686273\n",
            "overlapping 9.60922527686273\n",
            "override 9.60922527686273\n",
            "overriding 9.60922527686273\n",
            "overtimes 9.60922527686273\n",
            "overwrote 9.60922527686273\n",
            "ovow 9.60922527686273\n",
            "owa 9.60922527686273\n",
            "owenpj00 9.60922527686273\n",
            "ower 9.60922527686273\n",
            "owst084 9.60922527686273\n",
            "owst086 9.60922527686273\n",
            "oxfam 9.60922527686273\n",
            "ozb 9.60922527686273\n",
            "p001 9.60922527686273\n",
            "p149 9.60922527686273\n",
            "p209 9.60922527686273\n",
            "p210 9.60922527686273\n",
            "p250 9.60922527686273\n",
            "p255 9.60922527686273\n",
            "p2604 9.60922527686273\n",
            "p265 9.60922527686273\n",
            "p270 9.60922527686273\n",
            "p299 9.60922527686273\n",
            "p3 9.60922527686273\n",
            "p30 9.60922527686273\n",
            "p36 9.60922527686273\n",
            "p360 9.60922527686273\n",
            "p375 9.60922527686273\n",
            "p380 9.60922527686273\n",
            "p4 9.60922527686273\n",
            "p61clnt200 9.60922527686273\n",
            "p779 9.60922527686273\n",
            "p7hne 9.60922527686273\n",
            "p822 9.60922527686273\n",
            "p902 9.60922527686273\n",
            "pa10 9.60922527686273\n",
            "pa1clnt300 9.60922527686273\n",
            "pa20 9.60922527686273\n",
            "pa30 9.60922527686273\n",
            "pa41 9.60922527686273\n",
            "pa70 9.60922527686273\n",
            "pa_sqw 9.60922527686273\n",
            "pace 9.60922527686273\n",
            "pack 9.60922527686273\n",
            "padhnk00 9.60922527686273\n",
            "paiancil 9.60922527686273\n",
            "paichecafe 9.60922527686273\n",
            "pain 9.60922527686273\n",
            "paint 9.60922527686273\n",
            "painter 9.60922527686273\n",
            "paiolets 9.60922527686273\n",
            "palani 9.60922527686273\n",
            "palchem3 9.60922527686273\n",
            "palgan 9.60922527686273\n",
            "palgds00 9.60922527686273\n",
            "pall 9.60922527686273\n",
            "palustris 9.60922527686273\n",
            "pan 9.60922527686273\n",
            "pancnm00 9.60922527686273\n",
            "pandtelectric 9.60922527686273\n",
            "papedx00 9.60922527686273\n",
            "papper 9.60922527686273\n",
            "paps 9.60922527686273\n",
            "paradez 9.60922527686273\n",
            "paraffin 9.60922527686273\n",
            "parag 9.60922527686273\n",
            "parallelly 9.60922527686273\n",
            "paramcoll 9.60922527686273\n",
            "paratherm 9.60922527686273\n",
            "parikx01 9.60922527686273\n",
            "parisgranhotels 9.60922527686273\n",
            "parking 9.60922527686273\n",
            "partha 9.60922527686273\n",
            "parties 9.60922527686273\n",
            "partition 9.60922527686273\n",
            "partners 9.60922527686273\n",
            "pasaron 9.60922527686273\n",
            "pashing 9.60922527686273\n",
            "passcodes 9.60922527686273\n",
            "passing 9.60922527686273\n",
            "passport 9.60922527686273\n",
            "passthrough 9.60922527686273\n",
            "passwork 9.60922527686273\n",
            "pastebin 9.60922527686273\n",
            "pasw3750 9.60922527686273\n",
            "pasword 9.60922527686273\n",
            "patches 9.60922527686273\n",
            "patecd00 9.60922527686273\n",
            "paternity 9.60922527686273\n",
            "pathetic 9.60922527686273\n",
            "pathext 9.60922527686273\n",
            "patrol 9.60922527686273\n",
            "pattern 9.60922527686273\n",
            "paulbrent452 9.60922527686273\n",
            "pauldx00 9.60922527686273\n",
            "pauline 9.60922527686273\n",
            "pawar 9.60922527686273\n",
            "pawasx02 9.60922527686273\n",
            "pay4dec 9.60922527686273\n",
            "payments 9.60922527686273\n",
            "paysilp 9.60922527686273\n",
            "pbiptb 9.60922527686273\n",
            "pbz0 9.60922527686273\n",
            "pc14 9.60922527686273\n",
            "pc16v61d 9.60922527686273\n",
            "pc16vd88 9.60922527686273\n",
            "pc16vdc 9.60922527686273\n",
            "pc16vdf1 9.60922527686273\n",
            "pc16vdke 9.60922527686273\n",
            "pc16vdlq 9.60922527686273\n",
            "pc16vdm9 9.60922527686273\n",
            "pc16vdma 9.60922527686273\n",
            "pc16vdq3 9.60922527686273\n",
            "pc16ve4v 9.60922527686273\n",
            "pc16vead 9.60922527686273\n",
            "pc16veen 9.60922527686273\n",
            "pc16vfpr 9.60922527686273\n",
            "pc16vfv3 9.60922527686273\n",
            "pc16vfvk 9.60922527686273\n",
            "pc16vfzc 9.60922527686273\n",
            "pc16vg0r 9.60922527686273\n",
            "pc16vg1d 9.60922527686273\n",
            "pc16vs61 9.60922527686273\n",
            "pc16vw17 9.60922527686273\n",
            "pc17 9.60922527686273\n",
            "pc1clnt300 9.60922527686273\n",
            "pcnf 9.60922527686273\n",
            "pcr 9.60922527686273\n",
            "pcr020 9.60922527686273\n",
            "pcr021 9.60922527686273\n",
            "pcr022 9.60922527686273\n",
            "pct 9.60922527686273\n",
            "pdf11 9.60922527686273\n",
            "pdi 9.60922527686273\n",
            "pdit7io9qndflphz8cwp 9.60922527686273\n",
            "pdmvjnqaxhxw 9.60922527686273\n",
            "pdrassocs 9.60922527686273\n",
            "pdt 9.60922527686273\n",
            "pe2 9.60922527686273\n",
            "pe4 9.60922527686273\n",
            "pelaez 9.60922527686273\n",
            "pemmrx00 9.60922527686273\n",
            "pen 9.60922527686273\n",
            "penaz 9.60922527686273\n",
            "peoples 9.60922527686273\n",
            "pepp1 9.60922527686273\n",
            "pepper 9.60922527686273\n",
            "performs 9.60922527686273\n",
            "perimeter 9.60922527686273\n",
            "permanant 9.60922527686273\n",
            "permannetly 9.60922527686273\n",
            "permit 9.60922527686273\n",
            "permitted 9.60922527686273\n",
            "peroxides 9.60922527686273\n",
            "perrier 9.60922527686273\n",
            "persistently 9.60922527686273\n",
            "persisting 9.60922527686273\n",
            "petroleum 9.60922527686273\n",
            "petromltd 9.60922527686273\n",
            "petronasconn 9.60922527686273\n",
            "pev 9.60922527686273\n",
            "pewh1 9.60922527686273\n",
            "pf 9.60922527686273\n",
            "pf1 9.60922527686273\n",
            "pf1ca3k5 9.60922527686273\n",
            "pf1ca6g8 9.60922527686273\n",
            "pf1cav0j 9.60922527686273\n",
            "pf1e39sh 9.60922527686273\n",
            "pf1e3cjs 9.60922527686273\n",
            "pf1e4e29 9.60922527686273\n",
            "pf1e8yek 9.60922527686273\n",
            "pf1e987p 9.60922527686273\n",
            "pf1x6bcv 9.60922527686273\n",
            "pf1x6lc9 9.60922527686273\n",
            "pf1x6les 9.60922527686273\n",
            "pf1x6ngp 9.60922527686273\n",
            "pf1x743m 9.60922527686273\n",
            "pf1x7mzw 9.60922527686273\n",
            "pf1x7n2s 9.60922527686273\n",
            "pf1x7sh2 9.60922527686273\n",
            "pf1x7xzt 9.60922527686273\n",
            "pf1x875q 9.60922527686273\n",
            "pfb 9.60922527686273\n",
            "pfcavoj 9.60922527686273\n",
            "pfcg 9.60922527686273\n",
            "pgb851528102008 9.60922527686273\n",
            "pgsdrctr 9.60922527686273\n",
            "pgsdremp 9.60922527686273\n",
            "pgsdrscd 9.60922527686273\n",
            "pgsdrsme 9.60922527686273\n",
            "pgsdrsmp 9.60922527686273\n",
            "phadke 9.60922527686273\n",
            "phadss00 9.60922527686273\n",
            "phanleb 9.60922527686273\n",
            "phenomenon 9.60922527686273\n",
            "philippeschellekens 9.60922527686273\n",
            "phonechallenges 9.60922527686273\n",
            "phoned 9.60922527686273\n",
            "phoneshieldnet 9.60922527686273\n",
            "pi321710 9.60922527686273\n",
            "pi731 9.60922527686273\n",
            "picks 9.60922527686273\n",
            "pieces 9.60922527686273\n",
            "pilduser 9.60922527686273\n",
            "pilduser_p94 9.60922527686273\n",
            "piling 9.60922527686273\n",
            "pingable 9.60922527686273\n",
            "pinter 9.60922527686273\n",
            "pirzada 9.60922527686273\n",
            "pirzsx00 9.60922527686273\n",
            "pish 9.60922527686273\n",
            "pitco 9.60922527686273\n",
            "pixelskit 9.60922527686273\n",
            "pk3ehqmow0a 9.60922527686273\n",
            "pkg 9.60922527686273\n",
            "pkq2vftceo1s9v038mp549c0 9.60922527686273\n",
            "pl2 9.60922527686273\n",
            "pl2y 9.60922527686273\n",
            "placement 9.60922527686273\n",
            "plaetze 9.60922527686273\n",
            "planed 9.60922527686273\n",
            "planer 9.60922527686273\n",
            "planup 9.60922527686273\n",
            "plarex00 9.60922527686273\n",
            "plasticsmaintenanceareawacs 9.60922527686273\n",
            "plasticsmaintenanceengineers 9.60922527686273\n",
            "plasticsmaintenanceforemens 9.60922527686273\n",
            "plasticsmaintenanceplanners 9.60922527686273\n",
            "platform 9.60922527686273\n",
            "play 9.60922527686273\n",
            "played 9.60922527686273\n",
            "playing 9.60922527686273\n",
            "playupdateapp 9.60922527686273\n",
            "plb 9.60922527686273\n",
            "pleasant 9.60922527686273\n",
            "pleclep 9.60922527686273\n",
            "plugged 9.60922527686273\n",
            "pluto 9.60922527686273\n",
            "pluto_share 9.60922527686273\n",
            "plwase 9.60922527686273\n",
            "pmd 9.60922527686273\n",
            "pmdi_plant_report 9.60922527686273\n",
            "pmla_ecc_idoc_fail 9.60922527686273\n",
            "pmlapriceanalysis 9.60922527686273\n",
            "pmykdcy23fu77pe 9.60922527686273\n",
            "pn0ul4c 9.60922527686273\n",
            "pn1 9.60922527686273\n",
            "pn1clnt200 9.60922527686273\n",
            "pnb 9.60922527686273\n",
            "png 9.60922527686273\n",
            "po11 9.60922527686273\n",
            "po15 9.60922527686273\n",
            "po26 9.60922527686273\n",
            "pocm 9.60922527686273\n",
            "poicy 9.60922527686273\n",
            "poison 9.60922527686273\n",
            "poit 9.60922527686273\n",
            "policemanholywood 9.60922527686273\n",
            "polins00 9.60922527686273\n",
            "poncfs00 9.60922527686273\n",
            "poovaiah 9.60922527686273\n",
            "poovalah 9.60922527686273\n",
            "poping 9.60922527686273\n",
            "populate 9.60922527686273\n",
            "poqurl00 9.60922527686273\n",
            "porpuse 9.60922527686273\n",
            "porta 9.60922527686273\n",
            "positioned 9.60922527686273\n",
            "positions 9.60922527686273\n",
            "positivity 9.60922527686273\n",
            "posqit 9.60922527686273\n",
            "possibility 9.60922527686273\n",
            "possibly 9.60922527686273\n",
            "posssible 9.60922527686273\n",
            "postal 9.60922527686273\n",
            "poster 9.60922527686273\n",
            "postmaster 9.60922527686273\n",
            "posture 9.60922527686273\n",
            "pot 9.60922527686273\n",
            "pound 9.60922527686273\n",
            "powered 9.60922527686273\n",
            "powerpoints 9.60922527686273\n",
            "powershell 9.60922527686273\n",
            "powersupplyoutofrangeormalfunctioning 9.60922527686273\n",
            "pp710 9.60922527686273\n",
            "pp_bomcomp 9.60922527686273\n",
            "pp_bomheader 9.60922527686273\n",
            "pp_matl_upd 9.60922527686273\n",
            "pp_mes_mat_idoc 9.60922527686273\n",
            "pp_pm033 9.60922527686273\n",
            "pp_pr_slo 9.60922527686273\n",
            "pp_qm_qpi018 9.60922527686273\n",
            "pp_qm_qpi022 9.60922527686273\n",
            "pp_read_text 9.60922527686273\n",
            "ppalliyil 9.60922527686273\n",
            "ppdmq 9.60922527686273\n",
            "ppyeg 9.60922527686273\n",
            "pr1active 9.60922527686273\n",
            "pr1smb 9.60922527686273\n",
            "practice 9.60922527686273\n",
            "pragneshkumar 9.60922527686273\n",
            "prahladbhai 9.60922527686273\n",
            "prakph00 9.60922527686273\n",
            "pranab 9.60922527686273\n",
            "prasant 9.60922527686273\n",
            "prashant 9.60922527686273\n",
            "prathapan 9.60922527686273\n",
            "praveen 9.60922527686273\n",
            "pravesh 9.60922527686273\n",
            "prawin 9.60922527686273\n",
            "prc 9.60922527686273\n",
            "prcss 9.60922527686273\n",
            "preapproval 9.60922527686273\n",
            "preapprovals 9.60922527686273\n",
            "preapprove 9.60922527686273\n",
            "precaution 9.60922527686273\n",
            "precise 9.60922527686273\n",
            "predefined 9.60922527686273\n",
            "prefer 9.60922527686273\n",
            "preferences 9.60922527686273\n",
            "preftype 9.60922527686273\n",
            "prematurely 9.60922527686273\n",
            "premises 9.60922527686273\n",
            "preparations 9.60922527686273\n",
            "prepare 9.60922527686273\n",
            "prepared 9.60922527686273\n",
            "presentable 9.60922527686273\n",
            "presenter 9.60922527686273\n",
            "presenting 9.60922527686273\n",
            "preservation 9.60922527686273\n",
            "presnces 9.60922527686273\n",
            "pretty_hardjob2881 9.60922527686273\n",
            "preventation 9.60922527686273\n",
            "preventfirstlaunchafterinstall 9.60922527686273\n",
            "previlage 9.60922527686273\n",
            "primarydsearch 9.60922527686273\n",
            "prime 9.60922527686273\n",
            "principal 9.60922527686273\n",
            "printable 9.60922527686273\n",
            "printeing 9.60922527686273\n",
            "prints 9.60922527686273\n",
            "priroty 9.60922527686273\n",
            "prize 9.60922527686273\n",
            "probation 9.60922527686273\n",
            "proc 9.60922527686273\n",
            "procced 9.60922527686273\n",
            "proccessor 9.60922527686273\n",
            "proces 9.60922527686273\n",
            "procesor 9.60922527686273\n",
            "processnet 9.60922527686273\n",
            "processor_architecture 9.60922527686273\n",
            "processor_architew6432 9.60922527686273\n",
            "processor_identifier 9.60922527686273\n",
            "processor_level 9.60922527686273\n",
            "processor_revision 9.60922527686273\n",
            "procinul 9.60922527686273\n",
            "procure 9.60922527686273\n",
            "procuremnt 9.60922527686273\n",
            "procurment 9.60922527686273\n",
            "prodcution 9.60922527686273\n",
            "prodoc 9.60922527686273\n",
            "produced 9.60922527686273\n",
            "producing 9.60922527686273\n",
            "proff 9.60922527686273\n",
            "proforma 9.60922527686273\n",
            "programfiles 9.60922527686273\n",
            "programw6432 9.60922527686273\n",
            "project_and_engineering_systems 9.60922527686273\n",
            "projecting 9.60922527686273\n",
            "projectors 9.60922527686273\n",
            "projekt 9.60922527686273\n",
            "prolonged 9.60922527686273\n",
            "promptly 9.60922527686273\n",
            "promptness 9.60922527686273\n",
            "prompts 9.60922527686273\n",
            "prone 9.60922527686273\n",
            "pronunciation 9.60922527686273\n",
            "propagated 9.60922527686273\n",
            "propanol 9.60922527686273\n",
            "propely 9.60922527686273\n",
            "proponents 9.60922527686273\n",
            "propose 9.60922527686273\n",
            "prorated 9.60922527686273\n",
            "proration 9.60922527686273\n",
            "protect 9.60922527686273\n",
            "proval 9.60922527686273\n",
            "provde 9.60922527686273\n",
            "providers 9.60922527686273\n",
            "proving 9.60922527686273\n",
            "prowatch 9.60922527686273\n",
            "proxycheker 9.60922527686273\n",
            "pruebaremc 9.60922527686273\n",
            "prussx00 9.60922527686273\n",
            "psce 9.60922527686273\n",
            "psi 9.60922527686273\n",
            "psmodulepath 9.60922527686273\n",
            "pss 9.60922527686273\n",
            "pssw 9.60922527686273\n",
            "psv 9.60922527686273\n",
            "ptp_kpi 9.60922527686273\n",
            "ptp_pr_rep 9.60922527686273\n",
            "ptp_pr_status 9.60922527686273\n",
            "ptp_ses_rept 9.60922527686273\n",
            "ptr0067 9.60922527686273\n",
            "ptr0137 9.60922527686273\n",
            "ptr0253 9.60922527686273\n",
            "ptr0287 9.60922527686273\n",
            "ptr0288 9.60922527686273\n",
            "ptr0291 9.60922527686273\n",
            "ptr0292 9.60922527686273\n",
            "ptr0305 9.60922527686273\n",
            "ptz030 9.60922527686273\n",
            "pu7100 9.60922527686273\n",
            "pub 9.60922527686273\n",
            "pubuser 9.60922527686273\n",
            "puc17360trz 9.60922527686273\n",
            "puc180219q6 9.60922527686273\n",
            "puc180301fq 9.60922527686273\n",
            "puc18030ds2 9.60922527686273\n",
            "puc18030dt9 9.60922527686273\n",
            "pui4p 9.60922527686273\n",
            "pup 9.60922527686273\n",
            "pur 9.60922527686273\n",
            "purabi 9.60922527686273\n",
            "pursue 9.60922527686273\n",
            "pushing 9.60922527686273\n",
            "pushrase 9.60922527686273\n",
            "putty 9.60922527686273\n",
            "pv 9.60922527686273\n",
            "pvelite 9.60922527686273\n",
            "pwc_audit 9.60922527686273\n",
            "pwzb 9.60922527686273\n",
            "px9ioiz5k6t6xxxnhyssvp4arny0jbckzpearmahpundzukh3mrnwubhud5oq2zri 9.60922527686273\n",
            "pxe 9.60922527686273\n",
            "pxgrex19012211 9.60922527686273\n",
            "pxshaqgrifwbvmzjkkb6h9u2nl46hpj4tczd2fxzyirxuqjq 9.60922527686273\n",
            "pysuvwxg 9.60922527686273\n",
            "pyungz 9.60922527686273\n",
            "pzif 9.60922527686273\n",
            "qa12 9.60922527686273\n",
            "qahtaa02 9.60922527686273\n",
            "qahtfd00 9.60922527686273\n",
            "qahtfm01 9.60922527686273\n",
            "qahthh00 9.60922527686273\n",
            "qahtmb00 9.60922527686273\n",
            "qahtmg00 9.60922527686273\n",
            "qahtms00 9.60922527686273\n",
            "qahtms06 9.60922527686273\n",
            "qahtow00 9.60922527686273\n",
            "qamer 9.60922527686273\n",
            "qaqc 9.60922527686273\n",
            "qarnas00 9.60922527686273\n",
            "qas 9.60922527686273\n",
            "qashio 9.60922527686273\n",
            "qasimx00 9.60922527686273\n",
            "qazamx00 9.60922527686273\n",
            "qc 9.60922527686273\n",
            "qeasym 9.60922527686273\n",
            "qf2020 9.60922527686273\n",
            "qfcallc 9.60922527686273\n",
            "qiang 9.60922527686273\n",
            "qigecc 9.60922527686273\n",
            "qiongxiaotex 9.60922527686273\n",
            "qlptx9nknppfryk2ygtbvm4rjssbmikiql9uitnjxbzhtslmvxcsjjfveye3gwi5gpk 9.60922527686273\n",
            "qmis 9.60922527686273\n",
            "qom 9.60922527686273\n",
            "qom_oracle 9.60922527686273\n",
            "qom_oraclednspatchuser 9.60922527686273\n",
            "qp4cdrovbi 9.60922527686273\n",
            "qqbaobeyizhi 9.60922527686273\n",
            "qqm9lv 9.60922527686273\n",
            "qrj7pa1j3yi6xnso 9.60922527686273\n",
            "qrjgnp 9.60922527686273\n",
            "qroe7nett94qjimk 9.60922527686273\n",
            "qrot 9.60922527686273\n",
            "qs 9.60922527686273\n",
            "qsbxlplsabrttqdssoytbfxiovlfiapz 9.60922527686273\n",
            "qualityoperationsmngt 9.60922527686273\n",
            "quam 9.60922527686273\n",
            "quantities 9.60922527686273\n",
            "quantum 9.60922527686273\n",
            "quary 9.60922527686273\n",
            "que 9.60922527686273\n",
            "quebec 9.60922527686273\n",
            "quercus 9.60922527686273\n",
            "questioned 9.60922527686273\n",
            "questionnaire 9.60922527686273\n",
            "queues 9.60922527686273\n",
            "quito 9.60922527686273\n",
            "quotation 9.60922527686273\n",
            "quote 9.60922527686273\n",
            "quoted 9.60922527686273\n",
            "quraishi 9.60922527686273\n",
            "quraishim 9.60922527686273\n",
            "qut69bf00e 9.60922527686273\n",
            "qut6oga5219bf00e 9.60922527686273\n",
            "r002 9.60922527686273\n",
            "r005k1r03c 9.60922527686273\n",
            "r006 9.60922527686273\n",
            "r008j6m11a 9.60922527686273\n",
            "r008k4l11a 9.60922527686273\n",
            "r008k4r21a 9.60922527686273\n",
            "r008k5711a 9.60922527686273\n",
            "r008k5p11a 9.60922527686273\n",
            "r008k5t11b 9.60922527686273\n",
            "r008k5u11a 9.60922527686273\n",
            "r008k6611a 9.60922527686273\n",
            "r008k811d 9.60922527686273\n",
            "r008k8p11d 9.60922527686273\n",
            "r008k8q11c 9.60922527686273\n",
            "r008k9311a 9.60922527686273\n",
            "r008k9d11a 9.60922527686273\n",
            "r008k9d11c 9.60922527686273\n",
            "r009 9.60922527686273\n",
            "r010k8q00 9.60922527686273\n",
            "r014k1s09n 9.60922527686273\n",
            "r014k1u19k 9.60922527686273\n",
            "r014k4711b 9.60922527686273\n",
            "r014k4c00a 9.60922527686273\n",
            "r014k4d20b 9.60922527686273\n",
            "r014k4q19f 9.60922527686273\n",
            "r014k5721a 9.60922527686273\n",
            "r014k5h15c 9.60922527686273\n",
            "r014k5i212 9.60922527686273\n",
            "r014k5j09g 9.60922527686273\n",
            "r014k5p15c 9.60922527686273\n",
            "r014k6311a 9.60922527686273\n",
            "r014k6e09j 9.60922527686273\n",
            "r014k6f14g 9.60922527686273\n",
            "r014k6k15c 9.60922527686273\n",
            "r014k6o20c 9.60922527686273\n",
            "r014k6r10h 9.60922527686273\n",
            "r014k7322m 9.60922527686273\n",
            "r014k7720f 9.60922527686273\n",
            "r014k7g07h 9.60922527686273\n",
            "r014k7l06g 9.60922527686273\n",
            "r014k7l07n 9.60922527686273\n",
            "r014k7r22h 9.60922527686273\n",
            "r014k7u23g 9.60922527686273\n",
            "r014k8511h 9.60922527686273\n",
            "r014k8h11f 9.60922527686273\n",
            "r014k8j17h 9.60922527686273\n",
            "r014k8n06g 9.60922527686273\n",
            "r016 9.60922527686273\n",
            "r017 9.60922527686273\n",
            "r020 9.60922527686273\n",
            "r07 9.60922527686273\n",
            "r123 9.60922527686273\n",
            "r3 9.60922527686273\n",
            "r3d3hdjgnc 9.60922527686273\n",
            "r4 9.60922527686273\n",
            "r8v3lzbg 9.60922527686273\n",
            "ra 9.60922527686273\n",
            "ra01014 9.60922527686273\n",
            "ra0108 9.60922527686273\n",
            "rabax_state 9.60922527686273\n",
            "rabims00 9.60922527686273\n",
            "rad 9.60922527686273\n",
            "raddio 9.60922527686273\n",
            "radio1206006 9.60922527686273\n",
            "radioa 9.60922527686273\n",
            "raef 9.60922527686273\n",
            "rafael 9.60922527686273\n",
            "rahaman3 9.60922527686273\n",
            "rahmatulla 9.60922527686273\n",
            "rain 9.60922527686273\n",
            "raings 9.60922527686273\n",
            "raj 9.60922527686273\n",
            "raja 9.60922527686273\n",
            "rajae 9.60922527686273\n",
            "rajakumar 9.60922527686273\n",
            "rajaram 9.60922527686273\n",
            "rajo 9.60922527686273\n",
            "rajxpd00 9.60922527686273\n",
            "ramalingam 9.60922527686273\n",
            "ramasx01 9.60922527686273\n",
            "ramatulla 9.60922527686273\n",
            "ramil 9.60922527686273\n",
            "ramos 9.60922527686273\n",
            "rana 9.60922527686273\n",
            "ranjsx00 9.60922527686273\n",
            "rankywise 9.60922527686273\n",
            "ransom12344 9.60922527686273\n",
            "raoxgx00 9.60922527686273\n",
            "raoxvv0 9.60922527686273\n",
            "raseedu 9.60922527686273\n",
            "rasema00 9.60922527686273\n",
            "rasham05 9.60922527686273\n",
            "rasheed 9.60922527686273\n",
            "rashoa00 9.60922527686273\n",
            "rates 9.60922527686273\n",
            "rathpn00 9.60922527686273\n",
            "ratq5acy4qnr31lacl 9.60922527686273\n",
            "raushan 9.60922527686273\n",
            "ravish 9.60922527686273\n",
            "rayzacastillo 9.60922527686273\n",
            "rb_ap_invc 9.60922527686273\n",
            "rb_ap_sme 9.60922527686273\n",
            "rb_dg_mro 9.60922527686273\n",
            "rb_fs_doc 9.60922527686273\n",
            "rb_hr_ben 9.60922527686273\n",
            "rb_otc_ls_logi_leader 9.60922527686273\n",
            "rb_pa_actns 9.60922527686273\n",
            "rb_pa_md 9.60922527686273\n",
            "rb_pl_common 9.60922527686273\n",
            "rb_plant 9.60922527686273\n",
            "rb_pm_common 9.60922527686273\n",
            "rb_pm_global 9.60922527686273\n",
            "rb_pm_inventory 9.60922527686273\n",
            "rb_pm_material 9.60922527686273\n",
            "rb_pm_ntf 9.60922527686273\n",
            "rb_pm_sel_variant 9.60922527686273\n",
            "rb_pr_data 9.60922527686273\n",
            "rb_pr_proc 9.60922527686273\n",
            "rb_pr_pur 9.60922527686273\n",
            "rb_pr_qtn 9.60922527686273\n",
            "rb_pr_srcng 9.60922527686273\n",
            "rb_pr_srv 9.60922527686273\n",
            "rb_qm_qss 9.60922527686273\n",
            "rb_sm_aaab_s_tcode_sec 9.60922527686273\n",
            "rb_sm_auth 9.60922527686273\n",
            "rbm 9.60922527686273\n",
            "rbp 9.60922527686273\n",
            "rc 9.60922527686273\n",
            "rcm 9.60922527686273\n",
            "rcpha 9.60922527686273\n",
            "rdb 9.60922527686273\n",
            "rdmsi 9.60922527686273\n",
            "rdng 9.60922527686273\n",
            "rdrimpl 9.60922527686273\n",
            "reachability 9.60922527686273\n",
            "reachedthe 9.60922527686273\n",
            "reactivating 9.60922527686273\n",
            "reactivation 9.60922527686273\n",
            "reactivity 9.60922527686273\n",
            "readable 9.60922527686273\n",
            "readers 9.60922527686273\n",
            "readily 9.60922527686273\n",
            "readings 9.60922527686273\n",
            "readme 9.60922527686273\n",
            "reads 9.60922527686273\n",
            "readstep2 9.60922527686273\n",
            "reagent 9.60922527686273\n",
            "reagrds 9.60922527686273\n",
            "reaised 9.60922527686273\n",
            "realeased 9.60922527686273\n",
            "realitychartingtr 9.60922527686273\n",
            "realize 9.60922527686273\n",
            "reallocating 9.60922527686273\n",
            "realteks 9.60922527686273\n",
            "reappear 9.60922527686273\n",
            "rearrange 9.60922527686273\n",
            "reassign 9.60922527686273\n",
            "reassigning 9.60922527686273\n",
            "reboilers 9.60922527686273\n",
            "rebuild 9.60922527686273\n",
            "recall 9.60922527686273\n",
            "recalled 9.60922527686273\n",
            "receibed 9.60922527686273\n",
            "receivers 9.60922527686273\n",
            "receivertv 9.60922527686273\n",
            "receving 9.60922527686273\n",
            "recievd 9.60922527686273\n",
            "recieve 9.60922527686273\n",
            "recieving 9.60922527686273\n",
            "recify 9.60922527686273\n",
            "recipe 9.60922527686273\n",
            "recommends 9.60922527686273\n",
            "reconnects 9.60922527686273\n",
            "recorder 9.60922527686273\n",
            "recovered 9.60922527686273\n",
            "recovering 9.60922527686273\n",
            "recreate 9.60922527686273\n",
            "recruiting 9.60922527686273\n",
            "recurred 9.60922527686273\n",
            "recycle 9.60922527686273\n",
            "recycled 9.60922527686273\n",
            "recyle 9.60922527686273\n",
            "reda 9.60922527686273\n",
            "redbluffchamber 9.60922527686273\n",
            "redbox 9.60922527686273\n",
            "reddcm00 9.60922527686273\n",
            "reddvs00 9.60922527686273\n",
            "redel 9.60922527686273\n",
            "redelegation 9.60922527686273\n",
            "redeploy 9.60922527686273\n",
            "redirecting 9.60922527686273\n",
            "redlegation 9.60922527686273\n",
            "redsobabtert 9.60922527686273\n",
            "redundant 9.60922527686273\n",
            "redwood 9.60922527686273\n",
            "refee 9.60922527686273\n",
            "refeer 9.60922527686273\n",
            "referance 9.60922527686273\n",
            "referenceerror 9.60922527686273\n",
            "referenciak 9.60922527686273\n",
            "referencing 9.60922527686273\n",
            "referencs 9.60922527686273\n",
            "refernce 9.60922527686273\n",
            "refers 9.60922527686273\n",
            "reflection 9.60922527686273\n",
            "refrence 9.60922527686273\n",
            "refresher 9.60922527686273\n",
            "refrigeration 9.60922527686273\n",
            "refusing 9.60922527686273\n",
            "reg 9.60922527686273\n",
            "regains 9.60922527686273\n",
            "regasm 9.60922527686273\n",
            "registeration 9.60922527686273\n",
            "registery 9.60922527686273\n",
            "registryservice 9.60922527686273\n",
            "regkeyexists 9.60922527686273\n",
            "regrds 9.60922527686273\n",
            "reguirmen 9.60922527686273\n",
            "regularize 9.60922527686273\n",
            "regulatory 9.60922527686273\n",
            "rehired 9.60922527686273\n",
            "rehman 9.60922527686273\n",
            "reimburse 9.60922527686273\n",
            "reimbursemen 9.60922527686273\n",
            "reinspection 9.60922527686273\n",
            "reinstalled 9.60922527686273\n",
            "reived 9.60922527686273\n",
            "relating 9.60922527686273\n",
            "relaunch 9.60922527686273\n",
            "relaxmate 9.60922527686273\n",
            "relay 9.60922527686273\n",
            "reliable 9.60922527686273\n",
            "relieve 9.60922527686273\n",
            "reliever 9.60922527686273\n",
            "reload 9.60922527686273\n",
            "reloaded 9.60922527686273\n",
            "relocated 9.60922527686273\n",
            "relys 9.60922527686273\n",
            "remaariegarcia 9.60922527686273\n",
            "remainder 9.60922527686273\n",
            "remcos 9.60922527686273\n",
            "remedy 9.60922527686273\n",
            "remegfeed 9.60922527686273\n",
            "remotly 9.60922527686273\n",
            "removeoldshorcuts 9.60922527686273\n",
            "remover 9.60922527686273\n",
            "renaming 9.60922527686273\n",
            "rendering 9.60922527686273\n",
            "rent 9.60922527686273\n",
            "reoccuring 9.60922527686273\n",
            "reoccurring 9.60922527686273\n",
            "reopening 9.60922527686273\n",
            "reorder 9.60922527686273\n",
            "reorganization 9.60922527686273\n",
            "repayment 9.60922527686273\n",
            "repeartedly 9.60922527686273\n",
            "repeats 9.60922527686273\n",
            "replaying 9.60922527686273\n",
            "replenished 9.60922527686273\n",
            "replicate 9.60922527686273\n",
            "replied 9.60922527686273\n",
            "reporesentative 9.60922527686273\n",
            "repors 9.60922527686273\n",
            "reportedly 9.60922527686273\n",
            "reportincident 9.60922527686273\n",
            "reposted 9.60922527686273\n",
            "reprocess 9.60922527686273\n",
            "reproducible 9.60922527686273\n",
            "reproducing 9.60922527686273\n",
            "reprsntve 9.60922527686273\n",
            "reqid 9.60922527686273\n",
            "requery 9.60922527686273\n",
            "reques 9.60922527686273\n",
            "requestdeniedbyserverexception 9.60922527686273\n",
            "requestnumber 9.60922527686273\n",
            "requrid 9.60922527686273\n",
            "requried 9.60922527686273\n",
            "rerouting 9.60922527686273\n",
            "rerun 9.60922527686273\n",
            "resaved 9.60922527686273\n",
            "reschedule 9.60922527686273\n",
            "rescheduling 9.60922527686273\n",
            "resend 9.60922527686273\n",
            "resent 9.60922527686273\n",
            "reseted 9.60922527686273\n",
            "residents 9.60922527686273\n",
            "residing 9.60922527686273\n",
            "resolver 9.60922527686273\n",
            "resolves 9.60922527686273\n",
            "respective 9.60922527686273\n",
            "respondcritique 9.60922527686273\n",
            "responsibility 9.60922527686273\n",
            "responsing 9.60922527686273\n",
            "restoring 9.60922527686273\n",
            "restructure 9.60922527686273\n",
            "resule 9.60922527686273\n",
            "resulte 9.60922527686273\n",
            "resume 9.60922527686273\n",
            "resumes 9.60922527686273\n",
            "resuqst 9.60922527686273\n",
            "retordownty 9.60922527686273\n",
            "retried 9.60922527686273\n",
            "retrieveuser 9.60922527686273\n",
            "retrieving 9.60922527686273\n",
            "retrigger 9.60922527686273\n",
            "revaluation 9.60922527686273\n",
            "reversal 9.60922527686273\n",
            "reversed 9.60922527686273\n",
            "reviewed 9.60922527686273\n",
            "revises 9.60922527686273\n",
            "revived 9.60922527686273\n",
            "revoking 9.60922527686273\n",
            "reworked 9.60922527686273\n",
            "reynam00 9.60922527686273\n",
            "rezq 9.60922527686273\n",
            "rf 9.60922527686273\n",
            "rf45y 9.60922527686273\n",
            "rfqx_ 9.60922527686273\n",
            "rg4z3vug4m0wrpgio6w0t466c6ajghc1r8xa 9.60922527686273\n",
            "ribbons 9.60922527686273\n",
            "richie 9.60922527686273\n",
            "rid 9.60922527686273\n",
            "rider 9.60922527686273\n",
            "riembx01 9.60922527686273\n",
            "riemens 9.60922527686273\n",
            "rigging 9.60922527686273\n",
            "rightfax 9.60922527686273\n",
            "rightful 9.60922527686273\n",
            "righting 9.60922527686273\n",
            "ringing 9.60922527686273\n",
            "rings 9.60922527686273\n",
            "rises 9.60922527686273\n",
            "rising 9.60922527686273\n",
            "rivas 9.60922527686273\n",
            "riyad 9.60922527686273\n",
            "riyaz 9.60922527686273\n",
            "rjewp 9.60922527686273\n",
            "rlb9lmt 9.60922527686273\n",
            "rllconsulting 9.60922527686273\n",
            "rm0022930 9.60922527686273\n",
            "rm114 9.60922527686273\n",
            "rm_status 9.60922527686273\n",
            "rmotely 9.60922527686273\n",
            "rmwb 9.60922527686273\n",
            "rnolohbrhfhpqvr 9.60922527686273\n",
            "roaming 9.60922527686273\n",
            "roaxvv00 9.60922527686273\n",
            "robeix00 9.60922527686273\n",
            "robert 9.60922527686273\n",
            "roberto 9.60922527686273\n",
            "robimx00 9.60922527686273\n",
            "robin 9.60922527686273\n",
            "robotrade 9.60922527686273\n",
            "rodbezanilla 9.60922527686273\n",
            "rodney 9.60922527686273\n",
            "roland 9.60922527686273\n",
            "rolhorabdidn 9.60922527686273\n",
            "roll 9.60922527686273\n",
            "rolled 9.60922527686273\n",
            "rolling 9.60922527686273\n",
            "rolls 9.60922527686273\n",
            "rom 9.60922527686273\n",
            "romapm00 9.60922527686273\n",
            "ronald 9.60922527686273\n",
            "room10 9.60922527686273\n",
            "room118 9.60922527686273\n",
            "room18 9.60922527686273\n",
            "roomr 9.60922527686273\n",
            "rooqfx00 9.60922527686273\n",
            "rootappdir 9.60922527686273\n",
            "rooted 9.60922527686273\n",
            "rootfolder 9.60922527686273\n",
            "roqhnmcbzbv 9.60922527686273\n",
            "roshan 9.60922527686273\n",
            "rosli 9.60922527686273\n",
            "rostraffic 9.60922527686273\n",
            "rosy 9.60922527686273\n",
            "rouchard 9.60922527686273\n",
            "rousehilltractors 9.60922527686273\n",
            "routine_infrastructure 9.60922527686273\n",
            "royxrx00 9.60922527686273\n",
            "rpc 9.60922527686273\n",
            "rplg 9.60922527686273\n",
            "rss 9.60922527686273\n",
            "rsshay 9.60922527686273\n",
            "rtf 9.60922527686273\n",
            "rtm_lock_inactive_users1 9.60922527686273\n",
            "rtnvall 9.60922527686273\n",
            "ru9hcsx 9.60922527686273\n",
            "rubiano 9.60922527686273\n",
            "rubicon 9.60922527686273\n",
            "ruch 9.60922527686273\n",
            "runtimee 9.60922527686273\n",
            "runxinbiotech 9.60922527686273\n",
            "rushaid 9.60922527686273\n",
            "russchine2specialfrdy2plumbingmaterialgh 9.60922527686273\n",
            "russdoc 9.60922527686273\n",
            "ruths 9.60922527686273\n",
            "rvi_11038 9.60922527686273\n",
            "rwrw 9.60922527686273\n",
            "rx112 9.60922527686273\n",
            "rx134 9.60922527686273\n",
            "rx138 9.60922527686273\n",
            "rx145 9.60922527686273\n",
            "rx146 9.60922527686273\n",
            "rx151 9.60922527686273\n",
            "rx158 9.60922527686273\n",
            "rx19 9.60922527686273\n",
            "rx35 9.60922527686273\n",
            "rx74 9.60922527686273\n",
            "rxxxsx00 9.60922527686273\n",
            "rygotunren 9.60922527686273\n",
            "s0102 9.60922527686273\n",
            "s0902 9.60922527686273\n",
            "s1o2ff 9.60922527686273\n",
            "s231d 9.60922527686273\n",
            "s3 9.60922527686273\n",
            "s30001378 9.60922527686273\n",
            "s30001380 9.60922527686273\n",
            "s545 9.60922527686273\n",
            "s69 9.60922527686273\n",
            "s_alv_layo 9.60922527686273\n",
            "sabb 9.60922527686273\n",
            "sabdja 9.60922527686273\n",
            "sabic 9.60922527686273\n",
            "sac 9.60922527686273\n",
            "sachin 9.60922527686273\n",
            "sadabhusen 9.60922527686273\n",
            "sadara_bsm_profile 9.60922527686273\n",
            "sadara_contract 9.60922527686273\n",
            "sadarabenzenecoq 9.60922527686273\n",
            "sadarachairman 9.60922527686273\n",
            "sadarait_incidentmanagement 9.60922527686273\n",
            "sadaramail 9.60922527686273\n",
            "sadaratest 9.60922527686273\n",
            "sadeara 9.60922527686273\n",
            "sadma 9.60922527686273\n",
            "sae 9.60922527686273\n",
            "saedoh00 9.60922527686273\n",
            "saeed 9.60922527686273\n",
            "saf 9.60922527686273\n",
            "safeix00 9.60922527686273\n",
            "safemode 9.60922527686273\n",
            "safer 9.60922527686273\n",
            "sager 9.60922527686273\n",
            "sahadeo 9.60922527686273\n",
            "sahihx00 9.60922527686273\n",
            "sahinvidanjor 9.60922527686273\n",
            "saied 9.60922527686273\n",
            "sail 9.60922527686273\n",
            "saji 9.60922527686273\n",
            "sakura 9.60922527686273\n",
            "sal 9.60922527686273\n",
            "salahuddin 9.60922527686273\n",
            "salamr00 9.60922527686273\n",
            "saleax03 9.60922527686273\n",
            "salehf00 9.60922527686273\n",
            "samba_pkg 9.60922527686273\n",
            "sameem 9.60922527686273\n",
            "sandbox 9.60922527686273\n",
            "sandeep 9.60922527686273\n",
            "sandfg01 9.60922527686273\n",
            "sangeetha 9.60922527686273\n",
            "sanjeevinath 9.60922527686273\n",
            "sankaralingam 9.60922527686273\n",
            "sankyumap 9.60922527686273\n",
            "sanmgs00 9.60922527686273\n",
            "sano 9.60922527686273\n",
            "sanp 9.60922527686273\n",
            "sanpdb14 9.60922527686273\n",
            "santandeweb2020 9.60922527686273\n",
            "santosh 9.60922527686273\n",
            "sao 9.60922527686273\n",
            "sap_all 9.60922527686273\n",
            "sapgrcconnector 9.60922527686273\n",
            "sapgui 9.60922527686273\n",
            "sapol1006 9.60922527686273\n",
            "sapol1008 9.60922527686273\n",
            "sapol1009 9.60922527686273\n",
            "sappi 9.60922527686273\n",
            "sappm 9.60922527686273\n",
            "saptools 9.60922527686273\n",
            "saptop6 9.60922527686273\n",
            "saquib 9.60922527686273\n",
            "sarfaraz 9.60922527686273\n",
            "sarkar 9.60922527686273\n",
            "sasebip01 9.60922527686273\n",
            "sasestgdb03 9.60922527686273\n",
            "sateesh 9.60922527686273\n",
            "sathishkumar 9.60922527686273\n",
            "satisfactory 9.60922527686273\n",
            "satisfy 9.60922527686273\n",
            "satorp 9.60922527686273\n",
            "sattar 9.60922527686273\n",
            "saturday 9.60922527686273\n",
            "saturdays 9.60922527686273\n",
            "saudikayan 9.60922527686273\n",
            "savecopy 9.60922527686273\n",
            "saxeak00 9.60922527686273\n",
            "say 9.60922527686273\n",
            "sayed 9.60922527686273\n",
            "sayyaa00 9.60922527686273\n",
            "sba 9.60922527686273\n",
            "sbjblra0101clr03 9.60922527686273\n",
            "scale 9.60922527686273\n",
            "scattered 9.60922527686273\n",
            "scc1 9.60922527686273\n",
            "scc4 9.60922527686273\n",
            "scc5 9.60922527686273\n",
            "sccuessful 9.60922527686273\n",
            "scdyjm 9.60922527686273\n",
            "sceen 9.60922527686273\n",
            "scene 9.60922527686273\n",
            "sch1 9.60922527686273\n",
            "schatonline 9.60922527686273\n",
            "scherr 9.60922527686273\n",
            "schldr 9.60922527686273\n",
            "schluessel 9.60922527686273\n",
            "scientific 9.60922527686273\n",
            "scik 9.60922527686273\n",
            "scm 9.60922527686273\n",
            "scnforexecution 9.60922527686273\n",
            "scnfromexecution 9.60922527686273\n",
            "scontent 9.60922527686273\n",
            "scr 9.60922527686273\n",
            "screensaver 9.60922527686273\n",
            "screeshoot 9.60922527686273\n",
            "scren 9.60922527686273\n",
            "screw 9.60922527686273\n",
            "scriptx 9.60922527686273\n",
            "scu3 9.60922527686273\n",
            "sd142939 9.60922527686273\n",
            "sd142941 9.60922527686273\n",
            "sdara 9.60922527686273\n",
            "sdbzx 9.60922527686273\n",
            "sdczc3419j5m 9.60922527686273\n",
            "sdczc3419jby 9.60922527686273\n",
            "sdczc3419jcx 9.60922527686273\n",
            "sdczc4092824 9.60922527686273\n",
            "sdczc409282h 9.60922527686273\n",
            "sdczc4422lcw 9.60922527686273\n",
            "sdczc4422lh1 9.60922527686273\n",
            "sdczc442lhs 9.60922527686273\n",
            "sdczc514269k 9.60922527686273\n",
            "sdf 9.60922527686273\n",
            "sdfg32w2 9.60922527686273\n",
            "sdfgyh 9.60922527686273\n",
            "sdlshaiwang 9.60922527686273\n",
            "sdp05 9.60922527686273\n",
            "sdpc16vdbb 9.60922527686273\n",
            "sdpc16vdbv 9.60922527686273\n",
            "sdpc16vdfz 9.60922527686273\n",
            "sdpc16vdgm 9.60922527686273\n",
            "sdpc16vdjt 9.60922527686273\n",
            "sdpc16vdk2 9.60922527686273\n",
            "sdpc16vdkm 9.60922527686273\n",
            "sdpc16vdnk 9.60922527686273\n",
            "sdpc16vdp5 9.60922527686273\n",
            "sdpc16vdpp 9.60922527686273\n",
            "sdpc16vdrd 9.60922527686273\n",
            "sdpc16vds7 9.60922527686273\n",
            "sdpc16vdvv 9.60922527686273\n",
            "sdpc16vdze 9.60922527686273\n",
            "sdpc16ve0j 9.60922527686273\n",
            "sdpc16ve5b 9.60922527686273\n",
            "sdpc16veay 9.60922527686273\n",
            "sdpc16vect 9.60922527686273\n",
            "sdpc16vecv 9.60922527686273\n",
            "sdpc16ves4 9.60922527686273\n",
            "sdpc16vf0a 9.60922527686273\n",
            "sdpc16vf0n 9.60922527686273\n",
            "sdpc16vf0r 9.60922527686273\n",
            "sdpc16vf17 9.60922527686273\n",
            "sdpc16vfgb 9.60922527686273\n",
            "sdpc16vfh7 9.60922527686273\n",
            "sdpc16vfhb 9.60922527686273\n",
            "sdpc16vfj4 9.60922527686273\n",
            "sdpc16vfm1 9.60922527686273\n",
            "sdpc16vfmc 9.60922527686273\n",
            "sdpc16vfmj 9.60922527686273\n",
            "sdpc16vfmp 9.60922527686273\n",
            "sdpc16vfs2 9.60922527686273\n",
            "sdpc16vg09 9.60922527686273\n",
            "sdpc16vw1y 9.60922527686273\n",
            "sdpe16vf4p 9.60922527686273\n",
            "sdr_loibomorem 9.60922527686273\n",
            "sdtrf4350dnw 9.60922527686273\n",
            "sdtrf4350f1 9.60922527686273\n",
            "sdtrf4350fp1 9.60922527686273\n",
            "sdtrf4350fsk 9.60922527686273\n",
            "sdtrf5110x81 9.60922527686273\n",
            "sdtrf5110xhm 9.60922527686273\n",
            "sdtrf5400gdb 9.60922527686273\n",
            "sdtrf5420gyw 9.60922527686273\n",
            "se13 9.60922527686273\n",
            "se16 9.60922527686273\n",
            "se66ndx04fofu3sqv 9.60922527686273\n",
            "sebeka 9.60922527686273\n",
            "sebus03p01 9.60922527686273\n",
            "sebus05sp1 9.60922527686273\n",
            "seca 9.60922527686273\n",
            "seclude 9.60922527686273\n",
            "seco038 9.60922527686273\n",
            "seconded 9.60922527686273\n",
            "secondees 9.60922527686273\n",
            "secondi 9.60922527686273\n",
            "secondly 9.60922527686273\n",
            "secretary 9.60922527686273\n",
            "secretory 9.60922527686273\n",
            "seekvibega 9.60922527686273\n",
            "sees 9.60922527686273\n",
            "seisolarpros 9.60922527686273\n",
            "seld 9.60922527686273\n",
            "seletcor 9.60922527686273\n",
            "semantic 9.60922527686273\n",
            "sendan 9.60922527686273\n",
            "senders 9.60922527686273\n",
            "sendgrid 9.60922527686273\n",
            "sense 9.60922527686273\n",
            "sepam 9.60922527686273\n",
            "separated 9.60922527686273\n",
            "septemper 9.60922527686273\n",
            "serve 9.60922527686273\n",
            "serveblog 9.60922527686273\n",
            "served 9.60922527686273\n",
            "serverfiletransfermessage 9.60922527686273\n",
            "serves 9.60922527686273\n",
            "servicedesk 9.60922527686273\n",
            "servicemanageradapter_original 9.60922527686273\n",
            "servicent 9.60922527686273\n",
            "serviceobjects 9.60922527686273\n",
            "servicers 9.60922527686273\n",
            "serving 9.60922527686273\n",
            "servlet_jsp 9.60922527686273\n",
            "ses1000111290 9.60922527686273\n",
            "ses1000112815 9.60922527686273\n",
            "ses1000120683 9.60922527686273\n",
            "ses1000125177 9.60922527686273\n",
            "ses1000127396 9.60922527686273\n",
            "sess 9.60922527686273\n",
            "sessionname 9.60922527686273\n",
            "sest 9.60922527686273\n",
            "setattributes 9.60922527686273\n",
            "seth 9.60922527686273\n",
            "setpreference 9.60922527686273\n",
            "setups 9.60922527686273\n",
            "severer 9.60922527686273\n",
            "sevija00 9.60922527686273\n",
            "sevpazarlama 9.60922527686273\n",
            "sfn 9.60922527686273\n",
            "sfpersonautocompletewrapper 9.60922527686273\n",
            "sftp012 9.60922527686273\n",
            "sg 9.60922527686273\n",
            "sgh 9.60922527686273\n",
            "shabeermt 9.60922527686273\n",
            "shade 9.60922527686273\n",
            "shafeeq 9.60922527686273\n",
            "shafei 9.60922527686273\n",
            "shahad 9.60922527686273\n",
            "shaham03 9.60922527686273\n",
            "shahrani 9.60922527686273\n",
            "shahreen 9.60922527686273\n",
            "shahsx06 9.60922527686273\n",
            "shahtj00 9.60922527686273\n",
            "shahyt00 9.60922527686273\n",
            "shahzad 9.60922527686273\n",
            "shaiip00 9.60922527686273\n",
            "shaiux00 9.60922527686273\n",
            "shaking 9.60922527686273\n",
            "shamfm04 9.60922527686273\n",
            "shamimi 9.60922527686273\n",
            "shamma00 9.60922527686273\n",
            "shamrani 9.60922527686273\n",
            "shamsa02 9.60922527686273\n",
            "shamsh02 9.60922527686273\n",
            "shamta02 9.60922527686273\n",
            "shanmugasundaram 9.60922527686273\n",
            "shanx 9.60922527686273\n",
            "shape 9.60922527686273\n",
            "shard 9.60922527686273\n",
            "sharefolder 9.60922527686273\n",
            "sharepointonline 9.60922527686273\n",
            "shares 9.60922527686273\n",
            "shari 9.60922527686273\n",
            "sharif 9.60922527686273\n",
            "sharjatv 9.60922527686273\n",
            "sharkzilla06 9.60922527686273\n",
            "sharmm02 9.60922527686273\n",
            "sharnx00 9.60922527686273\n",
            "shawmi00 9.60922527686273\n",
            "sheetal 9.60922527686273\n",
            "sheetsbrandnewday 9.60922527686273\n",
            "shelters 9.60922527686273\n",
            "shengwenyi 9.60922527686273\n",
            "shfitmaster 9.60922527686273\n",
            "shibu 9.60922527686273\n",
            "shifts 9.60922527686273\n",
            "shinbs 9.60922527686273\n",
            "shinde 9.60922527686273\n",
            "shirazhussain 9.60922527686273\n",
            "shiva 9.60922527686273\n",
            "shokry 9.60922527686273\n",
            "shoolman 9.60922527686273\n",
            "shopping 9.60922527686273\n",
            "shorter 9.60922527686273\n",
            "shortly 9.60922527686273\n",
            "shouldn 9.60922527686273\n",
            "shrink 9.60922527686273\n",
            "shrinkage 9.60922527686273\n",
            "shutdowns 9.60922527686273\n",
            "shyamsundar 9.60922527686273\n",
            "sic 9.60922527686273\n",
            "siciliyaopartion 9.60922527686273\n",
            "sid 9.60922527686273\n",
            "sig 9.60922527686273\n",
            "sigh 9.60922527686273\n",
            "signatures 9.60922527686273\n",
            "significant 9.60922527686273\n",
            "significantly 9.60922527686273\n",
            "signifies 9.60922527686273\n",
            "siicg8lgad 9.60922527686273\n",
            "siicg8lgadurupkt 9.60922527686273\n",
            "simcard 9.60922527686273\n",
            "simon 9.60922527686273\n",
            "sinchronized 9.60922527686273\n",
            "sindhiya 9.60922527686273\n",
            "sine 9.60922527686273\n",
            "singaporebellezas 9.60922527686273\n",
            "singe 9.60922527686273\n",
            "singh 9.60922527686273\n",
            "singing 9.60922527686273\n",
            "singsx14 9.60922527686273\n",
            "sinning 9.60922527686273\n",
            "sirien 9.60922527686273\n",
            "sisc 9.60922527686273\n",
            "sitelogistics 9.60922527686273\n",
            "sitelogisticsoperations 9.60922527686273\n",
            "situated 9.60922527686273\n",
            "sizes 9.60922527686273\n",
            "sjdlcmbjsvpfwypeycxptppyc 9.60922527686273\n",
            "skf 9.60922527686273\n",
            "skix6q 9.60922527686273\n",
            "skpe 9.60922527686273\n",
            "skt901ac0 9.60922527686273\n",
            "sktrutx 9.60922527686273\n",
            "sky 9.60922527686273\n",
            "skybe 9.60922527686273\n",
            "skyep 9.60922527686273\n",
            "skynevvs 9.60922527686273\n",
            "sl8cg071lcy 9.60922527686273\n",
            "sl8cg4340456 9.60922527686273\n",
            "sl8cg434049p 9.60922527686273\n",
            "sl8cg434049y 9.60922527686273\n",
            "sl8cg43404c8 9.60922527686273\n",
            "sl8cg44202nd 9.60922527686273\n",
            "sl8cg5100c2p 9.60922527686273\n",
            "sl8cg5100c9x 9.60922527686273\n",
            "sl8cg5291dbk 9.60922527686273\n",
            "sl8cg54118ht 9.60922527686273\n",
            "sl8cg54118jn 9.60922527686273\n",
            "sl9xa73g7u3eo07wt42n7f4vin5fzh 9.60922527686273\n",
            "slave 9.60922527686273\n",
            "slc_administrator 9.60922527686273\n",
            "slcnd51139wd 9.60922527686273\n",
            "slcnu33499zy 9.60922527686273\n",
            "slcnu3349c6f 9.60922527686273\n",
            "slcnu3349cdr 9.60922527686273\n",
            "slcnu339989m 9.60922527686273\n",
            "slcnu409b6wt 9.60922527686273\n",
            "slcnu409cgl8 9.60922527686273\n",
            "slcnu409chvp 9.60922527686273\n",
            "slcnu409cjbq 9.60922527686273\n",
            "slcnu409cjgg 9.60922527686273\n",
            "slcnu4o9chk0 9.60922527686273\n",
            "sleeping 9.60922527686273\n",
            "slice 9.60922527686273\n",
            "slide4 9.60922527686273\n",
            "slm_rn_pme_prcexpl_tk 9.60922527686273\n",
            "slm_rn_prcexpl_tk 9.60922527686273\n",
            "slot 9.60922527686273\n",
            "slowing 9.60922527686273\n",
            "slp 9.60922527686273\n",
            "slpf1c9z8e 9.60922527686273\n",
            "slpf1caqyd 9.60922527686273\n",
            "slpf1cbln5 9.60922527686273\n",
            "slpf1e47lx 9.60922527686273\n",
            "slpf1e4wv6 9.60922527686273\n",
            "slpf1e8ycz 9.60922527686273\n",
            "slpf1e9kcv 9.60922527686273\n",
            "slpf1x6bek 9.60922527686273\n",
            "slpf1x6dlf 9.60922527686273\n",
            "slpf1x6j57 9.60922527686273\n",
            "slpf1x6lf 9.60922527686273\n",
            "slpf1x6lg8 9.60922527686273\n",
            "slpf1x6q7z 9.60922527686273\n",
            "slpf1x6y11 9.60922527686273\n",
            "slpf1x7423 9.60922527686273\n",
            "slpf1x7kqk 9.60922527686273\n",
            "slpf1x7sg7 9.60922527686273\n",
            "slpf1x7sgg 9.60922527686273\n",
            "slpf1x7vng 9.60922527686273\n",
            "slpf1x7vqg 9.60922527686273\n",
            "slpf1x7vrr 9.60922527686273\n",
            "slpf1x80bb 9.60922527686273\n",
            "slpf1x80cv 9.60922527686273\n",
            "slpf1x82ka 9.60922527686273\n",
            "slpf1x8754 9.60922527686273\n",
            "slpf1x876f 9.60922527686273\n",
            "slpf1x876s 9.60922527686273\n",
            "sls 9.60922527686273\n",
            "sluijts 9.60922527686273\n",
            "sm01_cus 9.60922527686273\n",
            "sm01_dev 9.60922527686273\n",
            "sm2 9.60922527686273\n",
            "sm37 9.60922527686273\n",
            "sm49 9.60922527686273\n",
            "sm69 9.60922527686273\n",
            "sm_crm 9.60922527686273\n",
            "smaller 9.60922527686273\n",
            "smar 9.60922527686273\n",
            "smarteyecare 9.60922527686273\n",
            "smartmail 9.60922527686273\n",
            "smartphone 9.60922527686273\n",
            "smartscreenfilter 9.60922527686273\n",
            "smell 9.60922527686273\n",
            "smoke 9.60922527686273\n",
            "smon 9.60922527686273\n",
            "smooth 9.60922527686273\n",
            "smpbatchprd102_get_lot 9.60922527686273\n",
            "smpbatchprd102_upload_result 9.60922527686273\n",
            "smpbatchprd102_upload_search 9.60922527686273\n",
            "smylechem 9.60922527686273\n",
            "sn500001b5f04f 9.60922527686273\n",
            "snc_administrator 9.60922527686273\n",
            "snc_asn_administrator 9.60922527686273\n",
            "snc_invoice_administrator 9.60922527686273\n",
            "snc_invoice_administrator_0 9.60922527686273\n",
            "snc_lib 9.60922527686273\n",
            "snclavalin 9.60922527686273\n",
            "snipemail 9.60922527686273\n",
            "snmpagent 9.60922527686273\n",
            "snmpagentnotresponding 9.60922527686273\n",
            "snmpnoresponse 9.60922527686273\n",
            "snr 9.60922527686273\n",
            "soap 9.60922527686273\n",
            "soddenly 9.60922527686273\n",
            "soedai00 9.60922527686273\n",
            "softphonei 9.60922527686273\n",
            "software_neptune 9.60922527686273\n",
            "softwarer 9.60922527686273\n",
            "softwares 9.60922527686273\n",
            "solar 9.60922527686273\n",
            "soletrobuse 9.60922527686273\n",
            "solexplus 9.60922527686273\n",
            "solima00 9.60922527686273\n",
            "solv_pt 9.60922527686273\n",
            "solver 9.60922527686273\n",
            "solving 9.60922527686273\n",
            "somedays 9.60922527686273\n",
            "sonan 9.60922527686273\n",
            "sonar 9.60922527686273\n",
            "song 9.60922527686273\n",
            "sooner 9.60922527686273\n",
            "sop 9.60922527686273\n",
            "sot 9.60922527686273\n",
            "souce 9.60922527686273\n",
            "sounding 9.60922527686273\n",
            "souring 9.60922527686273\n",
            "sowamn00 9.60922527686273\n",
            "sowamn01 9.60922527686273\n",
            "sowing 9.60922527686273\n",
            "soyimi 9.60922527686273\n",
            "sp05 9.60922527686273\n",
            "sp15 9.60922527686273\n",
            "spanko 9.60922527686273\n",
            "spark 9.60922527686273\n",
            "spcase 9.60922527686273\n",
            "speaking 9.60922527686273\n",
            "specialst 9.60922527686273\n",
            "specialty 9.60922527686273\n",
            "specifications 9.60922527686273\n",
            "spectrum 9.60922527686273\n",
            "speedy 9.60922527686273\n",
            "spend 9.60922527686273\n",
            "spending 9.60922527686273\n",
            "spi_home 9.60922527686273\n",
            "spiceworld 9.60922527686273\n",
            "spidb_1 9.60922527686273\n",
            "spider 9.60922527686273\n",
            "spiid 9.60922527686273\n",
            "spins 9.60922527686273\n",
            "spjbla2151xwc01 9.60922527686273\n",
            "spjbla2155clr09 9.60922527686273\n",
            "spjbla2155clro2 9.60922527686273\n",
            "spjbla2720xclr01 9.60922527686273\n",
            "spjblaclr02 9.60922527686273\n",
            "spjblcl4101clr01 9.60922527686273\n",
            "spjbll2133clr01 9.60922527686273\n",
            "spjbll3103clr01 9.60922527686273\n",
            "spjbln4103clr01 9.60922527686273\n",
            "spjblp2603clr01 9.60922527686273\n",
            "spjblr0101clr03 9.60922527686273\n",
            "spjblra0104clr03 9.60922527686273\n",
            "spjblra10404 9.60922527686273\n",
            "spjblra104clr03 9.60922527686273\n",
            "spjblra104xpl01 9.60922527686273\n",
            "spjblrclr0101clr03 9.60922527686273\n",
            "spjbls0501clr03 9.60922527686273\n",
            "spjbls0703xclr02 9.60922527686273\n",
            "spjblu2601clr01 9.60922527686273\n",
            "spjblu2606clr03 9.60922527686273\n",
            "spjblu2606clr07 9.60922527686273\n",
            "spjblx0913clr03 9.60922527686273\n",
            "spjblx1901clr01 9.60922527686273\n",
            "spjblx1903clr02 9.60922527686273\n",
            "spjblx1903clr04 9.60922527686273\n",
            "spjblz0301clr02 9.60922527686273\n",
            "spjblz0301clr03 9.60922527686273\n",
            "spjblz0301clr05 9.60922527686273\n",
            "spjblz0303clr02 9.60922527686273\n",
            "spjblz0901blk01 9.60922527686273\n",
            "spjblz0901clr01 9.60922527686273\n",
            "spjbu2603clr01 9.60922527686273\n",
            "spjbu2603clr03 9.60922527686273\n",
            "spjublu2601blk01 9.60922527686273\n",
            "spk 9.60922527686273\n",
            "splitter 9.60922527686273\n",
            "spljblz0301clr09 9.60922527686273\n",
            "spo_skc 9.60922527686273\n",
            "spodb01 9.60922527686273\n",
            "sponsored 9.60922527686273\n",
            "sponsors 9.60922527686273\n",
            "spool 9.60922527686273\n",
            "spooler 9.60922527686273\n",
            "sporadically 9.60922527686273\n",
            "spotted 9.60922527686273\n",
            "sppiddb_jbldcvspoel02 9.60922527686273\n",
            "spread 9.60922527686273\n",
            "spreading 9.60922527686273\n",
            "spreadsheets 9.60922527686273\n",
            "spro 9.60922527686273\n",
            "spyro 9.60922527686273\n",
            "sq02 9.60922527686273\n",
            "sqap 9.60922527686273\n",
            "sqladmin 9.60922527686273\n",
            "sqlagent 9.60922527686273\n",
            "sqlanys_jbldcvspped01_ped_p_asa 9.60922527686273\n",
            "sqldatabase 9.60922527686273\n",
            "sqlergetfmpthread 9.60922527686273\n",
            "sqlerreturnfmptopool 9.60922527686273\n",
            "sqlexception 9.60922527686273\n",
            "sqlexceptionhelper 9.60922527686273\n",
            "sqllitlever 9.60922527686273\n",
            "sqlprod 9.60922527686273\n",
            "sqlstatementtype 9.60922527686273\n",
            "sqlt_logerr_string 9.60922527686273\n",
            "sqlubmwresponse 9.60922527686273\n",
            "squidsfloater 9.60922527686273\n",
            "squirrelsetup 9.60922527686273\n",
            "sr0015408 9.60922527686273\n",
            "sr0024376 9.60922527686273\n",
            "sr0065211 9.60922527686273\n",
            "sr0077603 9.60922527686273\n",
            "sr0078228 9.60922527686273\n",
            "sr0078474 9.60922527686273\n",
            "sr0093281 9.60922527686273\n",
            "sr0102540 9.60922527686273\n",
            "sr0114862 9.60922527686273\n",
            "sr0117915 9.60922527686273\n",
            "sr0118076 9.60922527686273\n",
            "sr0118671 9.60922527686273\n",
            "sr0126988 9.60922527686273\n",
            "sr0128977 9.60922527686273\n",
            "sr0129163 9.60922527686273\n",
            "sr0129554 9.60922527686273\n",
            "sr0130436 9.60922527686273\n",
            "sr0130657 9.60922527686273\n",
            "sr0130856 9.60922527686273\n",
            "sr0132193 9.60922527686273\n",
            "sr0132298 9.60922527686273\n",
            "sr0132614 9.60922527686273\n",
            "sr0132822 9.60922527686273\n",
            "sr0133831 9.60922527686273\n",
            "sr0134077 9.60922527686273\n",
            "sr0134104 9.60922527686273\n",
            "sr0134170 9.60922527686273\n",
            "sr0134319 9.60922527686273\n",
            "sr0134435 9.60922527686273\n",
            "sr0134499 9.60922527686273\n",
            "sr0134526 9.60922527686273\n",
            "sr0135150 9.60922527686273\n",
            "sr0135223 9.60922527686273\n",
            "sr0135331 9.60922527686273\n",
            "sr0135715 9.60922527686273\n",
            "sr0135785 9.60922527686273\n",
            "sr0136174 9.60922527686273\n",
            "sr0136265 9.60922527686273\n",
            "sr0136283 9.60922527686273\n",
            "sr0136430 9.60922527686273\n",
            "sr0136624 9.60922527686273\n",
            "sr0136729 9.60922527686273\n",
            "sr0136901 9.60922527686273\n",
            "sr0137406 9.60922527686273\n",
            "sr0137436 9.60922527686273\n",
            "sr0137471 9.60922527686273\n",
            "sr0137473 9.60922527686273\n",
            "sr0137536 9.60922527686273\n",
            "sr0137595 9.60922527686273\n",
            "sr0137617 9.60922527686273\n",
            "sr0137855 9.60922527686273\n",
            "sr0138029 9.60922527686273\n",
            "sr0138378 9.60922527686273\n",
            "sr0138431 9.60922527686273\n",
            "sr0138516 9.60922527686273\n",
            "sr0139810 9.60922527686273\n",
            "sr0140386 9.60922527686273\n",
            "sr0140851 9.60922527686273\n",
            "sr0140853 9.60922527686273\n",
            "sr0140929 9.60922527686273\n",
            "sr0140930 9.60922527686273\n",
            "sr0141023 9.60922527686273\n",
            "sr0141229 9.60922527686273\n",
            "sr0141392 9.60922527686273\n",
            "sr0142319 9.60922527686273\n",
            "sr135266 9.60922527686273\n",
            "sr20824628 9.60922527686273\n",
            "srbkzxrnrvy 9.60922527686273\n",
            "src 9.60922527686273\n",
            "sree 9.60922527686273\n",
            "srinrx00 9.60922527686273\n",
            "srlegal 9.60922527686273\n",
            "ssd 9.60922527686273\n",
            "ssis 9.60922527686273\n",
            "ssj 9.60922527686273\n",
            "ssm_shift 9.60922527686273\n",
            "ssr19845909 9.60922527686273\n",
            "ssslerr_peer_cert_untrusted 9.60922527686273\n",
            "ssw 9.60922527686273\n",
            "ssw6510 9.60922527686273\n",
            "st22 9.60922527686273\n",
            "stability 9.60922527686273\n",
            "stack 9.60922527686273\n",
            "staffs 9.60922527686273\n",
            "stair 9.60922527686273\n",
            "stale 9.60922527686273\n",
            "stamp 9.60922527686273\n",
            "standarad 9.60922527686273\n",
            "standards 9.60922527686273\n",
            "stanix00 9.60922527686273\n",
            "starcitythryv 9.60922527686273\n",
            "stared 9.60922527686273\n",
            "stated 9.60922527686273\n",
            "static 9.60922527686273\n",
            "statred 9.60922527686273\n",
            "statuses 9.60922527686273\n",
            "staycalm 9.60922527686273\n",
            "stays 9.60922527686273\n",
            "std_sql_for_hana 9.60922527686273\n",
            "stdy3frndgreencreamcostmeticsbabystored 9.60922527686273\n",
            "stdyprodig4organizationalcompanygroupin 9.60922527686273\n",
            "steam 9.60922527686273\n",
            "steam_generation 9.60922527686273\n",
            "stepping 9.60922527686273\n",
            "steward 9.60922527686273\n",
            "stf 9.60922527686273\n",
            "stores 9.60922527686273\n",
            "storm 9.60922527686273\n",
            "storyline 9.60922527686273\n",
            "stoutorder 9.60922527686273\n",
            "stralisemariegar 9.60922527686273\n",
            "stranded 9.60922527686273\n",
            "strangling 9.60922527686273\n",
            "strapped 9.60922527686273\n",
            "streamwriter 9.60922527686273\n",
            "streetbuying 9.60922527686273\n",
            "strike 9.60922527686273\n",
            "strong 9.60922527686273\n",
            "strs 9.60922527686273\n",
            "sts 9.60922527686273\n",
            "style 9.60922527686273\n",
            "su24 9.60922527686273\n",
            "suad 9.60922527686273\n",
            "subaaf01 9.60922527686273\n",
            "subadx00 9.60922527686273\n",
            "subafx00 9.60922527686273\n",
            "subash 9.60922527686273\n",
            "subcat 9.60922527686273\n",
            "subhash 9.60922527686273\n",
            "subhashree 9.60922527686273\n",
            "submissions 9.60922527686273\n",
            "subordinates 9.60922527686273\n",
            "subordinator 9.60922527686273\n",
            "subplan_4 9.60922527686273\n",
            "subramanian 9.60922527686273\n",
            "subrata 9.60922527686273\n",
            "subrmx01 9.60922527686273\n",
            "substituting 9.60922527686273\n",
            "substitution 9.60922527686273\n",
            "subsystem 9.60922527686273\n",
            "succeeded 9.60922527686273\n",
            "successsactors 9.60922527686273\n",
            "sucssfactor 9.60922527686273\n",
            "sudestecaminhoes 9.60922527686273\n",
            "sudu6624050 9.60922527686273\n",
            "sudxsx00 9.60922527686273\n",
            "sue 9.60922527686273\n",
            "sufficient 9.60922527686273\n",
            "suggestion 9.60922527686273\n",
            "suggestions 9.60922527686273\n",
            "suhaizam 9.60922527686273\n",
            "suhas 9.60922527686273\n",
            "suit 9.60922527686273\n",
            "suites 9.60922527686273\n",
            "suktgx00 9.60922527686273\n",
            "suktgx002 9.60922527686273\n",
            "sulfide 9.60922527686273\n",
            "sulong 9.60922527686273\n",
            "sum1270 9.60922527686273\n",
            "sum5512 9.60922527686273\n",
            "sumaya 9.60922527686273\n",
            "summed 9.60922527686273\n",
            "sumrongwang 9.60922527686273\n",
            "sungtp00 9.60922527686273\n",
            "sunjul19 9.60922527686273\n",
            "superheroesportuguese 9.60922527686273\n",
            "superintend 9.60922527686273\n",
            "supervision 9.60922527686273\n",
            "supervisors 9.60922527686273\n",
            "supplement 9.60922527686273\n",
            "supplied 9.60922527686273\n",
            "supplies 9.60922527686273\n",
            "supplying 9.60922527686273\n",
            "suppoirt 9.60922527686273\n",
            "supported 9.60922527686273\n",
            "supporter 9.60922527686273\n",
            "suppose 9.60922527686273\n",
            "supt 9.60922527686273\n",
            "suresh 9.60922527686273\n",
            "surgalt 9.60922527686273\n",
            "surname 9.60922527686273\n",
            "surplus 9.60922527686273\n",
            "surprise 9.60922527686273\n",
            "surprised 9.60922527686273\n",
            "surrounding 9.60922527686273\n",
            "surveillance 9.60922527686273\n",
            "surveys 9.60922527686273\n",
            "survivors 9.60922527686273\n",
            "susd 9.60922527686273\n",
            "susdb 9.60922527686273\n",
            "suspect 9.60922527686273\n",
            "suspected 9.60922527686273\n",
            "suspended 9.60922527686273\n",
            "suspicious 9.60922527686273\n",
            "sustained 9.60922527686273\n",
            "suwaas01 9.60922527686273\n",
            "suwaidan 9.60922527686273\n",
            "sv 9.60922527686273\n",
            "svc 9.60922527686273\n",
            "svtl 9.60922527686273\n",
            "svtn15744 9.60922527686273\n",
            "svtn16110 9.60922527686273\n",
            "swap 9.60922527686273\n",
            "swednsecured5565 9.60922527686273\n",
            "sweleger 9.60922527686273\n",
            "swell 9.60922527686273\n",
            "swieos00 9.60922527686273\n",
            "swirch 9.60922527686273\n",
            "switcher 9.60922527686273\n",
            "sx 9.60922527686273\n",
            "sxfwph 9.60922527686273\n",
            "sxqwerz 9.60922527686273\n",
            "syaheen 9.60922527686273\n",
            "syedra00 9.60922527686273\n",
            "syf 9.60922527686273\n",
            "symantac 9.60922527686273\n",
            "symatec 9.60922527686273\n",
            "symbol 9.60922527686273\n",
            "symbols 9.60922527686273\n",
            "symentac 9.60922527686273\n",
            "symentec 9.60922527686273\n",
            "symentic 9.60922527686273\n",
            "symtec 9.60922527686273\n",
            "syndicationtwimg 9.60922527686273\n",
            "syoto 9.60922527686273\n",
            "sys 9.60922527686273\n",
            "sysparm_dashboard 9.60922527686273\n",
            "syste 9.60922527686273\n",
            "system32 9.60922527686273\n",
            "systemdrive 9.60922527686273\n",
            "systemroot 9.60922527686273\n",
            "systoolstmpspace 9.60922527686273\n",
            "syswow64 9.60922527686273\n",
            "sysytem 9.60922527686273\n",
            "szn 9.60922527686273\n",
            "t006 9.60922527686273\n",
            "t006a 9.60922527686273\n",
            "t020_pom_d_loibomorem_upd 9.60922527686273\n",
            "t020_pom_d_matmasorem_upd 9.60922527686273\n",
            "t020_tr_credit_upd1 9.60922527686273\n",
            "t020_tr_credit_upd2 9.60922527686273\n",
            "t020_tr_d_ebs_loadandpost_jp_upd 9.60922527686273\n",
            "t020_tr_d_ebs_proc_chain_upd_s_1 9.60922527686273\n",
            "t020_tr_d_mkdta_refint_daily_upload 9.60922527686273\n",
            "t020_tr_d_payment_req 9.60922527686273\n",
            "t020_tr_d_post_ebs_rfebka30_upd 9.60922527686273\n",
            "t020_tr_d_timeout_monitor_failed 9.60922527686273\n",
            "t020_tr_d_transfer_cc1010_cc1000 9.60922527686273\n",
            "t05 9.60922527686273\n",
            "t2 9.60922527686273\n",
            "t25vg 9.60922527686273\n",
            "t3 9.60922527686273\n",
            "t490 9.60922527686273\n",
            "t4d 9.60922527686273\n",
            "t4daystaff 9.60922527686273\n",
            "t4pr 9.60922527686273\n",
            "t94 9.60922527686273\n",
            "tabajq00 9.60922527686273\n",
            "tablo 9.60922527686273\n",
            "tac 9.60922527686273\n",
            "tachanka 9.60922527686273\n",
            "tackle 9.60922527686273\n",
            "tacsent 9.60922527686273\n",
            "tagging 9.60922527686273\n",
            "taiphanmemfacebookmoi 9.60922527686273\n",
            "tajxsx00 9.60922527686273\n",
            "takrmh00 9.60922527686273\n",
            "talent 9.60922527686273\n",
            "talhsa00 9.60922527686273\n",
            "tamadher 9.60922527686273\n",
            "tamimi 9.60922527686273\n",
            "tampnx00 9.60922527686273\n",
            "tams 9.60922527686273\n",
            "taobaobp 9.60922527686273\n",
            "tape 9.60922527686273\n",
            "taqat 9.60922527686273\n",
            "tare 9.60922527686273\n",
            "targetting 9.60922527686273\n",
            "tarooti 9.60922527686273\n",
            "tarulx00 9.60922527686273\n",
            "tasbserver 9.60922527686273\n",
            "taskawaiter 9.60922527686273\n",
            "taskmanager 9.60922527686273\n",
            "taxi 9.60922527686273\n",
            "tb 9.60922527686273\n",
            "tb1 9.60922527686273\n",
            "tc_invoices 9.60922527686273\n",
            "tccs 9.60922527686273\n",
            "tcku6084817 9.60922527686273\n",
            "tckx5 9.60922527686273\n",
            "tclu5244224 9.60922527686273\n",
            "tclu6872349 9.60922527686273\n",
            "tcnu1776627 9.60922527686273\n",
            "tcp_error 9.60922527686273\n",
            "td4uz 9.60922527686273\n",
            "tdai 9.60922527686273\n",
            "te1e 9.60922527686273\n",
            "te1g 9.60922527686273\n",
            "te1j 9.60922527686273\n",
            "te2 9.60922527686273\n",
            "teambuilding 9.60922527686273\n",
            "teamsmachineinstaller 9.60922527686273\n",
            "tec 9.60922527686273\n",
            "technicians 9.60922527686273\n",
            "teco 9.60922527686273\n",
            "teddy 9.60922527686273\n",
            "telephonic 9.60922527686273\n",
            "telete 9.60922527686273\n",
            "teletu 9.60922527686273\n",
            "tempdb 9.60922527686273\n",
            "temrminated 9.60922527686273\n",
            "temu7527489 9.60922527686273\n",
            "temu7814534 9.60922527686273\n",
            "tendency 9.60922527686273\n",
            "tender 9.60922527686273\n",
            "teoresp 9.60922527686273\n",
            "ter 9.60922527686273\n",
            "terminals 9.60922527686273\n",
            "terminate 9.60922527686273\n",
            "testconnection 9.60922527686273\n",
            "tetse 9.60922527686273\n",
            "textured 9.60922527686273\n",
            "tf 9.60922527686273\n",
            "tftrluofpolvymlznyjfeaynmxt 9.60922527686273\n",
            "tge 9.60922527686273\n",
            "tgf 9.60922527686273\n",
            "tghu9875320 9.60922527686273\n",
            "thaickoo 9.60922527686273\n",
            "thang_hang 9.60922527686273\n",
            "thanhale 9.60922527686273\n",
            "thankx00 9.60922527686273\n",
            "thasigan 9.60922527686273\n",
            "thasthees 9.60922527686273\n",
            "thebyani 9.60922527686273\n",
            "theceei 9.60922527686273\n",
            "thedemocraticpost 9.60922527686273\n",
            "therefor 9.60922527686273\n",
            "therm 9.60922527686273\n",
            "thermal 9.60922527686273\n",
            "thermography 9.60922527686273\n",
            "thes 9.60922527686273\n",
            "thi 9.60922527686273\n",
            "thickness 9.60922527686273\n",
            "thinks 9.60922527686273\n",
            "thirdparty 9.60922527686273\n",
            "thirfet 9.60922527686273\n",
            "thisl 9.60922527686273\n",
            "thn 9.60922527686273\n",
            "thninkpad 9.60922527686273\n",
            "thonayan 9.60922527686273\n",
            "thorough 9.60922527686273\n",
            "thousands 9.60922527686273\n",
            "threading 9.60922527686273\n",
            "threads 9.60922527686273\n",
            "thrm15 9.60922527686273\n",
            "throbbing 9.60922527686273\n",
            "throgh 9.60922527686273\n",
            "throwfornonsuccess 9.60922527686273\n",
            "throwifexceptional 9.60922527686273\n",
            "ths 9.60922527686273\n",
            "thumbnails 9.60922527686273\n",
            "thump 9.60922527686273\n",
            "thunaa00 9.60922527686273\n",
            "thunder 9.60922527686273\n",
            "thx 9.60922527686273\n",
            "thy 9.60922527686273\n",
            "ti310502 9.60922527686273\n",
            "ti310702 9.60922527686273\n",
            "ti336212 9.60922527686273\n",
            "tianyiwanggou 9.60922527686273\n",
            "tickety 9.60922527686273\n",
            "ticking 9.60922527686273\n",
            "tickmarks 9.60922527686273\n",
            "tie 9.60922527686273\n",
            "ties 9.60922527686273\n",
            "tight 9.60922527686273\n",
            "til 9.60922527686273\n",
            "timeframe 9.60922527686273\n",
            "timekeepers 9.60922527686273\n",
            "timeline 9.60922527686273\n",
            "timeout 9.60922527686273\n",
            "timesheets 9.60922527686273\n",
            "tip21 9.60922527686273\n",
            "titan 9.60922527686273\n",
            "titled 9.60922527686273\n",
            "titles 9.60922527686273\n",
            "tiu 9.60922527686273\n",
            "tiuxax00 9.60922527686273\n",
            "tiwari 9.60922527686273\n",
            "tj4h0 9.60922527686273\n",
            "tkt 9.60922527686273\n",
            "tllu4919300 9.60922527686273\n",
            "tllu5962580 9.60922527686273\n",
            "tls1 9.60922527686273\n",
            "tm_pwc 9.60922527686273\n",
            "tma 9.60922527686273\n",
            "tmarkup 9.60922527686273\n",
            "tncllc 9.60922527686273\n",
            "tnkmudgxui 9.60922527686273\n",
            "tno 9.60922527686273\n",
            "tns 9.60922527686273\n",
            "to2s0gcvapib2gonnsq 9.60922527686273\n",
            "to7 9.60922527686273\n",
            "tobedeleted 9.60922527686273\n",
            "tock 9.60922527686273\n",
            "toggle 9.60922527686273\n",
            "togle 9.60922527686273\n",
            "tolerance 9.60922527686273\n",
            "toluene 9.60922527686273\n",
            "tom 9.60922527686273\n",
            "toners 9.60922527686273\n",
            "tonners 9.60922527686273\n",
            "tonum 9.60922527686273\n",
            "toolbar 9.60922527686273\n",
            "toptopcoorp 9.60922527686273\n",
            "toptopcop 9.60922527686273\n",
            "torque 9.60922527686273\n",
            "tothis 9.60922527686273\n",
            "touching 9.60922527686273\n",
            "touchpad 9.60922527686273\n",
            "tours 9.60922527686273\n",
            "tow 9.60922527686273\n",
            "tp 9.60922527686273\n",
            "tpc2snch0g7njxjq 9.60922527686273\n",
            "tprs 9.60922527686273\n",
            "tpsw3850 9.60922527686273\n",
            "tq 9.60922527686273\n",
            "tracked 9.60922527686273\n",
            "trackers 9.60922527686273\n",
            "tradecompliance 9.60922527686273\n",
            "traffichi 9.60922527686273\n",
            "trailing 9.60922527686273\n",
            "trains 9.60922527686273\n",
            "transact 9.60922527686273\n",
            "transcend 9.60922527686273\n",
            "transection 9.60922527686273\n",
            "transfers 9.60922527686273\n",
            "transffered 9.60922527686273\n",
            "transition 9.60922527686273\n",
            "transmontanegrandfather 9.60922527686273\n",
            "transparency 9.60922527686273\n",
            "transportation 9.60922527686273\n",
            "transvil2 9.60922527686273\n",
            "trasncation 9.60922527686273\n",
            "trasportations 9.60922527686273\n",
            "trauma 9.60922527686273\n",
            "travelagent2 9.60922527686273\n",
            "traveled 9.60922527686273\n",
            "tray5 9.60922527686273\n",
            "trdat 9.60922527686273\n",
            "treated 9.60922527686273\n",
            "treatment 9.60922527686273\n",
            "trench 9.60922527686273\n",
            "trevor 9.60922527686273\n",
            "trf4320bb0 9.60922527686273\n",
            "trf4320bb2 9.60922527686273\n",
            "trf4320bb7 9.60922527686273\n",
            "trf4320bb9 9.60922527686273\n",
            "trf4350dnj 9.60922527686273\n",
            "trf4350fp1 9.60922527686273\n",
            "trf4350frt 9.60922527686273\n",
            "trf5110x3b 9.60922527686273\n",
            "trf5400gbf 9.60922527686273\n",
            "trf5400gbt 9.60922527686273\n",
            "trgithxnnnhnt 9.60922527686273\n",
            "trhu 9.60922527686273\n",
            "trhu3045477 9.60922527686273\n",
            "trial 9.60922527686273\n",
            "triangle 9.60922527686273\n",
            "tricycle 9.60922527686273\n",
            "triomigratio 9.60922527686273\n",
            "trip 9.60922527686273\n",
            "tritravlife 9.60922527686273\n",
            "trivedi 9.60922527686273\n",
            "troubleshoote 9.60922527686273\n",
            "troubleshooted 9.60922527686273\n",
            "trough 9.60922527686273\n",
            "trs 9.60922527686273\n",
            "truck 9.60922527686273\n",
            "trust 9.60922527686273\n",
            "trustid 9.60922527686273\n",
            "ts99901275 9.60922527686273\n",
            "tshirt 9.60922527686273\n",
            "tshirts 9.60922527686273\n",
            "tsk 9.60922527686273\n",
            "tsk0029974 9.60922527686273\n",
            "tsk0037165 9.60922527686273\n",
            "tsmc 9.60922527686273\n",
            "ttcfv 9.60922527686273\n",
            "tthe 9.60922527686273\n",
            "ttk 9.60922527686273\n",
            "tto 9.60922527686273\n",
            "ttu 9.60922527686273\n",
            "tu1 9.60922527686273\n",
            "tubing 9.60922527686273\n",
            "tuning 9.60922527686273\n",
            "turjaxqqzwyfzy6a 9.60922527686273\n",
            "turmersan 9.60922527686273\n",
            "turnarounds 9.60922527686273\n",
            "turns 9.60922527686273\n",
            "tuta 9.60922527686273\n",
            "tutamail 9.60922527686273\n",
            "tv1 9.60922527686273\n",
            "twiitter 9.60922527686273\n",
            "twonet 9.60922527686273\n",
            "twttwt 9.60922527686273\n",
            "tx112 9.60922527686273\n",
            "tx19 9.60922527686273\n",
            "tx34 9.60922527686273\n",
            "txrx04 9.60922527686273\n",
            "tydx 9.60922527686273\n",
            "typiconsult 9.60922527686273\n",
            "u15590301 9.60922527686273\n",
            "u2061 9.60922527686273\n",
            "u4303 9.60922527686273\n",
            "u4307 9.60922527686273\n",
            "u863495 9.60922527686273\n",
            "u8pmg 9.60922527686273\n",
            "ua 9.60922527686273\n",
            "uacu5979460 9.60922527686273\n",
            "uacu8560950 9.60922527686273\n",
            "uar 9.60922527686273\n",
            "uasu1013974 9.60922527686273\n",
            "uat_otc22 9.60922527686273\n",
            "uatdata 9.60922527686273\n",
            "ucsd 9.60922527686273\n",
            "ud 9.60922527686273\n",
            "udayakumar 9.60922527686273\n",
            "udp 9.60922527686273\n",
            "udrive 9.60922527686273\n",
            "uetu2729333 9.60922527686273\n",
            "ug 9.60922527686273\n",
            "ukjtcj 9.60922527686273\n",
            "ukronet 9.60922527686273\n",
            "ullah 9.60922527686273\n",
            "ullawx00 9.60922527686273\n",
            "ultrasound 9.60922527686273\n",
            "ulzs 9.60922527686273\n",
            "umber 9.60922527686273\n",
            "umeda 9.60922527686273\n",
            "umesh 9.60922527686273\n",
            "unaable 9.60922527686273\n",
            "unabe 9.60922527686273\n",
            "unacknowledged 9.60922527686273\n",
            "unapproved 9.60922527686273\n",
            "unattached 9.60922527686273\n",
            "unavaiable 9.60922527686273\n",
            "unavailability 9.60922527686273\n",
            "unchanged 9.60922527686273\n",
            "unconnected 9.60922527686273\n",
            "uncovered 9.60922527686273\n",
            "undelete 9.60922527686273\n",
            "undermentioned 9.60922527686273\n",
            "underscores 9.60922527686273\n",
            "undp 9.60922527686273\n",
            "undue 9.60922527686273\n",
            "unenabled 9.60922527686273\n",
            "unhandled 9.60922527686273\n",
            "unicef 9.60922527686273\n",
            "unifier 9.60922527686273\n",
            "uniformly 9.60922527686273\n",
            "uninitialized 9.60922527686273\n",
            "uninterrupted 9.60922527686273\n",
            "unirsd 9.60922527686273\n",
            "united 9.60922527686273\n",
            "unlicned 9.60922527686273\n",
            "unlike 9.60922527686273\n",
            "unloaded 9.60922527686273\n",
            "unluck 9.60922527686273\n",
            "unmerge 9.60922527686273\n",
            "unreachable 9.60922527686273\n",
            "unrecognized 9.60922527686273\n",
            "unrelated 9.60922527686273\n",
            "unrelease 9.60922527686273\n",
            "unsafe 9.60922527686273\n",
            "unsure 9.60922527686273\n",
            "untaken 9.60922527686273\n",
            "untrusted 9.60922527686273\n",
            "unusually 9.60922527686273\n",
            "unverifiedintigoosjai 9.60922527686273\n",
            "uotxrwvavtvtogcatdeqqbefg 9.60922527686273\n",
            "upda 9.60922527686273\n",
            "updat 9.60922527686273\n",
            "updayed 9.60922527686273\n",
            "upgarde 9.60922527686273\n",
            "upgred 9.60922527686273\n",
            "uplandcaraudio 9.60922527686273\n",
            "upn 9.60922527686273\n",
            "upper 9.60922527686273\n",
            "uppercase 9.60922527686273\n",
            "upside 9.60922527686273\n",
            "upstairs 9.60922527686273\n",
            "uqw7g 9.60922527686273\n",
            "ur 9.60922527686273\n",
            "uregent 9.60922527686273\n",
            "urn 9.60922527686273\n",
            "ursulapaulet 9.60922527686273\n",
            "usbnc 9.60922527686273\n",
            "usd 9.60922527686273\n",
            "useinsidehigh 9.60922527686273\n",
            "uselongpath 9.60922527686273\n",
            "useraccountcontrol 9.60922527686273\n",
            "useractions 9.60922527686273\n",
            "userdnsdomain 9.60922527686273\n",
            "userdomain 9.60922527686273\n",
            "userdomain_roamingprofile 9.60922527686273\n",
            "userkey 9.60922527686273\n",
            "usermailadress 9.60922527686273\n",
            "usermailadresse 9.60922527686273\n",
            "userna 9.60922527686273\n",
            "usernames 9.60922527686273\n",
            "userpref 9.60922527686273\n",
            "userprefcontract 9.60922527686273\n",
            "userprefdto 9.60922527686273\n",
            "userpreference 9.60922527686273\n",
            "userprefmanager 9.60922527686273\n",
            "userpreftype 9.60922527686273\n",
            "userprofile 9.60922527686273\n",
            "userss 9.60922527686273\n",
            "usp 9.60922527686273\n",
            "usr 9.60922527686273\n",
            "ut 9.60922527686273\n",
            "ut2606 9.60922527686273\n",
            "ut603 9.60922527686273\n",
            "utakatarefrain 9.60922527686273\n",
            "utcu4730804 9.60922527686273\n",
            "utcu4913106 9.60922527686273\n",
            "utenti 9.60922527686273\n",
            "utiliozation 9.60922527686273\n",
            "utiliuzation 9.60922527686273\n",
            "utilizatio 9.60922527686273\n",
            "utilizationmajor 9.60922527686273\n",
            "utilizing 9.60922527686273\n",
            "utilizzation 9.60922527686273\n",
            "utillization 9.60922527686273\n",
            "uupf 9.60922527686273\n",
            "uv_hr_mss 9.60922527686273\n",
            "uv_hr_tem_training_coordinator 9.60922527686273\n",
            "uv_sap_java_systems_ecc_basis_support 9.60922527686273\n",
            "uwf4m 9.60922527686273\n",
            "uwl 9.60922527686273\n",
            "uznqy 9.60922527686273\n",
            "v0rzpbu 9.60922527686273\n",
            "v2d 9.60922527686273\n",
            "v3 9.60922527686273\n",
            "v4x99v 9.60922527686273\n",
            "v8 9.60922527686273\n",
            "va 9.60922527686273\n",
            "va02 9.60922527686273\n",
            "va03 9.60922527686273\n",
            "va21 9.60922527686273\n",
            "va22 9.60922527686273\n",
            "vacated 9.60922527686273\n",
            "vaeyw 9.60922527686273\n",
            "vaghani 9.60922527686273\n",
            "vaghjn00 9.60922527686273\n",
            "valaution 9.60922527686273\n",
            "valiadity 9.60922527686273\n",
            "validated 9.60922527686273\n",
            "validateend 9.60922527686273\n",
            "validtity 9.60922527686273\n",
            "valve 9.60922527686273\n",
            "valves 9.60922527686273\n",
            "variants 9.60922527686273\n",
            "various 9.60922527686273\n",
            "varun 9.60922527686273\n",
            "vasengineracing 9.60922527686273\n",
            "vasquez 9.60922527686273\n",
            "vbe 9.60922527686273\n",
            "vcenter 9.60922527686273\n",
            "vcp 9.60922527686273\n",
            "vedeo 9.60922527686273\n",
            "vehicle 9.60922527686273\n",
            "veisllc 9.60922527686273\n",
            "velan 9.60922527686273\n",
            "vender 9.60922527686273\n",
            "venkat 9.60922527686273\n",
            "venkatachalam 9.60922527686273\n",
            "venkateshwar 9.60922527686273\n",
            "ventas 9.60922527686273\n",
            "ver 9.60922527686273\n",
            "vergara 9.60922527686273\n",
            "verifyexecution 9.60922527686273\n",
            "versioninfo 9.60922527686273\n",
            "verson 9.60922527686273\n",
            "vertexglobal 9.60922527686273\n",
            "vfj 9.60922527686273\n",
            "vg_jbldcvstoel65 9.60922527686273\n",
            "vg_linux 9.60922527686273\n",
            "vg_spi 9.60922527686273\n",
            "vggysf 9.60922527686273\n",
            "vgsf6ggwy07hu3vghc0weq3ib3wyfc69ojxafg5wrmaverrm7au5gi8zlhs 9.60922527686273\n",
            "vhajqcbalxjoe7 9.60922527686273\n",
            "vib 9.60922527686273\n",
            "videoconference 9.60922527686273\n",
            "videos 9.60922527686273\n",
            "viewand 9.60922527686273\n",
            "viewer 9.60922527686273\n",
            "viewers 9.60922527686273\n",
            "viewrequest 9.60922527686273\n",
            "views 9.60922527686273\n",
            "vikash 9.60922527686273\n",
            "vikrm 9.60922527686273\n",
            "vim_iic 9.60922527686273\n",
            "viodger 9.60922527686273\n",
            "violations 9.60922527686273\n",
            "viperse 9.60922527686273\n",
            "vipul 9.60922527686273\n",
            "viralsharer 9.60922527686273\n",
            "virtualuser 9.60922527686273\n",
            "vis 9.60922527686273\n",
            "vishwanathan 9.60922527686273\n",
            "visiting 9.60922527686273\n",
            "visitor_checker 9.60922527686273\n",
            "visits 9.60922527686273\n",
            "visualstudio 9.60922527686273\n",
            "vivicom 9.60922527686273\n",
            "vkdtknrwqzdkmtkzxcdaeyie 9.60922527686273\n",
            "vl33n 9.60922527686273\n",
            "vl405 9.60922527686273\n",
            "vl60 9.60922527686273\n",
            "vl643 9.60922527686273\n",
            "vlaue 9.60922527686273\n",
            "vmax 9.60922527686273\n",
            "vnf 9.60922527686273\n",
            "vnxcs 9.60922527686273\n",
            "vnxspa 9.60922527686273\n",
            "vnxspb 9.60922527686273\n",
            "voaxd 9.60922527686273\n",
            "voicemail 9.60922527686273\n",
            "voices 9.60922527686273\n",
            "void 9.60922527686273\n",
            "voltageoutofrangeormalfunctioning 9.60922527686273\n",
            "vpaqaz 9.60922527686273\n",
            "vpm 9.60922527686273\n",
            "vqdtnh 9.60922527686273\n",
            "vrkiyer 9.60922527686273\n",
            "vrsv2haqaq3xy6x 9.60922527686273\n",
            "vs 9.60922527686273\n",
            "vsiegru 9.60922527686273\n",
            "vsoc 9.60922527686273\n",
            "vtldb 9.60922527686273\n",
            "vvvnews 9.60922527686273\n",
            "vzls 9.60922527686273\n",
            "w0j3oq 9.60922527686273\n",
            "w10 9.60922527686273\n",
            "w20jy 9.60922527686273\n",
            "w3 9.60922527686273\n",
            "w36 9.60922527686273\n",
            "w7 9.60922527686273\n",
            "w8ilsvvyakwkythcu2fxw 9.60922527686273\n",
            "wacs 9.60922527686273\n",
            "wadhrl00 9.60922527686273\n",
            "wadhwani 9.60922527686273\n",
            "wadnere 9.60922527686273\n",
            "wadnsc00 9.60922527686273\n",
            "wae02 9.60922527686273\n",
            "wae10 9.60922527686273\n",
            "wagama01 9.60922527686273\n",
            "wail 9.60922527686273\n",
            "waist 9.60922527686273\n",
            "wallets 9.60922527686273\n",
            "wallsleepinarun 9.60922527686273\n",
            "wameqz 9.60922527686273\n",
            "wanna 9.60922527686273\n",
            "wap 9.60922527686273\n",
            "waqar 9.60922527686273\n",
            "waqas 9.60922527686273\n",
            "waqasx00 9.60922527686273\n",
            "wards 9.60922527686273\n",
            "warn 9.60922527686273\n",
            "warnings 9.60922527686273\n",
            "wash 9.60922527686273\n",
            "washer 9.60922527686273\n",
            "wasly 9.60922527686273\n",
            "wastes 9.60922527686273\n",
            "wasting 9.60922527686273\n",
            "wat 9.60922527686273\n",
            "watcher 9.60922527686273\n",
            "watchers 9.60922527686273\n",
            "waver 9.60922527686273\n",
            "wb2ahh 9.60922527686273\n",
            "wb_ewm_fire 9.60922527686273\n",
            "wb_ewm_inbound 9.60922527686273\n",
            "wb_ewm_master 9.60922527686273\n",
            "wb_ewm_outbound 9.60922527686273\n",
            "wb_ewm_w001_p001 9.60922527686273\n",
            "wb_ewm_w002_r003 9.60922527686273\n",
            "wbem 9.60922527686273\n",
            "wbgt 9.60922527686273\n",
            "wbs 9.60922527686273\n",
            "wc7220 9.60922527686273\n",
            "wc7835 9.60922527686273\n",
            "wdr 9.60922527686273\n",
            "wdrfjkg129 9.60922527686273\n",
            "weakened 9.60922527686273\n",
            "web1587p16 9.60922527686273\n",
            "web_santander_internet 9.60922527686273\n",
            "webdoc 9.60922527686273\n",
            "webservice 9.60922527686273\n",
            "websitelistbuilder 9.60922527686273\n",
            "webxpotechnologyhardsoftwaresfrdy2hopers 9.60922527686273\n",
            "wedneday 9.60922527686273\n",
            "wee 9.60922527686273\n",
            "weigh 9.60922527686273\n",
            "weighing 9.60922527686273\n",
            "wejdan 9.60922527686273\n",
            "weksrubaz 9.60922527686273\n",
            "welthungerhilfe 9.60922527686273\n",
            "wen 9.60922527686273\n",
            "wf_batch 9.60922527686273\n",
            "wfh 9.60922527686273\n",
            "wfpyutf 9.60922527686273\n",
            "wfs 9.60922527686273\n",
            "wg1361641 9.60922527686273\n",
            "wh3 9.60922527686273\n",
            "whasapp 9.60922527686273\n",
            "whit 9.60922527686273\n",
            "whiteboard 9.60922527686273\n",
            "whitewashing 9.60922527686273\n",
            "who_covid 9.60922527686273\n",
            "whynotcosmetics 9.60922527686273\n",
            "widget 9.60922527686273\n",
            "widow 9.60922527686273\n",
            "widown 9.60922527686273\n",
            "wife 9.60922527686273\n",
            "wifii 9.60922527686273\n",
            "wight 9.60922527686273\n",
            "wihtfloeddrooshnak274 9.60922527686273\n",
            "wilhelmsen 9.60922527686273\n",
            "willem 9.60922527686273\n",
            "willet 9.60922527686273\n",
            "willett 9.60922527686273\n",
            "willsj00 9.60922527686273\n",
            "win7 9.60922527686273\n",
            "wind 9.60922527686273\n",
            "windir 9.60922527686273\n",
            "windoes10 9.60922527686273\n",
            "windos 9.60922527686273\n",
            "window5 9.60922527686273\n",
            "window7 9.60922527686273\n",
            "windows7 9.60922527686273\n",
            "windows8 9.60922527686273\n",
            "windows_nt 9.60922527686273\n",
            "windowsapps 9.60922527686273\n",
            "windowspowershell 9.60922527686273\n",
            "wineguroo 9.60922527686273\n",
            "wing 9.60922527686273\n",
            "winlab 9.60922527686273\n",
            "winning 9.60922527686273\n",
            "winrar 9.60922527686273\n",
            "wipe 9.60922527686273\n",
            "wiredisd 9.60922527686273\n",
            "wirelessly 9.60922527686273\n",
            "wiring 9.60922527686273\n",
            "wishes 9.60922527686273\n",
            "withdrawing 9.60922527686273\n",
            "wither 9.60922527686273\n",
            "withholding 9.60922527686273\n",
            "withteams 9.60922527686273\n",
            "witness 9.60922527686273\n",
            "witnessed 9.60922527686273\n",
            "wity 9.60922527686273\n",
            "wli35ksgitucey4 9.60922527686273\n",
            "wmi 9.60922527686273\n",
            "wms 9.60922527686273\n",
            "wn 9.60922527686273\n",
            "wnrfa9y 9.60922527686273\n",
            "wns 9.60922527686273\n",
            "wok 9.60922527686273\n",
            "wombat 9.60922527686273\n",
            "wonder 9.60922527686273\n",
            "woofwoofacademy 9.60922527686273\n",
            "wore 9.60922527686273\n",
            "woring 9.60922527686273\n",
            "workbooks 9.60922527686273\n",
            "workcenter 9.60922527686273\n",
            "workflew 9.60922527686273\n",
            "workforce 9.60922527686273\n",
            "workman 9.60922527686273\n",
            "workplaces 9.60922527686273\n",
            "worksation 9.60922527686273\n",
            "worksheet 9.60922527686273\n",
            "worldhealthorganization 9.60922527686273\n",
            "worn 9.60922527686273\n",
            "worst 9.60922527686273\n",
            "wow 9.60922527686273\n",
            "wpadmin 9.60922527686273\n",
            "wpln4226a 9.60922527686273\n",
            "wrd 9.60922527686273\n",
            "wrdt 9.60922527686273\n",
            "wringbornetosil19q4 9.60922527686273\n",
            "write_permit 9.60922527686273\n",
            "writealltext 9.60922527686273\n",
            "writefiledata 9.60922527686273\n",
            "writes 9.60922527686273\n",
            "writeseparateliterature 9.60922527686273\n",
            "written 9.60922527686273\n",
            "wrk 9.60922527686273\n",
            "wrok 9.60922527686273\n",
            "wrote 9.60922527686273\n",
            "wrp 9.60922527686273\n",
            "wrt 9.60922527686273\n",
            "ws102 9.60922527686273\n",
            "ws123 9.60922527686273\n",
            "ws131 9.60922527686273\n",
            "ws16438462_external 9.60922527686273\n",
            "ws18438969 9.60922527686273\n",
            "ws18774390 9.60922527686273\n",
            "ws21179611 9.60922527686273\n",
            "ws22274079 9.60922527686273\n",
            "ws23033631 9.60922527686273\n",
            "ws28 9.60922527686273\n",
            "ws3adlfkm1 9.60922527686273\n",
            "ws3lfkm 9.60922527686273\n",
            "ws500 9.60922527686273\n",
            "ws5000 9.60922527686273\n",
            "ws99900220 9.60922527686273\n",
            "ws99900225 9.60922527686273\n",
            "wsdl 9.60922527686273\n",
            "wsf 9.60922527686273\n",
            "wsh 9.60922527686273\n",
            "wsver 9.60922527686273\n",
            "wulinon 9.60922527686273\n",
            "wunchilm 9.60922527686273\n",
            "wwmal 9.60922527686273\n",
            "wwt 9.60922527686273\n",
            "wx 9.60922527686273\n",
            "wxanalytics 9.60922527686273\n",
            "wxqutviemyryivgpndgaud7d5hhqkslepoxnu2nffrsedjpc9fghb1ocwibg8ysa7lxm0w 9.60922527686273\n",
            "wxtgdz 9.60922527686273\n",
            "wzp17510btz 9.60922527686273\n",
            "wzp17510ck0 9.60922527686273\n",
            "wzp17510k3v 9.60922527686273\n",
            "wzp1846094p 9.60922527686273\n",
            "wzp184609z5 9.60922527686273\n",
            "wzp18460ewy 9.60922527686273\n",
            "wzvj 9.60922527686273\n",
            "x0fopmxsq5y2oqud 9.60922527686273\n",
            "x2899 9.60922527686273\n",
            "x3201 9.60922527686273\n",
            "x3d3436rtyhu768iuj78697tuu57689 9.60922527686273\n",
            "x5555 9.60922527686273\n",
            "xample 9.60922527686273\n",
            "xapps 9.60922527686273\n",
            "xc 9.60922527686273\n",
            "xcel 9.60922527686273\n",
            "xchanger 9.60922527686273\n",
            "xcjhb30ton 9.60922527686273\n",
            "xegs4j_zu5lm49dfevsawhi1plznur0pw2gdpajkfchs2rpgyw94m8hyskahfjsb6c2wk5jcwpxszmklohtbp2uwuljg 9.60922527686273\n",
            "xekolw77fzn 9.60922527686273\n",
            "xen 9.60922527686273\n",
            "xersami 9.60922527686273\n",
            "xfm 9.60922527686273\n",
            "xidklebjidorqrb 9.60922527686273\n",
            "xk 9.60922527686273\n",
            "xl 9.60922527686273\n",
            "xljksdu 9.60922527686273\n",
            "xn9dmeiieblc 9.60922527686273\n",
            "xolzrorth 9.60922527686273\n",
            "xrbplpely4rkc6xca 9.60922527686273\n",
            "xrchzulvyjpafro13627cykdfb6ojerrwv 9.60922527686273\n",
            "xsctmmhob0rv4gslxtndcav4rvl5lb2ltyo0jgj8k9k 9.60922527686273\n",
            "xsiv7v4qzjq6rdmpp 9.60922527686273\n",
            "xsl 9.60922527686273\n",
            "xslt 9.60922527686273\n",
            "xss 9.60922527686273\n",
            "xt 9.60922527686273\n",
            "xtl 9.60922527686273\n",
            "xumti39cg1kuf9t2y 9.60922527686273\n",
            "xvfxgw213 9.60922527686273\n",
            "xvfxgw3929 9.60922527686273\n",
            "xxxxxxxxx 9.60922527686273\n",
            "xzj8qntx2f 9.60922527686273\n",
            "y4d80l5xc 9.60922527686273\n",
            "y4mszwl3m3xqgo6qtdooprp_ 9.60922527686273\n",
            "ya66lsx81lwxocgey 9.60922527686273\n",
            "yadaax03 9.60922527686273\n",
            "yah00 9.60922527686273\n",
            "yajqyugsnflkukxfz 9.60922527686273\n",
            "yallalacheruvu 9.60922527686273\n",
            "yamaha 9.60922527686273\n",
            "yamany 9.60922527686273\n",
            "yami 9.60922527686273\n",
            "yammer 9.60922527686273\n",
            "yaseen 9.60922527686273\n",
            "ydcmoowbaaif7mrdcdk8cc48j23sjz9hpmhvy0ukbua 9.60922527686273\n",
            "yejbkvipmjhlvoovntzkd 9.60922527686273\n",
            "yekkmk00 9.60922527686273\n",
            "yepqf 9.60922527686273\n",
            "yfpyutf 9.60922527686273\n",
            "yingdatex 9.60922527686273\n",
            "yjt2nbdk 9.60922527686273\n",
            "ym 9.60922527686273\n",
            "ym100 9.60922527686273\n",
            "ymgxsqexachaexrhhgtmbv6dhxb6ecntdan8mkiq 9.60922527686273\n",
            "yms 9.60922527686273\n",
            "yo 9.60922527686273\n",
            "yourr 9.60922527686273\n",
            "yousef 9.60922527686273\n",
            "yportocarrero 9.60922527686273\n",
            "ystems 9.60922527686273\n",
            "yuemt 9.60922527686273\n",
            "yusof 9.60922527686273\n",
            "yusuf 9.60922527686273\n",
            "ywuihv 9.60922527686273\n",
            "yz1wd 9.60922527686273\n",
            "z0302 9.60922527686273\n",
            "z0306 9.60922527686273\n",
            "z0308 9.60922527686273\n",
            "z040 9.60922527686273\n",
            "z0hwdbzkohwblcm 9.60922527686273\n",
            "z23i 9.60922527686273\n",
            "z8z1627 9.60922527686273\n",
            "z998 9.60922527686273\n",
            "z999 9.60922527686273\n",
            "z_sdr_coding_standard 9.60922527686273\n",
            "zachar 9.60922527686273\n",
            "zadmin 9.60922527686273\n",
            "zagt 9.60922527686273\n",
            "zahra 9.60922527686273\n",
            "zahraa03 9.60922527686273\n",
            "zahraj00 9.60922527686273\n",
            "zahrda00 9.60922527686273\n",
            "zahrma08 9.60922527686273\n",
            "zaidi 9.60922527686273\n",
            "zaidss00 9.60922527686273\n",
            "zain 9.60922527686273\n",
            "zakary 9.60922527686273\n",
            "zaker 9.60922527686273\n",
            "zamabh00 9.60922527686273\n",
            "zapynmg 9.60922527686273\n",
            "zbuzsy 9.60922527686273\n",
            "zcen 9.60922527686273\n",
            "zcompliance_expert 9.60922527686273\n",
            "zep0de 9.60922527686273\n",
            "zepcnc 9.60922527686273\n",
            "zeraga00 9.60922527686273\n",
            "zf2 9.60922527686273\n",
            "zfin 9.60922527686273\n",
            "zgbmzzdhllytcpwwhgej 9.60922527686273\n",
            "zharani 9.60922527686273\n",
            "ziauddin 9.60922527686273\n",
            "ziaumx01 9.60922527686273\n",
            "zinda 9.60922527686273\n",
            "zindmx00 9.60922527686273\n",
            "zipx 9.60922527686273\n",
            "zmak 9.60922527686273\n",
            "zockia 9.60922527686273\n",
            "zonculet 9.60922527686273\n",
            "zoon 9.60922527686273\n",
            "zp009 9.60922527686273\n",
            "zp015 9.60922527686273\n",
            "zp9x80h 9.60922527686273\n",
            "zqqky 9.60922527686273\n",
            "zs6eb 9.60922527686273\n",
            "zse005 9.60922527686273\n",
            "zt410 9.60922527686273\n",
            "ztz 9.60922527686273\n",
            "zuberuddin 9.60922527686273\n",
            "zulkalam 9.60922527686273\n",
            "zyngacdn 9.60922527686273\n",
            "zz 9.60922527686273\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "WAE0bNJtzOsq",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "6af016ad-10e5-4428-fc36-4e0ee96a460b"
      },
      "source": [
        "term_frequency = count_vec.vocabulary_\n",
        "type(term_frequency)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "dict"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "uKgv-p8kzOrC",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 139
        },
        "outputId": "631f1ffc-63bc-4cef-9658-6153be323c23"
      },
      "source": [
        "sorted_by_idf = np.argsort(tfidf_transformer.idf_)\n",
        "feature_names = np.array(count_vec.get_feature_names())\n",
        "print(\"Features with lowest idf:\\n{}\".format(\n",
        "       feature_names[sorted_by_idf[:10]]))\n",
        "print(\"\\nFeatures with highest idf:\\n{}\".format(\n",
        "       feature_names[sorted_by_idf[-10:]]))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Features with lowest idf:\n",
            "['0000' 'logifthrows' 'loging' 'logoff' 'logonserver' 'logout' 'logspace'\n",
            " 'logically' 'lokamr00' 'lolo']\n",
            "\n",
            "Features with highest idf:\n",
            "['almahdali' 'almakaan' 'almaktaba' 'almalki' 'almansor' 'almarshad'\n",
            " 'almasoudi' 'almeida' 'almilhim' 'zz']\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Xr1ZQFXp0ndX",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "d6596aaa-8702-4410-ef9d-a7e01a59a600"
      },
      "source": [
        "\n",
        "from sklearn.feature_extraction.text import CountVectorizer, TfidfTransformer\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import re\n",
        "import warnings\n",
        "\n",
        "#Visualisation\n",
        "import matplotlib.pyplot as plt\n",
        "import matplotlib\n",
        "import seaborn as sns\n",
        "from IPython.display import display\n",
        "#from mpl_toolkits.basemap import Basemap\n",
        "from wordcloud import WordCloud, STOPWORDS\n",
        "\n",
        "#nltk\n",
        "from nltk.stem import WordNetLemmatizer\n",
        "from nltk.sentiment.vader import SentimentIntensityAnalyzer\n",
        "from nltk.sentiment.util import *\n",
        "from nltk import tokenize\n",
        "count = nltk.FreqDist(df.description.values)\n",
        "count.plot(30)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jhbAhMuV0ngE",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "final_doc = df['description']\n",
        "all_documents = tuple(final_doc)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tD5wbuT00nko",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 919
        },
        "outputId": "f2452f90-b76e-4e38-ea8b-523deb936ea3"
      },
      "source": [
        "from sklearn.feature_extraction.text import TfidfVectorizer\n",
        "tfidf_vectorizer = TfidfVectorizer()\n",
        "tfidf_matrix = tfidf_vectorizer.fit_transform(all_documents)\n",
        "print (tfidf_matrix.shape)\n",
        "print(tfidf_matrix)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "(10963, 16206)\n",
            "  (0, 10734)\t0.3514802126554336\n",
            "  (0, 9067)\t0.1304244016598888\n",
            "  (0, 4987)\t0.3622753301280126\n",
            "  (0, 4558)\t0.41198231562925064\n",
            "  (0, 8810)\t0.14079660732032606\n",
            "  (0, 14623)\t0.39235529590059215\n",
            "  (0, 15025)\t0.5763845118140232\n",
            "  (0, 14865)\t0.2291131249830665\n",
            "  (1, 10548)\t0.27036680901394156\n",
            "  (1, 7920)\t0.24171799120690451\n",
            "  (1, 609)\t0.13726381864578707\n",
            "  (1, 14917)\t0.22724895016934357\n",
            "  (1, 7408)\t0.2311153470842975\n",
            "  (1, 14862)\t0.14878720372275625\n",
            "  (1, 15502)\t0.2568701132483872\n",
            "  (1, 14127)\t0.21717712793718127\n",
            "  (1, 11326)\t0.12750366201250277\n",
            "  (1, 11515)\t0.20444208599070499\n",
            "  (1, 13251)\t0.24797133910894176\n",
            "  (1, 5854)\t0.13120007427426927\n",
            "  (1, 13308)\t0.12598669266361273\n",
            "  (1, 3970)\t0.14492565316863953\n",
            "  (1, 9344)\t0.3526416105356604\n",
            "  (1, 5932)\t0.19577005669643258\n",
            "  (1, 11374)\t0.12934277488774903\n",
            "  :\t:\n",
            "  (10961, 13672)\t0.29518789605940965\n",
            "  (10961, 7870)\t0.17679311359679517\n",
            "  (10961, 5854)\t0.22324222633782884\n",
            "  (10961, 13308)\t0.2143714469274553\n",
            "  (10961, 3970)\t0.2465968532852898\n",
            "  (10962, 11895)\t0.37149543092809806\n",
            "  (10962, 12085)\t0.32354007845609695\n",
            "  (10962, 28)\t0.353796537173689\n",
            "  (10962, 11932)\t0.3377450405488173\n",
            "  (10962, 11833)\t0.3147806334444672\n",
            "  (10962, 15391)\t0.22578283897994353\n",
            "  (10962, 1441)\t0.21157787688722315\n",
            "  (10962, 6514)\t0.19363096631247778\n",
            "  (10962, 13384)\t0.15501597217968324\n",
            "  (10962, 12206)\t0.2573502323450197\n",
            "  (10962, 14786)\t0.16718387051957173\n",
            "  (10962, 11406)\t0.1770594166691374\n",
            "  (10962, 15268)\t0.16664744788013452\n",
            "  (10962, 14574)\t0.17225778486813687\n",
            "  (10962, 11093)\t0.1456756138404767\n",
            "  (10962, 15018)\t0.07716300728658756\n",
            "  (10962, 11211)\t0.09508122005715818\n",
            "  (10962, 7325)\t0.15172278869546113\n",
            "  (10962, 9067)\t0.09491340646637854\n",
            "  (10962, 8810)\t0.1024615443859157\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "BlppHgOF0nnf",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 243
        },
        "outputId": "94e5174b-1f77-495d-a54f-a892cfac6d2f"
      },
      "source": [
        "reindexed_data= df[\"description\"]\n",
        "\n",
        "data_text = df[['description']]\n",
        "data_text['index'] = data_text.index\n",
        "documents=data_text\n",
        "\n",
        "\n",
        "print(len(documents))\n",
        "print(documents[:5])\n",
        "\n",
        "import gensim\n",
        "from gensim.utils import simple_preprocess\n",
        "from gensim.parsing.preprocessing import STOPWORDS\n",
        "from nltk.stem import WordNetLemmatizer, SnowballStemmer\n",
        "from nltk.stem.porter import *\n",
        "import numpy as np\n",
        "np.random.seed(2018)\n",
        "import nltk\n",
        "\n",
        "\n",
        "def lemmatize_stemming(text):\n",
        "    return stemmer.stem(WordNetLemmatizer().lemmatize(text, pos='v'))\n",
        "def preprocess(text):\n",
        "    result = []\n",
        "    for token in gensim.utils.simple_preprocess(text):\n",
        "        if token not in gensim.parsing.preprocessing.STOPWORDS and len(token) > 3:\n",
        "            result.append(lemmatize_stemming(token))\n",
        "    return result"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "10963\n",
            "                                         description  index\n",
            "0  The toggle switch in the arm barrier 7 is miss...      0\n",
            "1  The disk E: on computer JBLDCVSPAOD05.AD.SADAR...      1\n",
            "2                  App Fabric Caching Sevice is down      2\n",
            "3  While scanning PCOM label for job 341489 there...      3\n",
            "4   nt@@AZUWEVSPSHPWE01.AD.SADARA.COM\\r\\n10.51.19.81      4\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:4: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  after removing the cwd from sys.path.\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VuFwG7730njG",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 260
        },
        "outputId": "7749e2b7-4e80-45de-fb44-ee07f84ab9ec"
      },
      "source": [
        "from nltk.stem.porter import *\n",
        "\n",
        "import nltk\n",
        "nltk.download('wordnet')\n",
        "  \n",
        "stemmer = PorterStemmer()\n",
        "stemmer.stem('identified')\n",
        "\n",
        "\n",
        "doc_sample = documents[documents['index'] == 5].values[0][0]\n",
        "print('original document: ')\n",
        "words = []\n",
        "for word in doc_sample.split(' '):\n",
        "    words.append(word)\n",
        "print(words)\n",
        "print('\\n\\n tokenized and lemmatized document: ')\n",
        "print(preprocess(doc_sample))\n",
        "\n",
        "\n",
        "processed_docs = documents['description'].map(preprocess)\n",
        "processed_docs[:5]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[nltk_data] Downloading package wordnet to /root/nltk_data...\n",
            "[nltk_data]   Package wordnet is already up-to-date!\n",
            "original document: \n",
            "['nt@@JBLDCVSPSQL26.AD.SADARA.COM\\r\\n10.51.19.81']\n",
            "\n",
            "\n",
            " tokenized and lemmatized document: \n",
            "['jbldcvspsql', 'sadara']\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0                       [toggl, switch, barrier, miss]\n",
              "1    [disk, jbldcvspaod, sadara, run, disk, space, ...\n",
              "2                                [fabric, cach, sevic]\n",
              "3    [scan, pcom, label, error, scan, devic, drum, ...\n",
              "4                               [azuwevspshpw, sadara]\n",
              "Name: description, dtype: object"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "N65xoiLe2NcE",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 208
        },
        "outputId": "0c6a4d5f-5557-490c-9f3b-6172332d6eb7"
      },
      "source": [
        "dictionary = gensim.corpora.Dictionary(processed_docs)\n",
        "count = 0\n",
        "for k, v in dictionary.iteritems():\n",
        "    print(k, v)\n",
        "    count += 1\n",
        "    if count > 10:\n",
        "        break"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "0 barrier\n",
            "1 miss\n",
            "2 switch\n",
            "3 toggl\n",
            "4 disk\n",
            "5 exceed\n",
            "6 free\n",
            "7 jbldcvspaod\n",
            "8 mbyte\n",
            "9 run\n",
            "10 sadara\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Wn_vTeVa2NhO",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "2a727f2d-a4f4-484a-ebda-eb63bef7ab2e"
      },
      "source": [
        "dictionary.filter_extremes(no_below=15, no_above=0.5, keep_n=100000)\n",
        "\n",
        "bow_corpus = [dictionary.doc2bow(doc) for doc in processed_docs]\n",
        "bow_corpus[123]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[(17, 1), (44, 1), (51, 1), (86, 1), (108, 1), (347, 1)]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "udxQHScr2Nl3",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 121
        },
        "outputId": "d300c9f5-9e3d-49ae-ab2b-34a377eb89a3"
      },
      "source": [
        "#Preview Bag Of Words for our sample preprocessed document.\n",
        "bow_doc_123 = bow_corpus[123]\n",
        "for i in range(len(bow_doc_123)):\n",
        "    print(\"Word {} (\\\"{}\\\") appears {} time.\".format(bow_doc_123[i][0], \n",
        "                                               dictionary[bow_doc_123[i][0]], \n",
        "bow_doc_123[i][1]))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Word 17 (\"issu\") appears 1 time.\n",
            "Word 44 (\"save\") appears 1 time.\n",
            "Word 51 (\"user\") appears 1 time.\n",
            "Word 86 (\"report\") appears 1 time.\n",
            "Word 108 (\"face\") appears 1 time.\n",
            "Word 347 (\"say\") appears 1 time.\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "I0jdCgXX4Fs5",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "29d4fc94-7d45-4dbd-fae5-fa42a2244d5b"
      },
      "source": [
        "#TF-IDF\n",
        "from gensim import corpora, models\n",
        "tfidf = models.TfidfModel(bow_corpus)\n",
        "corpus_tfidf = tfidf[bow_corpus]\n",
        "from pprint import pprint\n",
        "for doc in corpus_tfidf:\n",
        "    pprint(doc)\n",
        "    break"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[(0, 0.5820853291109598), (1, 0.5184432362987167), (2, 0.6264130269797226)]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "drwuY8DOodYz",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Sq-AWukzlDC_",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "k3L7O18rjZCa",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zwYIspdk4Fv1",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "8a0ea548-8c11-44b7-bb83-ec7815d56be9"
      },
      "source": [
        "lda_model = gensim.models.LdaMulticore(bow_corpus, num_topics=12, id2word=dictionary, passes=2, workers=2)\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n",
            "/usr/local/lib/python3.6/dist-packages/gensim/models/ldamodel.py:1077: DeprecationWarning: Calling np.sum(generator) is deprecated, and in the future will give a different result. Use np.sum(np.fromiter(generator)) or the python sum builtin instead.\n",
            "  score += np.sum(cnt * logsumexp(Elogthetad + Elogbeta[:, int(id)]) for id, cnt in doc)\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "sHFTPNVY4F4Y",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 471
        },
        "outputId": "0b2692f9-0316-4782-8b33-da9d2ff550e9"
      },
      "source": [
        "# Print the results\n",
        "import pickle\n",
        "\n",
        "# Here we can assign topic names to each topic list, you can specify the number of words you want to have shown (e.g num_words = 5)\n",
        "result = lda_model.print_topics(num_topics=5, num_words=5)\n",
        "print(result)\n",
        "\n",
        "for idx, topic in lda_model.print_topics(-1):\n",
        "    print('Topic: {} \\nWords: {}'.format(idx, topic))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[(1, '0.041*\"sadara\" + 0.038*\"file\" + 0.017*\"chang\" + 0.016*\"work\" + 0.016*\"error\"'), (11, '0.050*\"work\" + 0.037*\"connect\" + 0.034*\"need\" + 0.025*\"issu\" + 0.019*\"laptop\"'), (2, '0.040*\"issu\" + 0.033*\"user\" + 0.028*\"role\" + 0.023*\"printer\" + 0.023*\"team\"'), (4, '0.271*\"cdata\" + 0.101*\"customfield\" + 0.032*\"sadara\" + 0.016*\"hxxp\" + 0.012*\"microsoft\"'), (10, '0.042*\"password\" + 0.028*\"error\" + 0.020*\"tri\" + 0.019*\"work\" + 0.018*\"account\"')]\n",
            "Topic: 0 \n",
            "Words: 0.052*\"attach\" + 0.027*\"skype\" + 0.022*\"open\" + 0.019*\"abl\" + 0.018*\"refer\" + 0.017*\"request\" + 0.017*\"meet\" + 0.016*\"user\" + 0.015*\"error\" + 0.015*\"laptop\"\n",
            "Topic: 1 \n",
            "Words: 0.041*\"sadara\" + 0.038*\"file\" + 0.017*\"chang\" + 0.016*\"work\" + 0.016*\"error\" + 0.015*\"jbldcvspdb\" + 0.014*\"order\" + 0.013*\"statu\" + 0.013*\"show\" + 0.012*\"team\"\n",
            "Topic: 2 \n",
            "Words: 0.040*\"issu\" + 0.033*\"user\" + 0.028*\"role\" + 0.023*\"printer\" + 0.023*\"team\" + 0.020*\"work\" + 0.019*\"need\" + 0.017*\"report\" + 0.017*\"password\" + 0.013*\"crash\"\n",
            "Topic: 3 \n",
            "Words: 0.079*\"null\" + 0.032*\"processor\" + 0.025*\"alert\" + 0.021*\"need\" + 0.020*\"approv\" + 0.017*\"exceed\" + 0.016*\"threshold\" + 0.016*\"attach\" + 0.015*\"time\" + 0.014*\"util\"\n",
            "Topic: 4 \n",
            "Words: 0.271*\"cdata\" + 0.101*\"customfield\" + 0.032*\"sadara\" + 0.016*\"hxxp\" + 0.012*\"microsoft\" + 0.011*\"owner\" + 0.011*\"descript\" + 0.011*\"categori\" + 0.011*\"prioriti\" + 0.010*\"sever\"\n",
            "Topic: 5 \n",
            "Words: 0.053*\"request\" + 0.040*\"issu\" + 0.035*\"node\" + 0.023*\"work\" + 0.022*\"approv\" + 0.017*\"number\" + 0.016*\"laptop\" + 0.015*\"task\" + 0.014*\"attach\" + 0.014*\"receiv\"\n",
            "Topic: 6 \n",
            "Words: 0.068*\"sadara\" + 0.060*\"servic\" + 0.038*\"health\" + 0.037*\"work\" + 0.037*\"error\" + 0.035*\"heartbeat\" + 0.035*\"failur\" + 0.025*\"messag\" + 0.017*\"fail\" + 0.017*\"open\"\n",
            "Topic: 7 \n",
            "Words: 0.050*\"sadara\" + 0.044*\"alert\" + 0.043*\"account\" + 0.039*\"lock\" + 0.032*\"user\" + 0.029*\"number\" + 0.025*\"util\" + 0.024*\"mobil\" + 0.022*\"processor\" + 0.022*\"server\"\n",
            "Topic: 8 \n",
            "Words: 0.049*\"login\" + 0.046*\"connect\" + 0.034*\"user\" + 0.027*\"client\" + 0.022*\"issu\" + 0.021*\"show\" + 0.019*\"network\" + 0.017*\"fail\" + 0.016*\"unabl\" + 0.015*\"sadara\"\n",
            "Topic: 9 \n",
            "Words: 0.056*\"access\" + 0.031*\"email\" + 0.027*\"user\" + 0.025*\"attach\" + 0.020*\"sadara\" + 0.019*\"issu\" + 0.018*\"receiv\" + 0.018*\"team\" + 0.018*\"activ\" + 0.018*\"report\"\n",
            "Topic: 10 \n",
            "Words: 0.042*\"password\" + 0.028*\"error\" + 0.020*\"tri\" + 0.019*\"work\" + 0.018*\"account\" + 0.016*\"user\" + 0.016*\"disk\" + 0.015*\"space\" + 0.015*\"interfac\" + 0.015*\"sadara\"\n",
            "Topic: 11 \n",
            "Words: 0.050*\"work\" + 0.037*\"connect\" + 0.034*\"need\" + 0.025*\"issu\" + 0.019*\"laptop\" + 0.018*\"support\" + 0.014*\"check\" + 0.014*\"time\" + 0.012*\"block\" + 0.011*\"home\"\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cEsti8Kp4F7S",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# put these in a file and name the topics\n",
        "with open(\"lda_topics_result.txt\", \"w\") as f:\n",
        "    for s in result:\n",
        "        f.write(str(s) +\"\\n\")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ImWoQ5o54F2S",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 881
        },
        "outputId": "94ff1397-d5df-44ad-e795-9bdd913faa65"
      },
      "source": [
        "  # Visualize\n",
        "import gensim\n",
        "from gensim.utils import simple_preprocess\n",
        "from gensim.parsing.preprocessing import STOPWORDS\n",
        "from nltk.stem import WordNetLemmatizer, SnowballStemmer\n",
        "from nltk.stem.porter import *\n",
        "import numpy as np\n",
        "np.random.seed(2018)\n",
        "import nltk\n",
        "\n",
        "import keras \n",
        "import numpy as np\n",
        "from keras.preprocessing.text import Tokenizer\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "from keras.models import Sequential\n",
        "from keras.layers import Dense\n",
        "from keras.preprocessing.sequence import pad_sequences\n",
        "from keras.layers import Input, Dense, Dropout, Embedding, LSTM, Flatten\n",
        "from keras.models import Model\n",
        "from keras.utils import to_categorical\n",
        "from keras.callbacks import ModelCheckpoint\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.metrics import accuracy_score\n",
        "plt.style.use('ggplot')\n",
        "%matplotlib inline\n",
        "from IPython.core.display import display, HTML\n",
        "display(HTML(\"<style>.container { width:100% !important; }</style>\"))\n",
        "import pyLDAvis.gensim\n",
        "\n",
        "lda_display = pyLDAvis.gensim.prepare(lda_model, bow_corpus,dictionary, sort_topics=True)\n",
        "pyLDAvis.display(lda_display)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<style>.container { width:100% !important; }</style>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.rawgit.com/bmabey/pyLDAvis/files/ldavis.v1.0.0.css\">\n",
              "\n",
              "\n",
              "<div id=\"ldavis_el1683140121350913144204258636\"></div>\n",
              "<script type=\"text/javascript\">\n",
              "\n",
              "var ldavis_el1683140121350913144204258636_data = {\"mdsDat\": {\"x\": [0.06371162413300267, 0.0881872712373361, 0.09261613763772036, -0.39486383462712565, 0.0766975608503287, 0.03904424204666772, 0.05905859476115224, 0.0017511193864332166, -0.06081525336716464, 0.059323781287798666, -0.010398721338457439, -0.014312522007692112], \"y\": [-0.0008753850467575639, 0.04795055239790894, 0.03848287144884078, 0.045942547280222186, -0.0227788631339966, -0.05786855898247939, 0.05662416492314519, 0.0369936433820462, -0.06256324219783756, 0.08105608958808515, 0.014276726796622542, -0.17724054645579954], \"topics\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], \"cluster\": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], \"Freq\": [13.093823432922363, 11.052692413330078, 9.906222343444824, 9.542198181152344, 9.530142784118652, 8.027273178100586, 7.469043254852295, 7.2919793128967285, 6.917279243469238, 6.655257225036621, 6.1586785316467285, 4.355410099029541]}, \"tinfo\": {\"Term\": [\"cdata\", \"customfield\", \"null\", \"servic\", \"sadara\", \"connect\", \"alert\", \"login\", \"account\", \"request\", \"health\", \"processor\", \"heartbeat\", \"node\", \"password\", \"lock\", \"failur\", \"user\", \"issu\", \"attach\", \"file\", \"error\", \"client\", \"skype\", \"access\", \"number\", \"approv\", \"work\", \"role\", \"util\", \"snow\", \"march\", \"juli\", \"grant\", \"licens\", \"phish\", \"prod\", \"regular\", \"august\", \"director\", \"mailbox\", \"sdpc\", \"final\", \"badg\", \"activ\", \"matter\", \"wireless\", \"email\", \"citrix\", \"wipro\", \"catalog\", \"add\", \"directli\", \"book\", \"year\", \"analysi\", \"abdullah\", \"meridium\", \"thursday\", \"spill\", \"access\", \"switch\", \"report\", \"receiv\", \"asset\", \"help\", \"incid\", \"offic\", \"requir\", \"team\", \"resolv\", \"user\", \"attach\", \"outlook\", \"ticket\", \"employe\", \"approv\", \"send\", \"product\", \"need\", \"issu\", \"thank\", \"sadara\", \"support\", \"abl\", \"instal\", \"unabl\", \"contact\", \"check\", \"kindli\", \"work\", \"mobil\", \"laptop\", \"hdmi\", \"loss\", \"ioc\", \"card\", \"room\", \"video\", \"greet\", \"cabl\", \"repres\", \"dock\", \"internet\", \"break\", \"speaker\", \"block\", \"talk\", \"camera\", \"door\", \"disconnect\", \"relev\", \"corpnet\", \"arrang\", \"export\", \"turnstil\", \"launch\", \"port\", \"wire\", \"reader\", \"reconnect\", \"area\", \"damag\", \"floor\", \"contain\", \"slow\", \"build\", \"home\", \"connect\", \"phone\", \"work\", \"replac\", \"need\", \"support\", \"check\", \"locat\", \"laptop\", \"time\", \"issu\", \"urgent\", \"meet\", \"kindli\", \"skype\", \"thank\", \"mobil\", \"number\", \"network\", \"fail\", \"offic\", \"team\", \"sadara\", \"factor\", \"stock\", \"snap\", \"draw\", \"safeti\", \"skype\", \"alghamdi\", \"shoot\", \"snapshot\", \"queri\", \"behalf\", \"voic\", \"setup\", \"audio\", \"abdulaziz\", \"meet\", \"moham\", \"reliabl\", \"screenshot\", \"design\", \"turnaround\", \"hear\", \"chrome\", \"menu\", \"confer\", \"success\", \"join\", \"refer\", \"correctli\", \"aim\", \"extend\", \"alarm\", \"busi\", \"train\", \"attach\", \"appear\", \"open\", \"enter\", \"abl\", \"window\", \"creat\", \"screen\", \"document\", \"come\", \"print\", \"unabl\", \"link\", \"request\", \"laptop\", \"error\", \"plant\", \"user\", \"applic\", \"kindli\", \"work\", \"approv\", \"need\", \"show\", \"outlook\", \"thank\", \"employe\", \"sadara\", \"access\", \"support\", \"connect\", \"cdata\", \"problemid\", \"connectorstatu\", \"managementgroup\", \"resolutionst\", \"timerais\", \"customfield\", \"connectorid\", \"sitenam\", \"timeresolv\", \"lastmodifiedbi\", \"scom_alert\", \"scomvers\", \"ticketid\", \"scomobjectnod\", \"resolvedbi\", \"rmshostnam\", \"principalnam\", \"ismonitoralert\", \"timead\", \"lastmodifi\", \"repeatcount\", \"fals\", \"framework\", \"hxxp\", \"sever\", \"connector\", \"scom\", \"descript\", \"prioriti\", \"categori\", \"owner\", \"sadara\", \"microsoft\", \"thrift\", \"shutdown\", \"charger\", \"reject\", \"node\", \"task\", \"plan\", \"vacat\", \"origin\", \"mustafa\", \"ghulam\", \"concern\", \"cancel\", \"inventori\", \"perman\", \"rais\", \"request\", \"workflow\", \"materi\", \"wast\", \"hard\", \"polyol\", \"coordin\", \"place\", \"long\", \"faulti\", \"submit\", \"previou\", \"travel\", \"pass\", \"code\", \"face\", \"approv\", \"delet\", \"creat\", \"leav\", \"issu\", \"pend\", \"number\", \"allow\", \"receiv\", \"mobil\", \"time\", \"laptop\", \"work\", \"kindli\", \"attach\", \"team\", \"show\", \"check\", \"resolv\", \"user\", \"employe\", \"contact\", \"access\", \"tri\", \"chang\", \"email\", \"sadara\", \"need\", \"suheel\", \"ident_cod\", \"sftpuser\", \"volgroup\", \"mapper\", \"jbldcvspda\", \"percent\", \"seal\", \"powerpoint\", \"pallet\", \"jbldcvspdb\", \"post\", \"real\", \"lv_root\", \"ipc\", \"cours\", \"sftp\", \"adapt\", \"make\", \"jbldcvspsft\", \"occur\", \"hous\", \"drum\", \"actual\", \"file\", \"cross\", \"sync\", \"tmac\", \"peopl\", \"repeat\", \"fault\", \"drive\", \"backup\", \"save\", \"order\", \"statu\", \"onedr\", \"load\", \"chang\", \"secur\", \"sadara\", \"continu\", \"disk\", \"close\", \"updat\", \"complet\", \"error\", \"dear\", \"show\", \"program\", \"team\", \"work\", \"open\", \"laptop\", \"kindli\", \"access\", \"abl\", \"tri\", \"issu\", \"attach\", \"server\", \"crash\", \"barrier\", \"captiva\", \"inop\", \"lim\", \"color\", \"cubicl\", \"lane\", \"label\", \"qualiti\", \"paper\", \"jam\", \"deskphon\", \"vsphi\", \"role\", \"nave\", \"slpf\", \"copi\", \"sspm\", \"poor\", \"printer\", \"spjblz\", \"xerox\", \"tray\", \"log\", \"dist\", \"reinstal\", \"dispatch\", \"troubleshoot\", \"gate\", \"near\", \"print\", \"mainten\", \"have\", \"symantec\", \"gener\", \"machin\", \"team\", \"issu\", \"report\", \"user\", \"password\", \"assign\", \"jblc\", \"microsoft\", \"need\", \"locat\", \"work\", \"miss\", \"abl\", \"instal\", \"dear\", \"manag\", \"creat\", \"thank\", \"sadara\", \"request\", \"access\", \"heartbeat\", \"health\", \"radio\", \"failur\", \"suffer\", \"agent\", \"servic\", \"vspaim\", \"runtim\", \"tetra\", \"sadarachemco\", \"encount\", \"plastic\", \"aspx\", \"sit\", \"jbldcvspspw\", \"quantiti\", \"fulli\", \"sharepoint\", \"aspen\", \"alzahrani\", \"sitepag\", \"movement\", \"extsadara\", \"centr\", \"java\", \"softwar\", \"center\", \"naviswork\", \"administr\", \"turnstil\", \"messag\", \"fail\", \"error\", \"sadara\", \"releas\", \"work\", \"open\", \"gate\", \"manag\", \"alert\", \"jblc\", \"instal\", \"server\", \"show\", \"attach\", \"http\", \"urgent\", \"data\", \"connect\", \"issu\", \"need\", \"request\", \"screen\", \"access\", \"tri\", \"sitescop\", \"hint\", \"linux\", \"jbldcvspsi\", \"jbldcvspnsn\", \"match\", \"usag\", \"lock\", \"repeatedli\", \"resolut\", \"critic\", \"metric\", \"jbldcvspoel\", \"major\", \"jbldcvspsql\", \"warn\", \"unlock\", \"account\", \"contractor\", \"host\", \"unsuccess\", \"jbldcvspmer\", \"south\", \"outsid\", \"myaccess\", \"desk\", \"util\", \"ping\", \"alert\", \"shop\", \"processor\", \"server\", \"monitor\", \"number\", \"mobil\", \"luck\", \"sadara\", \"window\", \"phone\", \"user\", \"unabl\", \"updat\", \"access\", \"connect\", \"receiv\", \"chang\", \"work\", \"contact\", \"need\", \"messag\", \"email\", \"password\", \"client\", \"microsoftonlin\", \"jsbc\", \"addc\", \"repli\", \"respond\", \"logon\", \"command\", \"keep\", \"login\", \"catalyst\", \"info\", \"vspvbp\", \"common\", \"devic\", \"network\", \"ida\", \"soft\", \"titu\", \"charg\", \"track\", \"ping\", \"attempt\", \"instanc\", \"protect\", \"helpdesk\", \"hostnam\", \"reconnect\", \"popup\", \"repeatedli\", \"polici\", \"connect\", \"fail\", \"imag\", \"interfac\", \"show\", \"page\", \"user\", \"unabl\", \"line\", \"failur\", \"machin\", \"check\", \"issu\", \"abl\", \"number\", \"mobil\", \"desktop\", \"messag\", \"printer\", \"attach\", \"servic\", \"laptop\", \"work\", \"sadara\", \"access\", \"password\", \"request\", \"error\", \"tri\", \"mbyte\", \"tmpcab\", \"logic\", \"jblb\", \"passwordreset\", \"free\", \"distribut\", \"date\", \"space\", \"accept\", \"interfac\", \"profil\", \"supplier\", \"incorrect\", \"reset\", \"seek\", \"deliveri\", \"keyboard\", \"password\", \"collect\", \"sqlserver\", \"disk\", \"quit\", \"choos\", \"object\", \"titu\", \"run\", \"condit\", \"payrol\", \"forget\", \"admin\", \"wdrt\", \"high\", \"tri\", \"valu\", \"error\", \"account\", \"chang\", \"node\", \"threshold\", \"provid\", \"thank\", \"login\", \"connect\", \"work\", \"show\", \"user\", \"need\", \"messag\", \"sadara\", \"attach\", \"support\", \"issu\", \"time\", \"access\", \"abl\", \"null\", \"famili\", \"nnmi\", \"jbldcvspnnm\", \"vpnc\", \"public\", \"enterpris\", \"insuffici\", \"capac\", \"pcctv\", \"malfunct\", \"suppli\", \"model\", \"jbldcd\", \"core\", \"jbldcvsplua\", \"shut\", \"counter\", \"memori\", \"exceed\", \"foreman\", \"threshold\", \"utliz\", \"text\", \"item\", \"queue\", \"titl\", \"twice\", \"specif\", \"power\", \"processor\", \"perform\", \"valu\", \"major\", \"complet\", \"alert\", \"approv\", \"incid\", \"util\", \"time\", \"need\", \"chang\", \"attach\", \"mail\", \"account\", \"show\", \"sadara\", \"laptop\", \"issu\", \"jblc\", \"manag\", \"work\"], \"Freq\": [2771.0, 1048.0, 361.0, 801.0, 2397.0, 1220.0, 842.0, 688.0, 668.0, 1091.0, 361.0, 469.0, 327.0, 524.0, 660.0, 405.0, 422.0, 1625.0, 1739.0, 1567.0, 572.0, 1121.0, 205.0, 454.0, 1507.0, 729.0, 684.0, 1994.0, 389.0, 478.0, 17.521085739135742, 47.21550750732422, 16.191307067871094, 30.129234313964844, 107.77686309814453, 17.508506774902344, 48.590415954589844, 15.501872062683105, 14.062993049621582, 65.9710464477539, 17.424190521240234, 26.460844039916992, 12.592655181884766, 52.796546936035156, 242.26185607910156, 11.193771362304688, 13.914770126342773, 421.138427734375, 46.68672180175781, 25.958038330078125, 14.52808952331543, 23.433103561401367, 11.94778060913086, 32.47121047973633, 29.714183807373047, 11.601324081420898, 24.617053985595703, 10.051694869995117, 13.825504302978516, 10.319937705993652, 771.4276123046875, 28.110881805419922, 241.30517578125, 247.06039428710938, 55.3179931640625, 128.5426788330078, 76.9260482788086, 141.74571228027344, 112.20650482177734, 243.4136962890625, 121.32323455810547, 366.6911315917969, 345.0224304199219, 134.3136444091797, 82.26966094970703, 118.75147247314453, 157.80499267578125, 73.42129516601562, 58.683197021484375, 229.21202087402344, 258.8017272949219, 118.77619934082031, 276.7417297363281, 127.99380493164062, 131.5100860595703, 100.97447204589844, 112.61722564697266, 93.81635284423828, 103.61422729492188, 97.92745208740234, 126.65142822265625, 98.95502471923828, 102.85663604736328, 22.10796356201172, 31.42510414123535, 72.70584869384766, 29.327651977539062, 96.35224151611328, 46.903350830078125, 83.35578155517578, 92.338134765625, 10.433038711547852, 14.17997932434082, 102.34292602539062, 24.044353485107422, 38.12842559814453, 135.90748596191406, 11.745330810546875, 60.44158935546875, 18.776201248168945, 68.4719009399414, 16.083227157592773, 20.071462631225586, 17.780176162719727, 20.709861755371094, 25.9747314453125, 10.75445556640625, 45.79954528808594, 11.699934005737305, 18.841144561767578, 8.866589546203613, 27.813932418823242, 26.673707962036133, 85.74280548095703, 54.14828109741211, 56.89210891723633, 104.97212982177734, 131.21742248535156, 428.1325988769531, 128.6207275390625, 572.3191528320312, 77.05921173095703, 390.6705017089844, 210.92962646484375, 162.9677276611328, 105.86017608642578, 214.3956298828125, 157.6543731689453, 285.174560546875, 86.05575561523438, 93.46259307861328, 126.25640869140625, 105.81756591796875, 106.79242706298828, 112.9026870727539, 112.9999771118164, 77.92890167236328, 88.24224090576172, 82.66590881347656, 96.6037826538086, 100.1010971069336, 34.7906494140625, 12.750007629394531, 34.296878814697266, 14.619636535644531, 16.038551330566406, 282.0243835449219, 8.764586448669434, 83.22760009765625, 32.902679443359375, 15.079127311706543, 34.46217727661133, 22.317411422729492, 16.822147369384766, 33.944793701171875, 13.556148529052734, 175.64320373535156, 26.88465118408203, 11.160962104797363, 118.88935089111328, 7.3598809242248535, 16.655437469482422, 46.35540771484375, 17.182723999023438, 13.04558277130127, 34.30832290649414, 50.89723205566406, 30.422548294067383, 190.5733642578125, 10.284551620483398, 31.194692611694336, 22.500001907348633, 76.7485580444336, 46.76253890991211, 33.51602554321289, 535.0343017578125, 65.40960693359375, 228.0199432373047, 54.6485710144043, 198.40658569335938, 115.35297393798828, 100.8742446899414, 103.93775939941406, 70.00020599365234, 62.19047546386719, 77.96471405029297, 148.8319549560547, 47.232479095458984, 177.97198486328125, 157.43270874023438, 157.52928161621094, 56.17242431640625, 166.9990692138672, 77.00103759765625, 97.64437103271484, 149.4893341064453, 94.51964569091797, 119.56137084960938, 96.72964477539062, 78.56884765625, 78.88259887695312, 70.74947357177734, 102.61744689941406, 91.27381134033203, 74.89576721191406, 70.99174499511719, 2697.69775390625, 102.02684783935547, 101.93936920166016, 101.92597961425781, 101.88761138916016, 101.7438735961914, 1010.6904296875, 101.71410369873047, 101.7222671508789, 101.72742462158203, 101.71017456054688, 101.69371032714844, 101.5570297241211, 101.51927947998047, 101.48059844970703, 101.46492004394531, 101.47552490234375, 101.42766571044922, 101.34122467041016, 101.24574279785156, 101.155517578125, 101.02262878417969, 52.925174713134766, 51.603416442871094, 156.31822204589844, 102.56333923339844, 53.507022857666016, 51.307350158691406, 106.95687103271484, 105.24897766113281, 105.84618377685547, 111.17387390136719, 322.64776611328125, 124.26985931396484, 15.471481323242188, 22.969738006591797, 14.204732894897461, 26.9858341217041, 353.5463562011719, 144.99900817871094, 26.121746063232422, 15.782017707824707, 11.372295379638672, 26.080156326293945, 29.57463836669922, 9.753050804138184, 25.586130142211914, 15.416089057922363, 16.129858016967773, 107.3433609008789, 531.3948974609375, 57.49747085571289, 59.40476608276367, 11.25055980682373, 15.25963306427002, 8.722280502319336, 15.124030113220215, 8.494918823242188, 28.985441207885742, 9.830252647399902, 23.651042938232422, 26.93978500366211, 11.780213356018066, 20.073162078857422, 88.41832733154297, 90.16011810302734, 223.5692138671875, 63.31183624267578, 114.39164733886719, 57.62140655517578, 400.1277160644531, 43.37739562988281, 168.50021362304688, 31.75249671936035, 140.1750946044922, 135.11036682128906, 126.90133666992188, 159.20846557617188, 229.01498413085938, 90.1183090209961, 140.94720458984375, 102.40918731689453, 98.0695571899414, 81.73422241210938, 61.3594970703125, 114.5917739868164, 61.961421966552734, 60.994972229003906, 95.56006622314453, 68.59359741210938, 64.16829681396484, 65.76212310791016, 68.3898696899414, 64.66034698486328, 19.50528907775879, 14.749086380004883, 21.76203727722168, 49.106807708740234, 62.92719268798828, 19.2757511138916, 66.43355560302734, 26.44446563720703, 24.886280059814453, 48.444114685058594, 122.05474090576172, 48.60234832763672, 12.912659645080566, 19.4760684967041, 23.660287857055664, 41.58273696899414, 22.164443969726562, 17.328372955322266, 13.512052536010742, 30.996145248413086, 71.89183044433594, 10.399024963378906, 24.202302932739258, 14.01305866241455, 318.5369567871094, 7.6058478355407715, 23.92884063720703, 58.879703521728516, 16.742982864379883, 35.04363250732422, 77.0248031616211, 91.30050659179688, 41.142669677734375, 55.32172775268555, 113.71337890625, 109.6575927734375, 55.54620361328125, 52.81107711791992, 143.79502868652344, 60.112205505371094, 344.1430969238281, 53.841514587402344, 79.58979034423828, 53.642520904541016, 98.16586303710938, 65.15678405761719, 134.29380798339844, 79.6837158203125, 108.4930419921875, 42.191551208496094, 98.40336608886719, 136.30030822753906, 89.27117156982422, 91.19013214111328, 74.66742706298828, 75.84940338134766, 67.28521728515625, 63.35834884643555, 63.94133758544922, 62.48623275756836, 55.9876823425293, 98.23866271972656, 83.89029693603516, 22.50161361694336, 13.753554344177246, 27.52302360534668, 22.188997268676758, 30.59084701538086, 45.852195739746094, 25.338909149169922, 28.641828536987305, 46.96440505981445, 13.511052131652832, 12.092158317565918, 15.262750625610352, 217.47561645507812, 7.603702545166016, 15.606175422668457, 62.76475143432617, 22.74005126953125, 11.430835723876953, 181.31234741210938, 7.95835542678833, 38.13130187988281, 11.560455322265625, 27.017480850219727, 17.590818405151367, 14.607969284057617, 11.72240161895752, 10.525033950805664, 80.76502990722656, 36.449981689453125, 90.19410705566406, 38.41605758666992, 41.56940460205078, 43.041385650634766, 39.96464538574219, 58.23744583129883, 181.18417358398438, 308.9768371582031, 133.468017578125, 258.0005187988281, 128.90499877929688, 66.66670989990234, 59.43025588989258, 83.15775299072266, 152.20933532714844, 68.38358306884766, 152.7798614501953, 48.440433502197266, 72.6906967163086, 59.907108306884766, 55.61335754394531, 54.51500701904297, 48.79377746582031, 50.04408264160156, 60.48286437988281, 54.86846160888672, 46.70619201660156, 269.49871826171875, 286.9965515136719, 28.57064437866211, 268.688232421875, 7.401336193084717, 37.05253219604492, 454.49444580078125, 26.99856185913086, 28.435894012451172, 30.776426315307617, 17.854198455810547, 10.573673248291016, 13.041346549987793, 18.661819458007812, 18.299596786499023, 12.005878448486328, 15.332734107971191, 6.700150489807129, 44.00334930419922, 30.35154914855957, 5.934598445892334, 4.468100070953369, 11.40947437286377, 10.429908752441406, 5.942425727844238, 8.803516387939453, 71.32765197753906, 78.40863037109375, 6.7219061851501465, 14.186159133911133, 14.602910041809082, 187.13665771484375, 131.54656982421875, 279.1549072265625, 519.436279296875, 22.671926498413086, 282.5508728027344, 131.1700439453125, 41.889404296875, 68.02392578125, 108.68690490722656, 43.0927734375, 68.1254653930664, 69.84575653076172, 95.88711547851562, 120.25090789794922, 41.16438674926758, 40.9948844909668, 34.88504409790039, 71.97051239013672, 69.85711669921875, 55.573238372802734, 48.95563888549805, 39.35841751098633, 45.342185974121094, 39.86582946777344, 92.64218139648438, 18.495101928710938, 38.34967803955078, 39.038429260253906, 18.635652542114258, 18.122472763061523, 36.535282135009766, 284.39080810546875, 16.449621200561523, 14.194293975830078, 44.59798049926758, 12.681023597717285, 13.132804870605469, 136.04086303710938, 32.74336242675781, 48.21072769165039, 35.32365798950195, 308.7148742675781, 11.132173538208008, 30.233497619628906, 5.961308002471924, 25.87636947631836, 7.792366027832031, 13.782215118408203, 17.812171936035156, 53.679256439208984, 183.8028564453125, 55.50968551635742, 317.6337890625, 10.239714622497559, 161.23362731933594, 160.0266876220703, 104.49128723144531, 212.30404663085938, 172.35214233398438, 30.982614517211914, 358.15283203125, 93.18939971923828, 75.8189697265625, 230.4348602294922, 112.618896484375, 83.18097686767578, 130.22341918945312, 102.52386474609375, 74.0250473022461, 59.089599609375, 84.64644622802734, 53.35612869262695, 70.20037841796875, 46.10478591918945, 46.01091766357422, 45.02778244018555, 188.4192352294922, 72.80155944824219, 84.6533203125, 29.67483139038086, 49.08127975463867, 61.80488586425781, 11.354743957519531, 17.986953735351562, 38.50981521606445, 341.6595153808594, 21.285049438476562, 40.75433349609375, 15.214561462402344, 14.877785682678223, 70.4238052368164, 131.9217071533203, 5.965877532958984, 17.11490249633789, 7.48044490814209, 12.091739654541016, 5.486300468444824, 51.50541305541992, 11.49982738494873, 10.388958930969238, 12.689242362976074, 28.543014526367188, 5.859199047088623, 4.991219997406006, 4.827951431274414, 7.226626873016357, 16.982223510742188, 320.7283630371094, 116.95403289794922, 18.540443420410156, 42.886592864990234, 147.58016967773438, 44.58135223388672, 233.397216796875, 113.2680892944336, 29.81689453125, 69.6243896484375, 38.92461013793945, 78.89395904541016, 154.53643798828125, 87.34547424316406, 82.1329574584961, 76.75255584716797, 49.84333038330078, 74.6081314086914, 54.11201095581055, 95.701171875, 71.69011688232422, 76.53753662109375, 99.40434265136719, 103.15730285644531, 82.50977325439453, 63.01645278930664, 68.57587432861328, 67.25021362304688, 57.76936721801758, 44.56086349487305, 75.01390838623047, 32.09165954589844, 90.81910705566406, 11.621221542358398, 63.39085388183594, 13.703165054321289, 62.41562271118164, 99.26463317871094, 70.68958282470703, 98.83092498779297, 40.3841552734375, 15.4370698928833, 23.28228759765625, 69.07138061523438, 7.696414947509766, 13.332609176635742, 17.474506378173828, 269.8436584472656, 8.662202835083008, 8.826601028442383, 101.53583526611328, 5.0174736976623535, 9.302826881408691, 25.542163848876953, 6.827069282531738, 22.757686614990234, 5.7500081062316895, 6.765720844268799, 9.476157188415527, 33.32228088378906, 17.05424690246582, 28.795555114746094, 125.78853607177734, 36.04332733154297, 182.72825622558594, 114.29714965820312, 78.79763793945312, 75.4681396484375, 36.30885696411133, 43.16254425048828, 66.96167755126953, 75.01402282714844, 94.00257873535156, 119.23686981201172, 75.63314819335938, 103.11783599853516, 93.21177673339844, 61.933738708496094, 95.8944091796875, 74.55220794677734, 54.333683013916016, 65.44940185546875, 49.94479751586914, 55.47867202758789, 47.98920440673828, 358.6857604980469, 11.910350799560547, 12.309256553649902, 13.374275207519531, 19.524112701416016, 10.850943565368652, 11.460613250732422, 37.53726577758789, 39.17451858520508, 18.347116470336914, 42.04195022583008, 12.360610961914062, 19.727420806884766, 37.51410675048828, 10.555975914001465, 5.534912586212158, 9.032657623291016, 38.0922737121582, 44.25484085083008, 76.84580993652344, 14.044758796691895, 74.93303680419922, 5.493748188018799, 12.62739372253418, 43.2972297668457, 9.27842903137207, 17.3646183013916, 5.375359058380127, 14.925833702087402, 21.39307975769043, 144.64674377441406, 60.05406951904297, 43.19669723510742, 56.29825210571289, 46.80382537841797, 111.82963562011719, 89.3985595703125, 37.52265930175781, 62.08336639404297, 68.23970794677734, 93.7150650024414, 48.61165237426758, 71.25456237792969, 29.996484756469727, 44.77262496948242, 39.95138931274414, 45.39839172363281, 34.256954193115234, 36.42099380493164, 26.175939559936523, 28.224437713623047, 31.28894805908203], \"Total\": [2771.0, 1048.0, 361.0, 801.0, 2397.0, 1220.0, 842.0, 688.0, 668.0, 1091.0, 361.0, 469.0, 327.0, 524.0, 660.0, 405.0, 422.0, 1625.0, 1739.0, 1567.0, 572.0, 1121.0, 205.0, 454.0, 1507.0, 729.0, 684.0, 1994.0, 389.0, 478.0, 21.936222076416016, 61.809783935546875, 21.196765899658203, 40.555320739746094, 145.22386169433594, 24.521953582763672, 68.12992095947266, 22.568466186523438, 20.960737228393555, 99.220947265625, 26.900997161865234, 42.61642837524414, 20.650794982910156, 86.939697265625, 400.916259765625, 18.918752670288086, 23.616525650024414, 717.8433837890625, 80.01018524169922, 44.79125213623047, 25.26568031311035, 42.053627014160156, 21.549240112304688, 58.57831954956055, 53.81759262084961, 21.441890716552734, 45.55816650390625, 18.7952823638916, 26.130033493041992, 19.762100219726562, 1507.5662841796875, 57.57372283935547, 617.29638671875, 649.1839599609375, 122.9996566772461, 322.914306640625, 180.7696533203125, 387.22381591796875, 297.2392578125, 853.079833984375, 357.0992126464844, 1625.5108642578125, 1567.1695556640625, 451.5302429199219, 237.10325622558594, 401.928466796875, 684.8816528320312, 217.00567626953125, 155.58291625976562, 1376.9981689453125, 1739.7606201171875, 521.6752319335938, 2397.1630859375, 644.421142578125, 760.3709106445312, 443.1692810058594, 678.0028686523438, 415.43890380859375, 593.4629516601562, 630.7413330078125, 1994.027587890625, 661.8461303710938, 955.3521728515625, 26.881206512451172, 40.05256271362305, 99.10960388183594, 41.01715087890625, 134.88262939453125, 66.49018096923828, 120.8589859008789, 134.87741088867188, 15.514713287353516, 21.688579559326172, 156.58364868164062, 37.23634719848633, 61.1842155456543, 220.94676208496094, 19.232398986816406, 99.42229461669922, 31.010995864868164, 114.97964477539062, 27.214250564575195, 34.09798812866211, 30.525794982910156, 35.94706344604492, 45.172340393066406, 19.53084373474121, 83.96038055419922, 21.644506454467773, 34.94822692871094, 16.476224899291992, 52.8997688293457, 51.34813690185547, 176.5239715576172, 113.96709442138672, 120.91035461425781, 237.44296264648438, 312.3385314941406, 1220.38427734375, 313.8515319824219, 1994.027587890625, 180.6193389892578, 1376.9981689453125, 644.421142578125, 593.4629516601562, 343.1448059082031, 955.3521728515625, 636.98876953125, 1739.7606201171875, 279.2864074707031, 332.65850830078125, 630.7413330078125, 454.0989685058594, 521.6752319335938, 661.8461303710938, 729.6670532226562, 314.3814392089844, 471.7869567871094, 387.22381591796875, 853.079833984375, 2397.1630859375, 50.82725143432617, 19.52295684814453, 53.30283737182617, 23.206998825073242, 25.646982192993164, 454.0989685058594, 14.256940841674805, 136.20628356933594, 54.45280075073242, 25.455982208251953, 59.000335693359375, 38.436683654785156, 29.214780807495117, 61.005393981933594, 25.647293090820312, 332.65850830078125, 52.60822677612305, 21.888912200927734, 233.5564422607422, 14.469072341918945, 33.15279769897461, 92.70343780517578, 34.85078430175781, 26.490468978881836, 69.9666519165039, 104.5191650390625, 62.664485931396484, 394.3396301269531, 21.359586715698242, 65.29039764404297, 47.74190139770508, 169.2765655517578, 102.4007797241211, 73.59342193603516, 1567.1695556640625, 169.60928344726562, 815.102783203125, 144.15431213378906, 760.3709106445312, 412.68341064453125, 350.5466003417969, 365.6535949707031, 211.8054962158203, 180.04478454589844, 252.8394775390625, 678.0028686523438, 123.6695556640625, 1091.1802978515625, 955.3521728515625, 1121.527587890625, 174.80625915527344, 1625.5108642578125, 334.4997253417969, 630.7413330078125, 1994.027587890625, 684.8816528320312, 1376.9981689453125, 819.5853271484375, 451.5302429199219, 521.6752319335938, 401.928466796875, 2397.1630859375, 1507.5662841796875, 644.421142578125, 1220.38427734375, 2771.642333984375, 105.4720458984375, 105.49098205566406, 105.48938751220703, 105.49894714355469, 105.52392578125, 1048.461669921875, 105.53225708007812, 105.54471588134766, 105.56937408447266, 105.55986022949219, 105.54399871826172, 105.5816421508789, 105.58219909667969, 105.61742401123047, 105.61601257324219, 105.6402587890625, 105.62169647216797, 105.67079162597656, 105.68006896972656, 105.6618881225586, 105.75653076171875, 57.59778594970703, 56.232666015625, 170.78399658203125, 114.4519271850586, 63.38117218017578, 61.890594482421875, 135.44390869140625, 140.32785034179688, 150.55364990234375, 162.86068725585938, 2397.1630859375, 394.7391052246094, 18.172685623168945, 32.09510040283203, 20.62012481689453, 39.66234588623047, 524.5682983398438, 254.90634155273438, 47.111629486083984, 28.55803680419922, 21.13233184814453, 49.3830451965332, 56.04058837890625, 18.50751495361328, 49.100467681884766, 30.22693634033203, 32.12250900268555, 216.47247314453125, 1091.1802978515625, 118.46404266357422, 122.62245178222656, 23.65066146850586, 32.10243606567383, 18.407922744750977, 32.41008758544922, 18.99732780456543, 65.08546447753906, 22.256704330444336, 53.935970306396484, 62.383827209472656, 27.482343673706055, 47.60475540161133, 215.87417602539062, 230.43618774414062, 684.8816528320312, 175.10000610351562, 350.5466003417969, 166.1797332763672, 1739.7606201171875, 118.5886459350586, 729.6670532226562, 84.22265625, 649.1839599609375, 661.8461303710938, 636.98876953125, 955.3521728515625, 1994.027587890625, 630.7413330078125, 1567.1695556640625, 853.079833984375, 819.5853271484375, 593.4629516601562, 357.0992126464844, 1625.5108642578125, 401.928466796875, 415.43890380859375, 1507.5662841796875, 602.0924682617188, 522.0576171875, 717.8433837890625, 2397.1630859375, 1376.9981689453125, 21.81464385986328, 16.991029739379883, 25.675220489501953, 58.23373031616211, 78.86558532714844, 24.311098098754883, 85.7270736694336, 34.939517974853516, 33.10920333862305, 67.1789779663086, 183.324951171875, 74.19371032714844, 19.790082931518555, 30.241872787475586, 36.91524887084961, 66.58636474609375, 35.51679992675781, 28.159122467041016, 21.97613525390625, 51.82329559326172, 122.22545623779297, 17.91628074645996, 41.719844818115234, 24.287742614746094, 572.7499389648438, 13.72419261932373, 43.98848342895508, 110.22502136230469, 31.8211727142334, 67.14586639404297, 152.56912231445312, 190.19383239746094, 83.25399017333984, 116.6380844116211, 268.7584533691406, 258.6408996582031, 121.20948791503906, 117.78350830078125, 522.0576171875, 165.32244873046875, 2397.1630859375, 140.51927185058594, 267.957275390625, 149.7700653076172, 481.9664306640625, 224.98248291015625, 1121.527587890625, 378.5628662109375, 819.5853271484375, 100.79595184326172, 853.079833984375, 1994.027587890625, 815.102783203125, 955.3521728515625, 630.7413330078125, 1507.5662841796875, 760.3709106445312, 602.0924682617188, 1739.7606201171875, 1567.1695556640625, 474.9351501464844, 117.10505676269531, 100.25623321533203, 27.13583755493164, 17.548254013061523, 36.8798828125, 29.948184967041016, 45.25655746459961, 70.55430603027344, 39.05033874511719, 44.91239547729492, 73.83138275146484, 21.755870819091797, 21.075857162475586, 26.665416717529297, 389.0730895996094, 13.907161712646484, 29.452972412109375, 119.297119140625, 44.349449157714844, 23.035913467407227, 373.1966247558594, 16.487186431884766, 80.08228302001953, 24.44655990600586, 57.84817886352539, 37.93254089355469, 32.98395538330078, 26.913211822509766, 24.74843406677246, 190.88836669921875, 89.99357604980469, 252.8394775390625, 100.05973052978516, 119.42765045166016, 126.34701538085938, 116.4829330444336, 190.5384063720703, 853.079833984375, 1739.7606201171875, 617.29638671875, 1625.5108642578125, 660.8176879882812, 259.2646789550781, 218.0112762451172, 394.7391052246094, 1376.9981689453125, 343.1448059082031, 1994.027587890625, 169.20423889160156, 760.3709106445312, 443.1692810058594, 378.5628662109375, 412.8440246582031, 350.5466003417969, 521.6752319335938, 2397.1630859375, 1091.1802978515625, 1507.5662841796875, 327.72314453125, 361.59521484375, 41.289241790771484, 422.6186218261719, 11.86485767364502, 62.24961471557617, 801.6621704101562, 48.259029388427734, 57.44464111328125, 62.51869583129883, 36.93122100830078, 22.426156997680664, 29.626298904418945, 44.601009368896484, 45.157325744628906, 30.83270835876465, 41.537025451660156, 18.16838264465332, 120.07027435302734, 83.72331237792969, 16.468318939208984, 12.56141471862793, 32.643089294433594, 29.922889709472656, 17.20513343811035, 26.292991638183594, 213.82421875, 236.340576171875, 20.507057189941406, 43.5112419128418, 45.172340393066406, 652.5180053710938, 471.7869567871094, 1121.527587890625, 2397.1630859375, 82.55570983886719, 1994.027587890625, 815.102783203125, 190.88836669921875, 412.8440246582031, 842.8026733398438, 218.0112762451172, 443.1692810058594, 474.9351501464844, 819.5853271484375, 1567.1695556640625, 245.14715576171875, 279.2864074707031, 195.75387573242188, 1220.38427734375, 1739.7606201171875, 1376.9981689453125, 1091.1802978515625, 365.6535949707031, 1507.5662841796875, 602.0924682617188, 109.4101791381836, 22.67123794555664, 47.42279052734375, 52.20579528808594, 25.093961715698242, 24.62155532836914, 51.7910270690918, 405.1356201171875, 25.007240295410156, 23.318864822387695, 84.87178802490234, 24.52063751220703, 25.551956176757812, 269.45404052734375, 69.08206176757812, 103.05702209472656, 75.70706176757812, 668.4328002929688, 24.431529998779297, 67.47205352783203, 13.796838760375977, 60.58349609375, 18.595684051513672, 34.061771392822266, 45.063167572021484, 137.45584106445312, 478.1247253417969, 145.194580078125, 842.8026733398438, 27.66680335998535, 469.13433837890625, 474.9351501464844, 316.5534362792969, 729.6670532226562, 661.8461303710938, 87.30709075927734, 2397.1630859375, 412.68341064453125, 313.8515319824219, 1625.5108642578125, 678.0028686523438, 481.9664306640625, 1507.5662841796875, 1220.38427734375, 649.1839599609375, 522.0576171875, 1994.027587890625, 415.43890380859375, 1376.9981689453125, 652.5180053710938, 717.8433837890625, 660.8176879882812, 205.96661376953125, 85.20115661621094, 101.43785095214844, 39.56432342529297, 83.67918395996094, 118.57352447509766, 21.956478118896484, 35.38485336303711, 76.89141082763672, 688.0440673828125, 43.200782775878906, 82.85935974121094, 30.966184616088867, 31.38860321044922, 156.21902465820312, 314.3814392089844, 14.330290794372559, 42.00265884399414, 19.470497131347656, 32.01417922973633, 14.93263053894043, 145.194580078125, 32.51327896118164, 29.771875381469727, 39.56350326538086, 91.77396392822266, 19.267898559570312, 16.476224899291992, 16.222408294677734, 25.007240295410156, 58.76705551147461, 1220.38427734375, 471.7869567871094, 69.3062744140625, 184.91270446777344, 819.5853271484375, 199.23770141601562, 1625.5108642578125, 678.0028686523438, 127.44825744628906, 422.6186218261719, 190.5384063720703, 593.4629516601562, 1739.7606201171875, 760.3709106445312, 729.6670532226562, 661.8461303710938, 298.33544921875, 652.5180053710938, 373.1966247558594, 1567.1695556640625, 801.6621704101562, 955.3521728515625, 1994.027587890625, 2397.1630859375, 1507.5662841796875, 660.8176879882812, 1091.1802978515625, 1121.527587890625, 602.0924682617188, 47.914737701416016, 83.00875854492188, 35.56498336791992, 102.61019897460938, 15.183737754821777, 88.68342590332031, 21.84349250793457, 99.8614730834961, 159.8536834716797, 126.06688690185547, 184.91270446777344, 75.87812042236328, 31.690956115722656, 48.77787399291992, 145.7856903076172, 16.730884552001953, 31.46969223022461, 42.00986099243164, 660.8176879882812, 21.339229583740234, 22.582626342773438, 267.957275390625, 13.311517715454102, 25.723464965820312, 71.62874603271484, 19.470497131347656, 68.97032928466797, 17.974454879760742, 21.314294815063477, 30.065319061279297, 106.65348052978516, 55.76398849487305, 99.70919799804688, 602.0924682617188, 146.01992797851562, 1121.527587890625, 668.4328002929688, 522.0576171875, 524.5682983398438, 179.22732543945312, 240.60597229003906, 521.6752319335938, 688.0440673828125, 1220.38427734375, 1994.027587890625, 819.5853271484375, 1625.5108642578125, 1376.9981689453125, 652.5180053710938, 2397.1630859375, 1567.1695556640625, 644.421142578125, 1739.7606201171875, 636.98876953125, 1507.5662841796875, 760.3709106445312, 361.68377685546875, 13.850238800048828, 14.325260162353516, 15.68744945526123, 24.472808837890625, 14.321562767028809, 15.334779739379883, 51.52422332763672, 54.62820816040039, 25.766151428222656, 59.75916290283203, 19.126588821411133, 32.42665481567383, 63.407814025878906, 19.288114547729492, 10.14719009399414, 17.99364471435547, 81.40953826904297, 97.64378356933594, 175.61672973632812, 33.1436767578125, 179.22732543945312, 13.685052871704102, 31.54695701599121, 114.04794311523438, 25.146413803100586, 48.44269561767578, 16.249048233032227, 45.27481460571289, 66.25609588623047, 469.13433837890625, 197.97720336914062, 146.01992797851562, 269.45404052734375, 224.98248291015625, 842.8026733398438, 684.8816528320312, 180.7696533203125, 478.1247253417969, 636.98876953125, 1376.9981689453125, 522.0576171875, 1567.1695556640625, 176.0084991455078, 668.4328002929688, 819.5853271484375, 2397.1630859375, 955.3521728515625, 1739.7606201171875, 218.0112762451172, 412.8440246582031, 1994.027587890625], \"Category\": [\"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Default\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic1\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic2\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic3\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic4\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic5\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic6\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic7\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic8\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic9\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic10\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic11\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\", \"Topic12\"], \"logprob\": [30.0, 29.0, 28.0, 27.0, 26.0, 25.0, 24.0, 23.0, 22.0, 21.0, 20.0, 19.0, 18.0, 17.0, 16.0, 15.0, 14.0, 13.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, -6.660600185394287, -5.669300079345703, -6.73960018157959, -6.118500232696533, -4.843999862670898, -6.661399841308594, -5.640600204467773, -6.783100128173828, -6.880499839782715, -5.334799766540527, -6.666200160980225, -6.2484002113342285, -6.990900039672852, -5.557600021362305, -4.033999919891357, -7.108699798583984, -6.89109992980957, -3.481100082397461, -5.680600166320801, -6.267600059509277, -6.8480000495910645, -6.369900226593018, -7.043499946594238, -6.043700218200684, -6.132400035858154, -7.07289981842041, -6.3206000328063965, -7.216300010681152, -6.897500038146973, -7.190000057220459, -2.8757998943328857, -6.187900066375732, -4.038000106811523, -4.014400005340576, -5.510900020599365, -4.667799949645996, -5.18120002746582, -4.570000171661377, -4.803699970245361, -4.029300212860107, -4.725599765777588, -3.619499921798706, -3.6803998947143555, -4.623899936676025, -5.113999843597412, -4.747000217437744, -4.462699890136719, -5.227799892425537, -5.451900005340576, -4.089399814605713, -3.9679999351501465, -4.746799945831299, -3.9010000228881836, -4.672100067138672, -4.644999980926514, -4.909200191497803, -4.800000190734863, -4.982699871063232, -4.883399963378906, -4.939799785614014, -4.682600021362305, -4.9293999671936035, -4.890699863433838, -6.258600234985352, -5.9070000648498535, -5.06820011138916, -5.97599983215332, -4.786600112915039, -5.506499767303467, -4.93149995803833, -4.829100131988525, -7.0096001625061035, -6.702700138092041, -4.726200103759766, -6.174699783325195, -5.713600158691406, -4.442599773406982, -6.89109992980957, -5.252900123596191, -6.421999931335449, -5.1280999183654785, -6.5767998695373535, -6.355299949645996, -6.476500034332275, -6.323999881744385, -6.097400188446045, -6.979300022125244, -5.530300140380859, -6.894999980926514, -6.418499946594238, -7.172299861907959, -6.0289998054504395, -6.070899963378906, -4.903200149536133, -5.362800121307373, -5.313399791717529, -4.700900077819824, -4.477700233459473, -3.295099973678589, -4.497700214385986, -3.0048999786376953, -5.010000228881836, -3.386699914932251, -4.002999782562256, -4.261000156402588, -4.692500114440918, -3.9867000579833984, -4.2941999435424805, -3.7014999389648438, -4.899600028991699, -4.816999912261963, -4.516300201416016, -4.69290018081665, -4.683700084686279, -4.627999782562256, -4.627200126647949, -4.998799800872803, -4.874499797821045, -4.939799785614014, -4.783999919891357, -4.7484002113342285, -5.695700168609619, -6.69950008392334, -5.710000038146973, -6.562699794769287, -6.470099925994873, -3.603100061416626, -7.0742998123168945, -4.823500156402588, -5.751500129699707, -6.531700134277344, -5.7052001953125, -6.139699935913086, -6.422399997711182, -5.720300197601318, -6.638199806213379, -4.076600074768066, -5.953499794006348, -6.832600116729736, -4.466899871826172, -7.249000072479248, -6.432300090789795, -5.408699989318848, -6.401199817657471, -6.676599979400635, -5.709700107574463, -5.315299987792969, -5.829899787902832, -3.994999885559082, -6.914400100708008, -5.804800033569336, -6.131499767303467, -4.9045000076293945, -5.400000095367432, -5.732999801635742, -2.9626998901367188, -5.0644001960754395, -3.8155999183654785, -5.244100093841553, -3.954699993133545, -4.497099876403809, -4.631199836730957, -4.60129976272583, -4.996600151062012, -5.1149001121521, -4.888800144195557, -4.242199897766113, -5.389999866485596, -4.063399791717529, -4.186100006103516, -4.185400009155273, -5.216599941253662, -4.127099990844727, -4.901199817657471, -4.663700103759766, -4.237800121307373, -4.696300029754639, -4.46120023727417, -4.673099994659424, -4.881100177764893, -4.877099990844727, -4.985899925231934, -4.614099979400635, -4.731200218200684, -4.928999900817871, -4.982500076293945, -1.3075000047683716, -4.582399845123291, -4.583199977874756, -4.583399772644043, -4.583799839019775, -4.58519983291626, -2.2892000675201416, -4.5854997634887695, -4.585400104522705, -4.585299968719482, -4.5854997634887695, -4.585700035095215, -4.586999893188477, -4.587399959564209, -4.587800025939941, -4.587900161743164, -4.587800025939941, -4.5883002281188965, -4.589099884033203, -4.590099811553955, -4.591000080108643, -4.592299938201904, -5.238699913024902, -5.263999938964844, -4.155700206756592, -4.577099800109863, -5.227799892425537, -5.269800186157227, -4.535200119018555, -4.551300048828125, -4.545599937438965, -4.496500015258789, -3.4310998916625977, -4.385200023651123, -6.467400074005127, -6.072199821472168, -6.552800178527832, -5.910999774932861, -3.3382999897003174, -4.229599952697754, -5.943600177764893, -6.447500228881836, -6.775199890136719, -5.945199966430664, -5.819399833679199, -6.928800106048584, -5.964300155639648, -6.470900058746338, -6.4257001876831055, -4.530300140380859, -2.9309000968933105, -5.154600143432617, -5.122000217437744, -6.785900115966797, -6.481100082397461, -7.040500164031982, -6.490099906921387, -7.06689977645874, -5.839600086212158, -6.920899868011475, -6.043000221252441, -5.912799835205078, -6.7399001121521, -6.206999778747559, -4.724299907684326, -4.704800128936768, -3.796600103378296, -5.058300018310547, -4.466700077056885, -5.152500152587891, -3.214600086212158, -5.436399936676025, -4.079400062561035, -5.7484002113342285, -4.263500213623047, -4.300300121307373, -4.3628997802734375, -4.136099815368652, -3.772599935531616, -4.7052001953125, -4.257999897003174, -4.577400207519531, -4.620699882507324, -4.8028998374938965, -5.089600086212158, -4.465000152587891, -5.079800128936768, -5.095600128173828, -4.646599769592285, -4.9781999588012695, -5.0447998046875, -5.020299911499023, -4.981100082397461, -5.037199974060059, -6.0640997886657715, -6.343599796295166, -5.954599857330322, -5.140699863433838, -4.8927998542785645, -6.075900077819824, -4.838500022888184, -5.759699821472168, -5.820400238037109, -5.154300212860107, -4.230299949645996, -5.151100158691406, -6.476500034332275, -6.0655999183654785, -5.8709001541137695, -5.30709981918335, -5.936299800872803, -6.182400226593018, -6.43120002746582, -5.600900173187256, -4.7596001625061035, -6.692999839782715, -5.848299980163574, -6.394800186157227, -3.2709999084472656, -7.005799770355225, -5.8597002029418945, -4.959199905395508, -6.216800212860107, -5.478099822998047, -4.6905999183654785, -4.520599842071533, -5.317699909210205, -5.021599769592285, -4.30109977722168, -4.337399959564209, -5.017499923706055, -5.067999839782715, -4.066400051116943, -4.938499927520752, -3.193700075149536, -5.048699855804443, -4.657899856567383, -5.0524001121521, -4.4481000900268555, -4.857900142669678, -4.134699821472168, -4.656700134277344, -4.348100185394287, -5.292500019073486, -4.445700168609619, -4.119900226593018, -4.543099880218506, -4.5218000411987305, -4.721700191497803, -4.705999851226807, -4.825799942016602, -4.885900020599365, -4.876800060272217, -4.899799823760986, -5.0096001625061035, -4.37529993057251, -4.533199787139893, -5.849100112915039, -6.341400146484375, -5.647600173950195, -5.863100051879883, -5.541999816894531, -5.137199878692627, -5.730299949645996, -5.607800006866455, -5.11329984664917, -6.3592000007629395, -6.470099925994873, -6.237199783325195, -3.5806000232696533, -6.934000015258789, -6.215000152587891, -4.823299884796143, -5.838500022888184, -6.526400089263916, -3.762399911880493, -6.888400077819824, -5.321599960327148, -6.515100002288818, -5.666200160980225, -6.095300197601318, -6.281099796295166, -6.501200199127197, -6.60890007019043, -4.571100234985352, -5.366700172424316, -4.460700035095215, -5.314199924468994, -5.235300064086914, -5.200500011444092, -5.274700164794922, -4.898099899291992, -3.763200044631958, -3.2293999195098877, -4.06879997253418, -3.4096999168395996, -4.103600025177002, -4.763000011444092, -4.877900123596191, -4.541900157928467, -3.9374001026153564, -4.737500190734863, -3.9337000846862793, -5.082300186157227, -4.676499843597412, -4.869900226593018, -4.944200038909912, -4.964200019836426, -5.075099945068359, -5.049799919128418, -4.860300064086914, -4.957699775695801, -5.118800163269043, -3.342099905014038, -3.2792000770568848, -5.586299896240234, -3.345099925994873, -6.936999797821045, -5.326300144195557, -2.819499969482422, -5.642899990081787, -5.591000080108643, -5.511899948120117, -6.056399822235107, -6.5802998542785645, -6.370500087738037, -6.012199878692627, -6.031799793243408, -6.4532999992370605, -6.208700180053711, -7.036499977111816, -5.154399871826172, -5.5258002281188965, -7.157899856567383, -7.441699981689453, -6.504199981689453, -6.593999862670898, -7.156599998474121, -6.763500213623047, -4.67140007019043, -4.576700210571289, -7.033299922943115, -6.286399841308594, -6.257500171661377, -3.7067999839782715, -4.059299945831299, -3.3069000244140625, -2.6858999729156494, -5.817500114440918, -3.294800043106079, -4.06220006942749, -5.20359992980957, -4.718800067901611, -4.250199794769287, -5.175300121307373, -4.717299938201904, -4.692399978637695, -4.375500202178955, -4.149099826812744, -5.221099853515625, -5.225200176239014, -5.386600017547607, -4.662399768829346, -4.692200183868408, -4.921000003814697, -5.047800064086914, -5.265999794006348, -5.1244001388549805, -5.253200054168701, -4.3572001457214355, -5.968400001525879, -5.239200115203857, -5.221399784088135, -5.9608001708984375, -5.988800048828125, -5.287600040435791, -3.235599994659424, -6.085599899291992, -6.233099937438965, -5.088200092315674, -6.345799922943115, -6.310800075531006, -3.9730000495910645, -5.397200107574463, -5.010300159454346, -5.321400165557861, -3.1535000801086426, -6.476099967956543, -5.4770002365112305, -7.100599765777588, -5.632599830627441, -6.832799911499023, -6.262499809265137, -6.00600004196167, -4.902900218963623, -3.672100067138672, -4.8694000244140625, -3.125, -6.559599876403809, -3.803100109100342, -3.8106000423431396, -4.236800193786621, -3.527899980545044, -3.7363998889923096, -5.452499866485596, -3.005000114440918, -4.35129976272583, -4.557600021362305, -3.446000099182129, -4.161900043487549, -4.464900016784668, -4.01669979095459, -4.255799770355225, -4.581500053405762, -4.8069000244140625, -4.447400093078613, -4.908899784088135, -4.6346001625061035, -5.054999828338623, -5.057000160217285, -5.07859992980957, -3.608599901199341, -4.559599876403809, -4.408699989318848, -5.456999778747559, -4.953800201416016, -4.723299980163574, -6.417699813842773, -5.957699775695801, -5.196400165557861, -3.0134999752044678, -5.789299964904785, -5.139699935913086, -6.125100135803223, -6.14739990234375, -4.592800140380859, -3.965100049972534, -7.061200141906738, -6.007400035858154, -6.835000038146973, -6.354800224304199, -7.145100116729736, -4.905600070953369, -6.40500020980835, -6.5065999031066895, -6.306600093841553, -5.4959001541137695, -7.0792999267578125, -7.23960018157959, -7.272900104522705, -6.869500160217285, -6.015100002288818, -3.07669997215271, -4.0854997634887695, -5.9274001121521, -5.088699817657471, -3.8529000282287598, -5.050000190734863, -3.3945999145507812, -4.117499828338623, -5.452199935913086, -4.6041998863220215, -5.185699939727783, -4.4791998863220215, -3.8069000244140625, -4.377399921417236, -4.439000129699707, -4.506700038909912, -4.938399791717529, -4.535099983215332, -4.856200218200684, -4.286099910736084, -4.574999809265137, -4.509500026702881, -4.2480998039245605, -4.210999965667725, -4.4344000816345215, -4.70389986038208, -4.6194000244140625, -4.638899803161621, -4.790800094604492, -4.972899913787842, -4.452099800109863, -5.301199913024902, -4.260900020599365, -6.31689977645874, -4.6203999519348145, -6.152100086212158, -4.635900020599365, -4.171999931335449, -4.511499881744385, -4.176300048828125, -5.071300029754639, -6.0329999923706055, -5.622099876403809, -4.534599781036377, -6.729000091552734, -6.179500102996826, -5.908999919891357, -3.1719000339508057, -6.610799789428711, -6.5920000076293945, -4.1493000984191895, -7.156799793243408, -6.539400100708008, -5.529399871826172, -6.848899841308594, -5.644899845123291, -7.020599842071533, -6.857900142669678, -6.520999908447266, -5.263500213623047, -5.9334001541137695, -5.4095001220703125, -3.9351999759674072, -5.184999942779541, -3.561800003051758, -4.031000137329102, -4.402900218963623, -4.446000099182129, -5.177700042724609, -5.004799842834473, -4.5655999183654785, -4.452099800109863, -4.226399898529053, -3.988600015640259, -4.443900108337402, -4.133900165557861, -4.234899997711182, -4.643700122833252, -4.206500053405762, -4.4583001136779785, -4.774600028991699, -4.588500022888184, -4.858799934387207, -4.753799915313721, -4.898799896240234, -2.5408999919891357, -5.945899963378906, -5.913000106811523, -5.829999923706055, -5.451700210571289, -6.039100170135498, -5.984399795532227, -4.797999858856201, -4.755300045013428, -5.513800144195557, -4.684599876403809, -5.90880012512207, -5.441299915313721, -4.798600196838379, -6.0665998458862305, -6.712200164794922, -6.222499847412109, -4.783299922943115, -4.633399963378906, -4.081500053405762, -5.781099796295166, -4.1066999435424805, -6.719699859619141, -5.887400150299072, -4.655200004577637, -6.1956000328063965, -5.568900108337402, -6.741499900817871, -5.720200061798096, -5.360199928283691, -3.4489998817443848, -4.328100204467773, -4.657599925994873, -4.3927001953125, -4.577400207519531, -3.7063000202178955, -3.9302000999450684, -4.798399925231934, -4.2947998046875, -4.200300216674805, -3.8831000328063965, -4.5395002365112305, -4.157100200653076, -5.022200107574463, -4.621699810028076, -4.7357001304626465, -4.607800006866455, -4.889400005340576, -4.828199863433838, -5.1585001945495605, -5.083099842071533, -4.980100154876709], \"loglift\": [30.0, 29.0, 28.0, 27.0, 26.0, 25.0, 24.0, 23.0, 22.0, 21.0, 20.0, 19.0, 18.0, 17.0, 16.0, 15.0, 14.0, 13.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, 1.8083000183105469, 1.763700008392334, 1.763700008392334, 1.7359000444412231, 1.7347999811172485, 1.6960999965667725, 1.6950000524520874, 1.6574000120162964, 1.6339000463485718, 1.624899983406067, 1.5987000465393066, 1.55649995803833, 1.5384000539779663, 1.5342999696731567, 1.5292999744415283, 1.5082000494003296, 1.503999948501587, 1.4996999502182007, 1.4943000078201294, 1.4874999523162842, 1.479699969291687, 1.448199987411499, 1.4431999921798706, 1.4429999589920044, 1.4391000270843506, 1.4187999963760376, 1.4175000190734863, 1.4071999788284302, 1.3964999914169312, 1.3832999467849731, 1.3630000352859497, 1.316100001335144, 1.0937000513076782, 1.0669000148773193, 1.2338999509811401, 1.111899971961975, 1.1786999702453613, 1.0281000137329102, 1.0587999820709229, 0.7789000272750854, 0.953499972820282, 0.5440000295639038, 0.519599974155426, 0.8205999732017517, 0.9745000004768372, 0.8137999773025513, 0.5651000142097473, 0.9492999911308289, 1.0579999685287476, 0.23999999463558197, 0.12759999930858612, 0.5532000064849854, -0.125900000333786, 0.41670000553131104, 0.2782999873161316, 0.5539000034332275, 0.2379000037908554, 0.5450000166893005, 0.28769999742507935, 0.1703999936580658, -0.7233999967575073, 0.13269999623298645, -0.195700004696846, 2.006999969482422, 1.9599000215530396, 1.892699956893921, 1.8669999837875366, 1.8660999536514282, 1.8535000085830688, 1.8309999704360962, 1.8236000537872314, 1.8056999444961548, 1.777500033378601, 1.7771999835968018, 1.7651000022888184, 1.729599952697754, 1.7165000438690186, 1.7094000577926636, 1.704800009727478, 1.700700044631958, 1.6842000484466553, 1.6764999628067017, 1.6726000308990479, 1.6619999408721924, 1.6511000394821167, 1.6490999460220337, 1.6058000326156616, 1.5964000225067139, 1.5872999429702759, 1.5846999883651733, 1.582900047302246, 1.5595999956130981, 1.5475000143051147, 1.4803999662399292, 1.458299994468689, 1.4486000537872314, 1.386299967765808, 1.3352999687194824, 1.1549999713897705, 1.3104000091552734, 0.9542999863624573, 1.3507000207901, 0.9427000284194946, 1.0857000350952148, 0.910099983215332, 1.0264999866485596, 0.7081999778747559, 0.8061000108718872, 0.39410001039505005, 1.0253000259399414, 0.9329000115394592, 0.5939000248908997, 0.7458999752998352, 0.6162999868392944, 0.4339999854564667, 0.33730000257492065, 0.807699978351593, 0.5260999798774719, 0.65829998254776, 0.024299999698996544, -0.9733999967575073, 1.9328999519348145, 1.8859000205993652, 1.8710999488830566, 1.8499000072479248, 1.8425999879837036, 1.8357000350952148, 1.8255000114440918, 1.8193999528884888, 1.8082000017166138, 1.7884000539779663, 1.7742999792099, 1.768399953842163, 1.7599999904632568, 1.7258000373840332, 1.674399971961975, 1.67330002784729, 1.6406999826431274, 1.6383999586105347, 1.6368000507354736, 1.6360000371932983, 1.6236000061035156, 1.618899941444397, 1.6047999858856201, 1.603700041770935, 1.5994000434875488, 1.5923999547958374, 1.589400053024292, 1.5848000049591064, 1.5810999870300293, 1.5734000205993652, 1.5597000122070312, 1.5210000276565552, 1.5282000303268433, 1.5255000591278076, 1.2373000383377075, 1.3592000007629395, 1.038100004196167, 1.3420000076293945, 0.968500018119812, 1.0372999906539917, 1.0664000511169434, 1.0541000366210938, 1.204800009727478, 1.2489999532699585, 1.1354999542236328, 0.7957000136375427, 1.3494999408721924, 0.4986000061035156, 0.508899986743927, 0.3492000102996826, 1.176800012588501, 0.036400001496076584, 0.8432000279426575, 0.446399986743927, -0.27869999408721924, 0.33160001039505005, -0.13179999589920044, 0.17509999871253967, 0.5633000135421753, 0.42289999127388, 0.5748999714851379, -0.8389999866485596, -0.49239999055862427, 0.1597999930381775, -0.5324000120162964, 2.3224000930786133, 2.316200017929077, 2.315200090408325, 2.3150999546051025, 2.3145999908447266, 2.312999963760376, 2.3127999305725098, 2.3125998973846436, 2.3125998973846436, 2.3124001026153564, 2.312299966812134, 2.312299966812134, 2.3106000423431396, 2.3101999759674072, 2.309499979019165, 2.309299945831299, 2.3092000484466553, 2.3089001178741455, 2.3076000213623047, 2.3066000938415527, 2.3059000968933105, 2.3036999702453613, 2.2648000717163086, 2.2634999752044678, 2.2609000205993652, 2.239799976348877, 2.1800999641418457, 2.161900043487549, 2.113300085067749, 2.061800003051758, 1.9970999956130981, 1.9675999879837036, 0.3440000116825104, 1.1936999559402466, 2.1898000240325928, 2.016200065612793, 1.9780000448226929, 1.9656000137329102, 1.9560999870300293, 1.7864999771118164, 1.7610000371932983, 1.757599949836731, 1.7310999631881714, 1.7122999429702759, 1.7115999460220337, 1.7101000547409058, 1.6988999843597412, 1.67739999294281, 1.6618000268936157, 1.6492999792099, 1.6311999559402466, 1.6277999877929688, 1.6260000467300415, 1.607699990272522, 1.6069999933242798, 1.6038000583648682, 1.5885000228881836, 1.5458999872207642, 1.5418000221252441, 1.5334999561309814, 1.5262999534606934, 1.5110000371932983, 1.503600001335144, 1.4872000217437744, 1.4580999612808228, 1.4122999906539917, 1.2311999797821045, 1.333400011062622, 1.2308000326156616, 1.2914999723434448, 0.8809999823570251, 1.3450000286102295, 0.8851000070571899, 1.3752000331878662, 0.8179000020027161, 0.7617999911308289, 0.7373999953269958, 0.5587999820709229, 0.186599999666214, 0.4049000144004822, -0.05790000036358833, 0.23080000281333923, 0.22759999334812164, 0.36820000410079956, 0.5893999934196472, -0.30149999260902405, 0.48089998960494995, 0.43220001459121704, -0.40779998898506165, 0.1784999966621399, 0.25440001487731934, -0.039500001817941666, -1.2060999870300293, -0.7077999711036682, 2.410399913787842, 2.3808000087738037, 2.3570001125335693, 2.351900100708008, 2.296600103378296, 2.2901999950408936, 2.267400026321411, 2.243799924850464, 2.236799955368042, 2.1953999996185303, 2.115499973297119, 2.099299907684326, 2.095400094985962, 2.0822999477386475, 2.077500104904175, 2.051500082015991, 2.050800085067749, 2.036799907684326, 2.0360000133514404, 2.0083000659942627, 1.9916000366210938, 1.9782999753952026, 1.9778000116348267, 1.9723000526428223, 1.9356000423431396, 1.9321000576019287, 1.9134999513626099, 1.895300030708313, 1.8802000284194946, 1.8720999956130981, 1.8387999534606934, 1.7884000539779663, 1.8174999952316284, 1.7763999700546265, 1.6621999740600586, 1.664199948310852, 1.7419999837875366, 1.7201999425888062, 1.2329000234603882, 1.510599970817566, 0.5813000202178955, 1.562999963760376, 1.30840003490448, 1.4955999851226807, 0.9311000108718872, 1.2831000089645386, 0.39989998936653137, 0.9639999866485596, 0.5001999735832214, 1.6513999700546265, 0.36250001192092896, -0.1606999933719635, 0.310699999332428, 0.17319999635219574, 0.38850000500679016, -0.46720001101493835, 0.09749999642372131, 0.27070000767707825, -0.7811999917030334, -0.6998000144958496, 0.38429999351501465, 2.4186999797821045, 2.4161999225616455, 2.407099962234497, 2.3506999015808105, 2.301800012588501, 2.2945001125335693, 2.2028000354766846, 2.1633999347686768, 2.161900043487549, 2.1445999145507812, 2.1419999599456787, 2.118000030517578, 2.038800001144409, 2.0364999771118164, 2.012700080871582, 1.9905999898910522, 1.9593000411987305, 1.9522000551223755, 1.9263999462127686, 1.8937000036239624, 1.872499942779541, 1.8660000562667847, 1.8523999452590942, 1.8454999923706055, 1.8330999612808228, 1.8259999752044678, 1.7798999547958374, 1.7632999420166016, 1.739400029182434, 1.7343000173568726, 1.690600037574768, 1.563599944114685, 1.6370999813079834, 1.5391000509262085, 1.5175000429153442, 1.5247000455856323, 1.40910005569458, 1.0450999736785889, 0.8661999702453613, 1.0628999471664429, 0.7537999749183655, 0.9599999785423279, 1.236299991607666, 1.294700026512146, 1.0369000434875488, 0.3919999897480011, 0.9814000129699707, 0.025499999523162842, 1.3436000347137451, 0.2468000054359436, 0.5932000279426575, 0.6764000058174133, 0.5698000192642212, 0.6225000023841858, 0.25029999017715454, -1.0852999687194824, -0.39570000767707825, -0.8799999952316284, 2.422800064086914, 2.3873000144958496, 2.250200033187866, 2.1654999256134033, 2.1465001106262207, 2.099600076675415, 2.0508999824523926, 2.037600040435791, 1.9151999950408936, 1.9097000360488892, 1.8916000127792358, 1.8665000200271606, 1.7978999614715576, 1.7470999956130981, 1.7151000499725342, 1.6751999855041504, 1.6217999458312988, 1.6208000183105469, 1.6145999431610107, 1.603700041770935, 1.5978000164031982, 1.5846999883651733, 1.567199945449829, 1.5643999576568604, 1.555299997329712, 1.5241999626159668, 1.5204999446868896, 1.5151000022888184, 1.503000020980835, 1.4975999593734741, 1.4890999794006348, 1.3694000244140625, 1.3411999940872192, 1.2276999950408936, 1.0891000032424927, 1.3259999752044678, 0.6643000245094299, 0.7915999889373779, 1.101699948310852, 0.8151999711990356, 0.5701000094413757, 0.9972000122070312, 0.7458000183105469, 0.7014999985694885, 0.47279998660087585, 0.05090000107884407, 0.8341000080108643, 0.6995999813079834, 0.8935999870300293, -0.21230000257492065, -0.5967000126838684, -0.5916000008583069, -0.48570001125335693, 0.38940000534057617, -0.8855999708175659, -0.09650000184774399, 2.5048000812530518, 2.467600107192993, 2.4588000774383545, 2.380500078201294, 2.3736000061035156, 2.3647000789642334, 2.322200059890747, 2.3173000812530518, 2.2523000240325928, 2.1747000217437744, 2.0276999473571777, 2.011699914932251, 2.005500078201294, 1.9876999855041504, 1.9246000051498413, 1.9113999605178833, 1.9088000059127808, 1.8985999822616577, 1.88510000705719, 1.868399977684021, 1.8320000171661377, 1.8205000162124634, 1.8013999462127686, 1.7663999795913696, 1.7430000305175781, 1.7309000492095947, 1.7151000499725342, 1.7095999717712402, 1.6952999830245972, 1.6771999597549438, 1.6030999422073364, 1.583299994468689, 1.5628000497817993, 1.4365999698638916, 1.325700044631958, 1.63510000705719, 0.7700999975204468, 1.1830999851226807, 1.250599980354309, 0.7174999713897705, 0.8759999871253967, 0.9143000245094299, 0.22210000455379486, 0.19429999589920044, 0.4997999966144562, 0.49239999055862427, -0.48829999566078186, 0.6187999844551086, -0.3052000105381012, 0.021199999377131462, -0.07620000094175339, -0.01510000042617321, 2.620699882507324, 2.552500009536743, 2.528899908065796, 2.422100067138672, 2.176300048828125, 2.058199882507324, 2.050299882888794, 2.033099889755249, 2.0183000564575195, 2.009700059890747, 2.0018999576568604, 2.000200033187866, 1.9990999698638916, 1.9631999731063843, 1.9129999876022339, 1.8414000272750854, 1.833400011062622, 1.812000036239624, 1.7532000541687012, 1.7360999584197998, 1.7085000276565552, 1.6734000444412231, 1.6704000234603882, 1.6569000482559204, 1.57260000705719, 1.5418000221252441, 1.5192999839782715, 1.5154999494552612, 1.4977999925613403, 1.468400001525879, 1.4682999849319458, 1.3733999729156494, 1.315000057220459, 1.3911999464035034, 1.2483999729156494, 0.9952999949455261, 1.2125999927520752, 0.7688999772071838, 0.9204000234603882, 1.257099986076355, 0.9064000248908997, 1.121500015258789, 0.6919000148773193, 0.28870001435279846, 0.545799970626831, 0.5254999995231628, 0.5552999973297119, 0.9204000234603882, 0.5411999821662903, 0.7786999940872192, -0.0860000029206276, 0.2953999936580658, 0.18549999594688416, -0.289000004529953, -0.4359999895095825, -0.1956000030040741, 0.3596999943256378, -0.05730000138282776, -0.10429999977350235, 0.36579999327659607, 2.7146999835968018, 2.686000108718872, 2.684499979019165, 2.6651999950408936, 2.51990008354187, 2.4516000747680664, 2.321000099182129, 2.3173000812530518, 2.310800075531006, 2.2088000774383545, 2.160799980163574, 2.156599998474121, 2.068000078201294, 2.0476999282836914, 2.040299892425537, 2.0107998847961426, 1.9285000562667847, 1.910099983215332, 1.891700029373169, 1.885699987411499, 1.8479000329971313, 1.8169000148773193, 1.8115999698638916, 1.7702000141143799, 1.756100058555603, 1.739300012588501, 1.6785000562667847, 1.6476000547409058, 1.639799952507019, 1.632699966430664, 1.623900055885315, 1.6025999784469604, 1.545300006866455, 1.221500039100647, 1.3882999420166016, 0.9728999733924866, 1.0211999416351318, 0.896399974822998, 0.8483999967575073, 1.1907000541687012, 1.069100022315979, 0.7343999743461609, 0.5710999965667725, 0.22370000183582306, -0.029500000178813934, 0.4043999910354614, 0.029600000008940697, 0.09449999779462814, 0.4325000047683716, -0.43149998784065247, -0.2581999897956848, 0.3140999972820282, -0.492900013923645, 0.24150000512599945, -0.5149000287055969, 0.02449999935925007, 3.1254000663757324, 2.9828999042510986, 2.982100009918213, 2.9742000102996826, 2.9077999591827393, 2.8561999797821045, 2.8424999713897705, 2.816999912261963, 2.8011999130249023, 2.7941999435424805, 2.782099962234497, 2.697200059890747, 2.6368000507354736, 2.6089000701904297, 2.5309998989105225, 2.527600049972534, 2.4446001052856445, 2.374300003051758, 2.342400074005127, 2.3071999549865723, 2.275099992752075, 2.261699914932251, 2.221100091934204, 2.218100070953369, 2.1651999950408936, 2.136699914932251, 2.107800006866455, 2.0274999141693115, 2.0241000652313232, 2.0032999515533447, 1.957200050354004, 1.9407999515533447, 1.9157999753952026, 1.5679999589920044, 1.5636999607086182, 1.1139999628067017, 1.097599983215332, 1.5614999532699585, 1.0923999547958374, 0.8999999761581421, 0.4462999999523163, 0.7598000168800354, 0.0430000014603138, 1.364300012588501, 0.430400013923645, 0.11259999871253967, -0.8327999711036682, -0.19439999759197235, -0.7325999736785889, 1.0140000581741333, 0.45089998841285706, -1.020900011062622]}, \"token.table\": {\"Topic\": [1, 3, 5, 6, 11, 1, 3, 5, 6, 8, 9, 10, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 3, 6, 7, 8, 10, 11, 2, 5, 6, 7, 8, 9, 11, 1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 1, 2, 5, 6, 8, 10, 12, 1, 2, 4, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 6, 8, 9, 10, 12, 1, 2, 3, 5, 6, 7, 8, 11, 1, 2, 3, 5, 6, 7, 8, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 3, 6, 12, 1, 2, 3, 5, 7, 8, 10, 11, 12, 1, 3, 8, 1, 2, 3, 6, 8, 9, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 2, 3, 4, 6, 7, 8, 10, 11, 1, 2, 3, 5, 7, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 1, 2, 4, 6, 8, 9, 10, 11, 12, 1, 3, 4, 5, 6, 7, 9, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 5, 7, 8, 9, 10, 11, 2, 3, 5, 6, 11, 12, 1, 3, 5, 6, 10, 4, 6, 7, 10, 11, 1, 2, 3, 5, 6, 8, 9, 11, 12, 2, 4, 6, 7, 8, 9, 10, 11, 1, 2, 3, 4, 5, 8, 9, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 8, 10, 2, 3, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 5, 6, 7, 10, 11, 12, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 7, 8, 9, 11, 12, 2, 3, 5, 8, 9, 1, 3, 5, 9, 10, 12, 1, 2, 3, 4, 6, 8, 9, 10, 11, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 4, 6, 8, 9, 10, 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 3, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 2, 3, 5, 8, 10, 11, 3, 4, 5, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 5, 6, 9, 10, 11, 1, 2, 3, 5, 7, 8, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 1, 2, 3, 6, 7, 8, 10, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 5, 8, 9, 10, 11, 1, 3, 7, 10, 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 2, 3, 5, 6, 7, 8, 10, 11, 1, 3, 6, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 5, 6, 7, 8, 10, 2, 5, 6, 11, 1, 2, 3, 5, 6, 7, 8, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 5, 9, 11, 4, 9, 11, 4, 9, 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 3, 4, 7, 9, 11, 1, 3, 4, 5, 7, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 4, 8, 12, 1, 2, 3, 5, 6, 7, 10, 11, 2, 3, 4, 7, 8, 12, 2, 4, 9, 11, 12, 1, 3, 5, 6, 7, 8, 9, 10, 2, 3, 4, 5, 6, 7, 8, 10, 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 6, 7, 9, 11, 12, 1, 2, 3, 5, 7, 8, 10, 11, 4, 8, 9, 10, 11, 1, 2, 3, 4, 5, 8, 9, 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 5, 6, 8, 11, 12, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 6, 8, 1, 2, 4, 5, 7, 9, 10, 11, 12, 1, 5, 7, 8, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 5, 7, 10, 11, 12, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 1, 2, 4, 5, 6, 7, 8, 9, 11, 2, 5, 6, 7, 9, 10, 11, 12, 2, 3, 5, 7, 10, 11, 12, 1, 4, 6, 8, 11, 1, 2, 3, 6, 7, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 4, 6, 8, 12, 1, 3, 6, 8, 9, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 2, 3, 4, 5, 6, 7, 8, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 5, 7, 8, 10, 11, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 1, 6, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 2, 4, 9, 10, 11, 12, 1, 2, 4, 8, 10, 11, 12, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 3, 4, 5, 8, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 4, 8, 9, 11, 6, 12, 1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 2, 3, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 5, 6, 8, 10, 12, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 1, 3, 4, 5, 7, 8, 12, 1, 4, 5, 6, 7, 8, 9, 11, 12, 4, 6, 9, 11, 1, 2, 4, 7, 8, 10, 11, 1, 3, 4, 5, 6, 8, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 1, 3, 4, 5, 6, 7, 8, 12, 1, 4, 6, 7, 8, 9, 10, 12, 1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 1, 3, 5, 6, 8, 9, 10, 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 2, 6, 7, 8, 1, 2, 4, 6, 7, 8, 9, 10, 11, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 1, 2, 4, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 2, 6, 9, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 5, 6, 7, 9, 10, 11, 12, 5, 6, 7, 8, 9, 10, 1, 2, 3, 6, 7, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 3, 4, 6, 8, 2, 3, 8, 10, 3, 6, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 1, 2, 3, 4, 6, 7, 8, 10, 11, 12, 2, 3, 4, 7, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 2, 3, 4, 7, 8, 10, 11, 1, 2, 3, 4, 5, 6, 8, 9, 12, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 5, 6, 7, 8, 11, 12, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 3, 6, 8, 9, 11, 4, 9, 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 6, 7, 9, 10, 2, 6, 7, 8, 9, 11, 2, 4, 7, 9, 10, 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 5, 6, 8, 12, 2, 6, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 7, 9, 11, 12, 1, 4, 6, 8, 9, 11, 12, 5, 12, 1, 5, 8, 9, 4, 6, 7, 9, 1, 2, 6, 8, 9, 1, 2, 3, 5, 6, 9, 4, 8, 9, 4, 6, 7, 8, 9, 10, 11, 1, 2, 3, 6, 7, 8, 10, 11, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 1, 3, 4, 5, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 4, 5, 6, 7, 8, 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 3, 4, 6, 7, 8, 10, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 4, 9, 11, 4, 9, 11, 1, 2, 3, 6, 10, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 1, 2, 5, 6, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 2, 8, 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 2, 8, 9, 10, 11, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 1, 2, 5, 7, 8, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 1, 2, 5, 6, 9, 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 5, 6, 11, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 1, 5, 6, 7, 8, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 4, 9, 11, 1, 2, 5, 6, 8, 9, 11, 1, 2, 4, 5, 6, 8, 9, 10, 12, 6, 9, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 5, 7, 10, 4, 8, 11, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 1, 3, 5, 10, 1, 3, 6, 7, 8, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 6, 7, 8, 9, 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 8, 10, 11, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 5, 12, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 5, 6, 8, 11, 12, 1, 3, 4, 5, 7, 8, 12, 1, 2, 3, 5, 8, 9, 10, 1, 5, 7, 8, 11, 1, 3, 5, 8, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 1, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 6, 8, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 3, 5, 6, 7, 9, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 2, 3, 6, 8, 9, 10, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 2, 3, 5, 6, 7, 8, 9, 11, 12, 1, 3, 5, 6, 7, 9, 10, 12, 1, 3, 5, 7, 8, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 4, 8, 11, 3, 5, 8, 9, 11, 12, 5, 6, 8, 11, 12, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 1, 2, 3, 6, 1, 2, 4, 5, 6, 8, 9, 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 2, 3, 5, 6, 7, 8, 9, 1, 4, 5, 7, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 2, 3, 5, 7, 9, 1, 2, 5, 6, 7, 8, 10, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 6, 7, 8, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 1, 2, 3, 5, 6, 2, 3, 7, 9, 10, 11, 12, 2, 3, 8, 9, 10, 1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 2, 5, 6, 9, 10, 11, 12, 1, 2, 4, 5, 6, 7, 8, 10, 12, 1, 4, 5, 6, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 4, 9, 11, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 9, 10, 11, 4, 9, 11, 1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 1, 3, 4, 5, 7, 8, 9, 10, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 1, 2, 3, 6, 8, 9, 10, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 6, 12, 2, 3, 6, 7, 8, 9, 10, 11, 12, 2, 3, 5, 6, 7, 8, 11, 12, 1, 3, 4, 6, 10, 11, 1, 2, 4, 6, 9, 10, 11, 12, 3, 6, 8, 11, 4, 5, 7, 8, 9, 11, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 2, 5, 6, 7, 8, 9, 12, 1, 6, 8, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 2, 5, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 3, 9, 11, 2, 6, 7, 8, 10, 12, 1, 2, 3, 5, 7, 8, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 2, 5, 7, 8, 9, 1, 3, 4, 8, 11, 12, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 4, 9, 11, 7, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 3, 4, 5, 6, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 2, 3, 7, 9, 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 2, 5, 6, 8, 9, 11, 4, 9, 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 4, 9, 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 4, 9, 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 7, 8, 10, 11, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 5, 8, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 6, 8, 9, 11, 12, 1, 2, 3, 4, 5, 7, 8, 9, 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 4, 9, 10, 11, 4, 9, 11, 4, 9, 11, 4, 9, 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 5, 6, 7, 9, 10, 12, 2, 5, 6, 8, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 5, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 4, 6, 7, 10, 11, 12, 4, 9, 11, 1, 2, 6, 8, 9, 1, 2, 6, 8, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 3, 5, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 5, 7, 8, 12, 1, 5, 7, 8, 9, 10, 12, 1, 2, 3, 6, 8, 9, 11, 12, 4, 9, 11, 1, 2, 8, 1, 2, 3, 5, 6, 7, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 5, 6, 7, 8, 10, 12, 1, 3, 4, 5, 6, 8, 9, 11, 12, 1, 2, 3, 5, 6, 10, 11, 12, 1, 6, 7, 8, 10, 1, 2, 3, 5, 6, 7, 8, 10, 11, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 2, 5, 8, 9, 12, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 2, 3, 5, 6, 7, 8, 11, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 1, 3, 6, 7, 8, 3, 4, 7, 8, 9, 12, 4, 7, 8, 11, 2, 4, 6, 7, 10, 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 5, 7, 11, 1, 2, 3, 4, 5, 7, 8, 11, 12, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 8, 10, 5, 6, 1, 7, 9, 12, 2, 3, 4, 5, 9, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 1, 2, 4, 5, 6, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 4, 5, 7, 8, 9, 1, 2, 3, 7, 8, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 2, 4, 5, 9, 11, 12, 5, 6, 7, 9, 1, 2, 5, 6, 7, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 4, 9, 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 4, 9, 11, 4, 9, 11, 4, 9, 11, 1, 2, 3, 5, 6, 7, 11, 12, 1, 2, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 2, 4, 5, 7, 10, 11, 1, 8, 9, 10, 1, 2, 3, 5, 6, 7, 8, 9, 10, 1, 3, 5, 11, 2, 7, 8, 9, 10, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 5, 7, 8, 12, 1, 2, 3, 5, 11, 12, 2, 8, 9, 12, 1, 5, 7, 8, 10, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 1, 2, 6, 9, 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 2, 3, 5, 6, 8, 9, 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 8, 9, 12, 1, 3, 5, 6, 8, 10, 12, 1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 5, 6, 7, 8, 10, 12, 2, 3, 6, 7, 8, 1, 2, 5, 6, 8, 11, 2, 5, 6, 8, 12, 1, 7, 8, 10, 12, 1, 4, 5, 6, 7, 9, 10, 12, 1, 4, 9, 10, 2, 4, 5, 6, 7, 8, 9, 11, 12, 5, 7, 8, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 5, 6, 7, 9, 10, 11, 12, 1, 2, 5, 9, 10, 11, 1, 4, 5, 7, 10, 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11], \"Freq\": [0.15596187114715576, 0.5458665490150452, 0.11697141081094742, 0.03899046778678894, 0.11697141081094742, 0.5487490296363831, 0.13169977068901062, 0.04389992356300354, 0.1536497324705124, 0.02194996178150177, 0.02194996178150177, 0.02194996178150177, 0.02194996178150177, 0.1735994815826416, 0.09074518829584122, 0.2603992223739624, 0.007890885695815086, 0.018412066623568535, 0.08811488747596741, 0.09600577503442764, 0.02630295231938362, 0.05260590463876724, 0.11441784352064133, 0.06312708556652069, 0.009206033311784267, 0.03966148570179939, 0.015864593908190727, 0.007932296954095364, 0.031729187816381454, 0.09518756717443466, 0.12691675126552582, 0.007932296954095364, 0.007932296954095364, 0.1031198650598526, 0.5631930828094482, 0.5114203095436096, 0.04974905773997307, 0.06036219000816345, 0.00663320766761899, 0.0636787936091423, 0.0504123754799366, 0.031176075339317322, 0.02984943427145481, 0.08623170107603073, 0.05505562201142311, 0.036482639610767365, 0.018572980538010597, 0.11818689852952957, 0.022440550848841667, 0.046377137303352356, 0.010472256690263748, 0.020944513380527496, 0.02543262392282486, 0.001496036653406918, 0.004488110076636076, 0.46227532625198364, 0.0493692122399807, 0.1705481857061386, 0.06732165068387985, 0.6036173105239868, 0.027437150478363037, 0.09977145493030548, 0.002494286512956023, 0.12471432238817215, 0.01746000535786152, 0.029931437224149704, 0.022448578849434853, 0.027437150478363037, 0.019954292103648186, 0.007482859306037426, 0.01746000535786152, 0.04117303341627121, 0.08234606683254242, 0.5764224529266357, 0.12351909279823303, 0.04117303341627121, 0.08234606683254242, 0.04117303341627121, 0.035512469708919525, 0.07102493941783905, 0.6037120223045349, 0.035512469708919525, 0.035512469708919525, 0.035512469708919525, 0.17756235599517822, 0.5469207167625427, 0.023779161274433136, 0.023779161274433136, 0.04755832254886627, 0.09511664509773254, 0.07133748382329941, 0.023779161274433136, 0.023779161274433136, 0.023779161274433136, 0.11889580637216568, 0.025275295600295067, 0.025275295600295067, 0.07582589238882065, 0.025275295600295067, 0.050550591200590134, 0.7582588791847229, 0.025275295600295067, 0.10313774645328522, 0.13126622140407562, 0.06563311070203781, 0.11251390725374222, 0.09376159310340881, 0.08438543230295181, 0.037504635751247406, 0.30941325426101685, 0.05625695362687111, 0.0689476951956749, 0.022982565686106682, 0.11491283029317856, 0.022982565686106682, 0.022982565686106682, 0.045965131372213364, 0.11491283029317856, 0.32175591588020325, 0.045965131372213364, 0.022982565686106682, 0.1378953903913498, 0.0689476951956749, 0.0803217813372612, 0.0321287140250206, 0.0481930710375309, 0.0481930710375309, 0.0481930710375309, 0.5943812131881714, 0.0160643570125103, 0.1124504953622818, 0.0160643570125103, 0.015316188335418701, 0.045948565006256104, 0.47480183839797974, 0.3216399550437927, 0.061264753341674805, 0.015316188335418701, 0.030632376670837402, 0.015316188335418701, 0.0177224762737751, 0.27765214443206787, 0.4548768997192383, 0.16540978848934174, 0.011814984492957592, 0.005907492246478796, 0.04725993797183037, 0.011814984492957592, 0.061698902398347855, 0.009492138400673866, 0.00593258673325181, 0.11034611612558365, 0.037968553602695465, 0.03322248533368111, 0.03440900519490242, 0.12933039665222168, 0.3773125112056732, 0.02373034693300724, 0.04508765786886215, 0.13288994133472443, 0.140282541513443, 0.631271481513977, 0.140282541513443, 0.0701412707567215, 0.15435276925563812, 0.10685960948467255, 0.10685960948467255, 0.3799452781677246, 0.047493159770965576, 0.023746579885482788, 0.023746579885482788, 0.10685960948467255, 0.047493159770965576, 0.30361324548721313, 0.2428906112909317, 0.36433592438697815, 0.5596521496772766, 0.09327535331249237, 0.09327535331249237, 0.09327535331249237, 0.046637676656246185, 0.046637676656246185, 0.09327535331249237, 0.053063131868839264, 0.08843855559825897, 0.3832337260246277, 0.005895903799682856, 0.13560578227043152, 0.07075084745883942, 0.03537542372941971, 0.04127132520079613, 0.005895903799682856, 0.05895903706550598, 0.08254265040159225, 0.02947951853275299, 0.11360248178243637, 0.09865479171276093, 0.23019450902938843, 0.0029895391780883074, 0.08669663220643997, 0.1345292627811432, 0.08968617022037506, 0.05082216486334801, 0.04484308511018753, 0.06278032064437866, 0.01195815671235323, 0.07174893468618393, 0.23069679737091064, 0.00730053149163723, 0.13871009647846222, 0.017521275207400322, 0.32706379890441895, 0.013140956871211529, 0.02190159447491169, 0.04672339931130409, 0.0043803188018500805, 0.056944143027067184, 0.0058404249139130116, 0.12994946539402008, 0.5293028950691223, 0.1701330691576004, 0.01890367455780506, 0.03780734911561012, 0.11342204362154007, 0.03780734911561012, 0.056711021810770035, 0.01890367455780506, 0.09827753901481628, 0.5896652340888977, 0.032759178429841995, 0.19655507802963257, 0.06551835685968399, 0.21499387919902802, 0.023888209834694862, 0.011944104917347431, 0.023888209834694862, 0.03583231195807457, 0.10749693959951401, 0.3583231270313263, 0.07166462391614914, 0.03583231195807457, 0.09555283933877945, 0.044842034578323364, 0.11210508644580841, 0.06726305186748505, 0.11210508644580841, 0.42599931359291077, 0.08968406915664673, 0.08968406915664673, 0.022421017289161682, 0.044842034578323364, 0.4471557140350342, 0.008130104281008244, 0.024390311911702156, 0.05691072717308998, 0.05691072717308998, 0.11382145434617996, 0.04878062382340431, 0.21951280534267426, 0.008130104281008244, 0.21599549055099487, 0.09642655402421951, 0.14271129667758942, 0.05014180764555931, 0.04242768511176109, 0.015428248792886734, 0.25842317938804626, 0.05014180764555931, 0.015428248792886734, 0.038570623844861984, 0.015428248792886734, 0.06557005643844604, 0.22014209628105164, 0.026161814108490944, 0.3413797914981842, 0.010209488682448864, 0.08997111767530441, 0.03956177085638046, 0.024247536435723305, 0.07657116651535034, 0.017228512093424797, 0.06125693395733833, 0.047856979072093964, 0.04530460759997368, 0.030756663531064987, 0.030756663531064987, 0.09226999431848526, 0.15378332138061523, 0.15378332138061523, 0.09226999431848526, 0.061513327062129974, 0.33832329511642456, 0.030756663531064987, 0.2950558662414551, 0.5573277473449707, 0.0655679702758789, 0.03278398513793945, 0.016391992568969727, 0.016391992568969727, 0.6679154634475708, 0.04770824685692787, 0.09541649371385574, 0.04770824685692787, 0.04770824685692787, 0.4684460163116455, 0.4924688935279846, 0.012011436745524406, 0.012011436745524406, 0.012011436745524406, 0.6096179485321045, 0.023004451766610146, 0.23004451394081116, 0.011502225883305073, 0.011502225883305073, 0.023004451766610146, 0.011502225883305073, 0.034506674855947495, 0.04600890353322029, 0.04987221211194992, 0.009974442422389984, 0.009974442422389984, 0.8378531336784363, 0.04987221211194992, 0.009974442422389984, 0.019948884844779968, 0.009974442422389984, 0.13559244573116302, 0.033898111432790756, 0.5762678980827332, 0.016949055716395378, 0.10169433802366257, 0.08474528044462204, 0.033898111432790756, 0.05883770436048508, 0.6155328750610352, 0.09051954001188278, 0.05883770436048508, 0.004525977186858654, 0.018103908747434616, 0.009051954373717308, 0.004525977186858654, 0.05431172624230385, 0.03620781749486923, 0.004525977186858654, 0.05431172624230385, 0.5462771654129028, 0.06828464567661285, 0.20485395193099976, 0.017071161419153214, 0.10242697596549988, 0.03414232283830643, 0.6445315480232239, 0.24169932305812836, 0.026855479925870895, 0.026855479925870895, 0.05371095985174179, 0.05896152928471565, 0.44221144914627075, 0.050538454204797745, 0.008423075079917908, 0.04632691666483879, 0.04211537912487984, 0.13055767118930817, 0.02105768956243992, 0.02105768956243992, 0.1094999834895134, 0.050538454204797745, 0.016846150159835815, 0.058593302965164185, 0.1562488079071045, 0.45898088812828064, 0.029296651482582092, 0.01953110098838806, 0.00976555049419403, 0.11718660593032837, 0.00976555049419403, 0.00976555049419403, 0.00976555049419403, 0.03906220197677612, 0.08788995444774628, 0.05931311845779419, 0.6821008920669556, 0.04448483884334564, 0.05931311845779419, 0.014828279614448547, 0.04448483884334564, 0.007414139807224274, 0.029656559228897095, 0.029656559228897095, 0.014828279614448547, 0.014828279614448547, 0.16092969477176666, 0.6034863591194153, 0.07040674239397049, 0.030174318701028824, 0.010058105923235416, 0.040232423692941666, 0.010058105923235416, 0.010058105923235416, 0.030174318701028824, 0.010058105923235416, 0.020116211846470833, 0.04073280841112137, 0.04073280841112137, 0.08146561682224274, 0.5295265316963196, 0.1425648331642151, 0.08146561682224274, 0.04073280841112137, 0.020366404205560684, 0.020366404205560684, 0.03661112114787102, 0.01830556057393551, 0.03661112114787102, 0.01830556057393551, 0.09152780473232269, 0.03661112114787102, 0.01830556057393551, 0.01830556057393551, 0.01830556057393551, 0.7139168977737427, 0.8475876450538635, 0.036851637065410614, 0.036851637065410614, 0.036851637065410614, 0.036851637065410614, 0.7070212960243225, 0.024380045011639595, 0.19504036009311676, 0.024380045011639595, 0.024380045011639595, 0.5936906933784485, 0.23747628927230835, 0.03957938030362129, 0.03957938030362129, 0.03957938030362129, 0.03957938030362129, 0.06944318860769272, 0.02314772829413414, 0.06944318860769272, 0.02314772829413414, 0.115738645195961, 0.09259091317653656, 0.04629545658826828, 0.48610231280326843, 0.06944318860769272, 0.006642150692641735, 0.01992645114660263, 0.03321075066924095, 0.7040679454803467, 0.03985290229320526, 0.03321075066924095, 0.01328430138528347, 0.006642150692641735, 0.07970580458641052, 0.07306365668773651, 0.9734300971031189, 0.00036079692654311657, 0.0010823907796293497, 0.012267095036804676, 0.0007215938530862331, 0.012267095036804676, 0.16078491508960724, 0.07193009555339813, 0.016924727708101273, 0.06769891083240509, 0.012693545781075954, 0.046543002128601074, 0.1565537303686142, 0.33003219962120056, 0.016924727708101273, 0.0296182744204998, 0.046543002128601074, 0.04231182113289833, 0.116244375705719, 0.0581221878528595, 0.1743665635585785, 0.348733127117157, 0.116244375705719, 0.116244375705719, 0.026816964149475098, 0.08045089244842529, 0.009577486664056778, 0.026816964149475098, 0.12259183079004288, 0.2758316099643707, 0.06895790249109268, 0.00766198942437768, 0.1130143478512764, 0.024901466444134712, 0.1513242870569229, 0.09385937452316284, 0.12494463473558426, 0.06247231736779213, 0.2186531126499176, 0.15618079900741577, 0.3748339116573334, 0.031236158683896065, 0.096992626786232, 0.048496313393116, 0.6789483428001404, 0.1454889327287674, 0.175242617726326, 0.27465909719467163, 0.08088120818138123, 0.008425125852227211, 0.13817206025123596, 0.016850251704454422, 0.04044060409069061, 0.0438106544315815, 0.04044060409069061, 0.13311699032783508, 0.03538552671670914, 0.016850251704454422, 0.23325006663799286, 0.03887500986456871, 0.03887500986456871, 0.23325006663799286, 0.03887500986456871, 0.3498750925064087, 0.057387515902519226, 0.028693757951259613, 0.487793892621994, 0.057387515902519226, 0.2582438290119171, 0.08608127385377884, 0.5874252319335938, 0.012498408555984497, 0.16247931122779846, 0.024996817111968994, 0.024996817111968994, 0.012498408555984497, 0.024996817111968994, 0.07499045133590698, 0.024996817111968994, 0.03749522566795349, 0.029130935668945312, 0.004855155944824219, 0.009710311889648438, 0.009710311889648438, 0.009710311889648438, 0.009710311889648438, 0.9127693176269531, 0.009710311889648438, 0.1068304255604744, 0.11350733041763306, 0.06676901876926422, 0.0133538031950593, 0.07344591617584229, 0.36055269837379456, 0.03338450938463211, 0.07344591617584229, 0.03338450938463211, 0.0267076063901186, 0.020030705258250237, 0.08679971843957901, 0.06022026389837265, 0.10191121697425842, 0.004632328171283007, 0.004632328171283007, 0.4076448678970337, 0.032426297664642334, 0.17602846026420593, 0.04632328078150749, 0.10191121697425842, 0.013896984048187733, 0.027793968096375465, 0.023161640390753746, 0.14058613777160645, 0.0937240943312645, 0.04686204716563225, 0.14058613777160645, 0.04686204716563225, 0.0937240943312645, 0.04686204716563225, 0.4217584431171417, 0.03339100629091263, 0.03339100629091263, 0.7346020936965942, 0.06678201258182526, 0.10017301887273788, 0.09442095458507538, 0.038879215717315674, 0.34435877203941345, 0.005554173607379198, 0.03332504257559776, 0.23882946372032166, 0.027770867571234703, 0.07775843143463135, 0.005554173607379198, 0.055541735142469406, 0.044433388859033585, 0.03332504257559776, 0.05652135983109474, 0.02826067991554737, 0.05652135983109474, 0.08478204160928726, 0.02826067991554737, 0.08478204160928726, 0.50869220495224, 0.11304271966218948, 0.06371739506721497, 0.06371739506721497, 0.3504456579685211, 0.47788044810295105, 0.026668742299079895, 0.07111664861440659, 0.07111664861440659, 0.004444790538400412, 0.16445724666118622, 0.288911372423172, 0.013334371149539948, 0.09778539091348648, 0.004444790538400412, 0.008889581076800823, 0.04000311344861984, 0.2089051455259323, 0.0540321059525013, 0.5403210520744324, 0.0540321059525013, 0.0540321059525013, 0.2161284238100052, 0.1080642119050026, 0.1112690195441246, 0.3338070511817932, 0.1112690195441246, 0.3338070511817932, 0.014292523264884949, 0.37160560488700867, 0.48594579100608826, 0.014292523264884949, 0.028585046529769897, 0.057170093059539795, 0.014292523264884949, 0.014292523264884949, 0.03933187201619148, 0.3507091999053955, 0.05817839503288269, 0.0008194140391424298, 0.01638828031718731, 0.015568866394460201, 0.029498904943466187, 0.05899780988693237, 0.08439964801073074, 0.26303189992904663, 0.0770249217748642, 0.006555312313139439, 0.031555112451314926, 0.8519880175590515, 0.031555112451314926, 0.015777556225657463, 0.06311022490262985, 0.966529130935669, 0.009475775994360447, 0.018951551988720894, 0.9669073224067688, 0.009479483589529991, 0.009479483589529991, 0.22626672685146332, 0.10831917822360992, 0.06258441507816315, 0.021663835272192955, 0.1468326598405838, 0.007221278268843889, 0.07943405956029892, 0.04332767054438591, 0.12757591903209686, 0.11313336342573166, 0.057770226150751114, 0.004814185667783022, 0.017548924311995506, 0.4738209843635559, 0.017548924311995506, 0.008774462155997753, 0.08774462342262268, 0.3158806562423706, 0.04387231171131134, 0.008774462155997753, 0.008774462155997753, 0.008774462155997753, 0.008774462155997753, 0.04269877076148987, 0.15656214952468872, 0.028465846553444862, 0.007116461638361216, 0.0640481561422348, 0.3842889368534088, 0.07828107476234436, 0.09251400083303452, 0.028465846553444862, 0.0640481561422348, 0.021349385380744934, 0.03558230772614479, 0.16372285783290863, 0.16372285783290863, 0.04093071445822716, 0.04093071445822716, 0.45023787021636963, 0.08186142891645432, 0.12341836094856262, 0.09256377071142197, 0.030854590237140656, 0.46281886100769043, 0.21598213911056519, 0.10897161811590195, 0.12573647499084473, 0.05867702513933182, 0.016764864325523376, 0.0670594573020935, 0.025147296488285065, 0.5280932188034058, 0.03352972865104675, 0.008382432162761688, 0.008382432162761688, 0.016764864325523376, 0.3110724091529846, 0.10369079560041428, 0.5702993869781494, 0.02932724356651306, 0.5865448713302612, 0.05865448713302612, 0.02932724356651306, 0.08798173069953918, 0.02932724356651306, 0.17596346139907837, 0.02932724356651306, 0.14045216143131256, 0.4681738615036011, 0.09363476932048798, 0.04681738466024399, 0.04681738466024399, 0.14045216143131256, 0.06141786277294159, 0.34394004940986633, 0.012283572927117348, 0.11055215448141098, 0.4667757749557495, 0.06007235869765282, 0.12014471739530563, 0.04505426809191704, 0.6307597756385803, 0.015018089674413204, 0.015018089674413204, 0.09010853618383408, 0.015018089674413204, 0.00853934045881033, 0.00853934045881033, 0.01707868091762066, 0.03415736183524132, 0.03415736183524132, 0.836855411529541, 0.025618022307753563, 0.025618022307753563, 0.00853934045881033, 0.04279031604528427, 0.017116127535700798, 0.28812146186828613, 0.01996881514787674, 0.3252063989639282, 0.028526877984404564, 0.13978169858455658, 0.031379565596580505, 0.025674190372228622, 0.034232255071401596, 0.01996881514787674, 0.031379565596580505, 0.1060423031449318, 0.011782478541135788, 0.04712991416454315, 0.05891239270567894, 0.035347435623407364, 0.011782478541135788, 0.05891239270567894, 0.05891239270567894, 0.5302115082740784, 0.011782478541135788, 0.011782478541135788, 0.07069487124681473, 0.07286403328180313, 0.582912266254425, 0.07286403328180313, 0.14572806656360626, 0.07286403328180313, 0.07286403328180313, 0.11048122495412827, 0.044192489236593246, 0.022096244618296623, 0.022096244618296623, 0.6849836111068726, 0.022096244618296623, 0.06628873944282532, 0.044192489236593246, 0.9642698764801025, 0.0019075566669926047, 0.013352896086871624, 0.0009537783334963024, 0.01907556690275669, 0.13632431626319885, 0.5258224010467529, 0.019474903121590614, 0.019474903121590614, 0.11684942245483398, 0.03894980624318123, 0.019474903121590614, 0.13632431626319885, 0.1532536745071411, 0.11749447882175446, 0.07151837646961212, 0.01021691132336855, 0.0408676452934742, 0.18901285529136658, 0.0817352905869484, 0.1787959486246109, 0.03575918823480606, 0.061301469802856445, 0.0408676452934742, 0.015325367450714111, 0.030041616410017014, 0.01001387182623148, 0.02002774365246296, 0.02002774365246296, 0.15020808577537537, 0.030041616410017014, 0.01001387182623148, 0.01001387182623148, 0.02002774365246296, 0.030041616410017014, 0.6208600401878357, 0.050069358199834824, 0.21396709978580475, 0.1241537481546402, 0.04226510599255562, 0.02113255299627781, 0.11887061595916748, 0.211325541138649, 0.1479278802871704, 0.007924707606434822, 0.026415692642331123, 0.015849415212869644, 0.05283138528466225, 0.0184909850358963, 0.03997715562582016, 0.005711022298783064, 0.03997715562582016, 0.03426613286137581, 0.35979437828063965, 0.12564247846603394, 0.03426613286137581, 0.06853226572275162, 0.06282123923301697, 0.1770416796207428, 0.03997715562582016, 0.017133066430687904, 0.09532981365919113, 0.031776607036590576, 0.031776607036590576, 0.1271064281463623, 0.1271064281463623, 0.031776607036590576, 0.4130958616733551, 0.09532981365919113, 0.7899948954582214, 0.014766260050237179, 0.007383130025118589, 0.036915648728609085, 0.06644817441701889, 0.036915648728609085, 0.007383130025118589, 0.029532520100474358, 0.014766260050237179, 0.06911293417215347, 0.06911293417215347, 0.4837905168533325, 0.06911293417215347, 0.13822586834430695, 0.18187659978866577, 0.24735216796398163, 0.01455012708902359, 0.021825190633535385, 0.01455012708902359, 0.39285343885421753, 0.050925444811582565, 0.02910025417804718, 0.036375317722558975, 0.047447655349969864, 0.09489531069993973, 0.5693718791007996, 0.047447655349969864, 0.1423429697751999, 0.22457940876483917, 0.09385408461093903, 0.13072532415390015, 0.0067038629204034805, 0.11731760203838348, 0.12066953629255295, 0.02011158876121044, 0.03687124699354172, 0.02011158876121044, 0.16759657859802246, 0.04022317752242088, 0.02011158876121044, 0.10242030769586563, 0.051210153847932816, 0.03200634568929672, 0.051210153847932816, 0.03840761259198189, 0.15363045036792755, 0.019203806295990944, 0.04480888321995735, 0.012802538461983204, 0.4480888247489929, 0.025605076923966408, 0.019203806295990944, 0.5568642020225525, 0.04640534892678261, 0.04640534892678261, 0.09281069785356522, 0.04640534892678261, 0.13921605050563812, 0.04640534892678261, 0.04640534892678261, 0.6651821136474609, 0.01007851678878069, 0.060471102595329285, 0.09070665389299393, 0.01007851678878069, 0.02015703357756138, 0.05039258301258087, 0.02015703357756138, 0.04031406715512276, 0.02015703357756138, 0.02015703357756138, 0.017394382506608963, 0.5914090275764465, 0.017394382506608963, 0.008697191253304482, 0.06957753002643585, 0.008697191253304482, 0.008697191253304482, 0.017394382506608963, 0.034788765013217926, 0.1913382112979889, 0.026091575622558594, 0.022391628473997116, 0.03358744457364082, 0.026123568415641785, 0.037319380789995193, 0.29855504631996155, 0.018659690394997597, 0.022391628473997116, 0.16047334671020508, 0.38065770268440247, 0.11146941781044006, 0.037156470119953156, 0.11146941781044006, 0.44587767124176025, 0.037156470119953156, 0.07431294023990631, 0.14862588047981262, 0.037156470119953156, 0.02636258862912655, 0.02636258862912655, 0.0527251772582531, 0.47452661395072937, 0.02636258862912655, 0.2899884879589081, 0.1054503545165062, 0.09156045317649841, 0.04578022658824921, 0.13734067976474762, 0.09156045317649841, 0.6409231424331665, 0.1383216381072998, 0.6455010175704956, 0.0461072139441967, 0.0461072139441967, 0.0461072139441967, 0.0461072139441967, 0.10859019309282303, 0.07081969082355499, 0.33049190044403076, 0.03304918855428696, 0.028327876701951027, 0.11803282052278519, 0.009442625567317009, 0.08026231825351715, 0.037770502269268036, 0.06609837710857391, 0.10859019309282303, 0.014163938350975513, 0.1934797614812851, 0.6126859188079834, 0.09673988074064255, 0.032246626913547516, 0.032246626913547516, 0.032246626913547516, 0.08618089556694031, 0.6463567614555359, 0.08618089556694031, 0.12927134335041046, 0.043090447783470154, 0.04206235334277153, 0.11567147076129913, 0.021031176671385765, 0.03680455684661865, 0.04732014611363411, 0.47845926880836487, 0.13144485652446747, 0.021031176671385765, 0.005257794167846441, 0.03154676407575607, 0.06835132092237473, 0.005257794167846441, 0.1677858531475067, 0.023969408124685287, 0.023969408124685287, 0.07190822809934616, 0.5752658247947693, 0.047938816249370575, 0.023969408124685287, 0.023969408124685287, 0.023969408124685287, 0.5864788889884949, 0.03204041346907616, 0.048757154494524, 0.022288983687758446, 0.09194206446409225, 0.04597103223204613, 0.016716739162802696, 0.03204041346907616, 0.06408082693815231, 0.027861230075359344, 0.013930615037679672, 0.018109800294041634, 0.2960725724697113, 0.08708017319440842, 0.17664834856987, 0.019904039800167084, 0.15425629913806915, 0.03483206778764725, 0.032344065606594086, 0.03980807960033417, 0.03732007369399071, 0.03483206778764725, 0.05473610758781433, 0.032344065606594086, 0.0445907860994339, 0.2229539304971695, 0.1337723582983017, 0.0445907860994339, 0.4904986619949341, 0.0445907860994339, 0.0891815721988678, 0.020811032503843307, 0.11792918294668198, 0.3815355896949768, 0.020811032503843307, 0.013874021358788013, 0.041622065007686615, 0.048559073358774185, 0.11792918294668198, 0.13180319964885712, 0.11099217087030411, 0.006937010679394007, 0.1304224729537964, 0.0652112364768982, 0.7173236608505249, 0.0588483065366745, 0.053498461842536926, 0.14087927341461182, 0.053498461842536926, 0.04101548716425896, 0.11947989463806152, 0.02496594935655594, 0.24876783788204193, 0.02496594935655594, 0.05973994731903076, 0.16317030787467957, 0.011591332964599133, 0.034165311604738235, 0.335958868265152, 0.017082655802369118, 0.005694218445569277, 0.1651323288679123, 0.438454806804657, 0.08345605432987213, 0.5841923356056213, 0.16691210865974426, 0.02781868353486061, 0.02781868353486061, 0.05563736706972122, 0.02781868353486061, 0.1466217190027237, 0.0837838426232338, 0.48175710439682007, 0.02094596065580845, 0.0418919213116169, 0.02094596065580845, 0.02094596065580845, 0.02094596065580845, 0.1466217190027237, 0.02094596065580845, 0.10025769472122192, 0.20051538944244385, 0.033419232815504074, 0.33419233560562134, 0.23393462598323822, 0.033419232815504074, 0.0694335401058197, 0.20396101474761963, 0.008679192513227463, 0.004339596256613731, 0.3905636668205261, 0.043395962566137314, 0.09547111392021179, 0.043395962566137314, 0.013018788769841194, 0.06509394198656082, 0.047735556960105896, 0.013018788769841194, 0.01967448554933071, 0.01967448554933071, 0.6886069774627686, 0.03934897109866142, 0.03934897109866142, 0.01967448554933071, 0.059023454785346985, 0.059023454785346985, 0.01967448554933071, 0.01967448554933071, 0.08054482936859131, 0.1865248680114746, 0.025435209274291992, 0.03179401159286499, 0.025435209274291992, 0.03603321313858032, 0.03815281391143799, 0.2797873020172119, 0.03603321313858032, 0.24799329042434692, 0.01059800386428833, 0.004239201545715332, 0.016563396900892258, 0.02129579521715641, 0.004732399247586727, 0.04732399061322212, 0.004732399247586727, 0.0023661996237933636, 0.02129579521715641, 0.6365076899528503, 0.009464798495173454, 0.16563397645950317, 0.07098598778247833, 0.0023661996237933636, 0.920174241065979, 0.017361778765916824, 0.03472355753183365, 0.017361778765916824, 0.07220092415809631, 0.866411030292511, 0.03932643681764603, 0.08520728349685669, 0.09831609576940536, 0.5046892762184143, 0.006554406136274338, 0.13108812272548676, 0.045880842953920364, 0.006554406136274338, 0.006554406136274338, 0.08520728349685669, 0.04493028298020363, 0.17972113192081451, 0.4493028223514557, 0.22465141117572784, 0.04493028298020363, 0.04493028298020363, 0.03317328914999962, 0.12047142535448074, 0.05412484332919121, 0.017459627240896225, 0.045395027846097946, 0.5569620728492737, 0.015713663771748543, 0.0646006166934967, 0.03317328914999962, 0.04015713930130005, 0.019205588847398758, 0.003491925308480859, 0.6295157074928284, 0.09684856981039047, 0.048424284905195236, 0.09684856981039047, 0.09684856981039047, 0.048424284905195236, 0.13595886528491974, 0.4871859550476074, 0.005664953030645847, 0.011329906061291695, 0.039654672145843506, 0.19260840117931366, 0.028324764221906662, 0.016994858160614967, 0.033989716321229935, 0.033989716321229935, 0.005664953030645847, 0.1508583426475525, 0.030171668156981468, 0.060343336313962936, 0.1810300052165985, 0.060343336313962936, 0.030171668156981468, 0.42240333557128906, 0.29934823513031006, 0.03326091542840004, 0.03326091542840004, 0.03326091542840004, 0.1663045734167099, 0.03326091542840004, 0.06652183085680008, 0.29934823513031006, 0.03326091542840004, 0.9247294068336487, 0.017783258110284805, 0.03556651622056961, 0.017783258110284805, 0.011276064440608025, 0.12403670698404312, 0.07893244922161102, 0.02255212888121605, 0.033828191459178925, 0.011276064440608025, 0.7103920578956604, 0.11008134484291077, 0.05504067242145538, 0.05504067242145538, 0.05504067242145538, 0.11008134484291077, 0.3852847218513489, 0.11008134484291077, 0.11008134484291077, 0.005238663870841265, 0.16763724386692047, 0.005238663870841265, 0.01571599207818508, 0.05762530490756035, 0.01047732774168253, 0.42433178424835205, 0.22002388536930084, 0.047147974371910095, 0.02095465548336506, 0.02095465548336506, 0.01047732774168253, 0.07726453989744186, 0.1287742257118225, 0.1287742257118225, 0.017169896513223648, 0.02575484663248062, 0.05150969326496124, 0.34339794516563416, 0.008584948256611824, 0.017169896513223648, 0.18028391897678375, 0.01784420944750309, 0.12490946799516678, 0.03568841889500618, 0.5353263020515442, 0.01784420944750309, 0.07137683779001236, 0.19628630578517914, 0.01784420944750309, 0.7397302985191345, 0.024657677859067917, 0.024657677859067917, 0.024657677859067917, 0.024657677859067917, 0.024657677859067917, 0.07397302985191345, 0.07397302985191345, 0.06619284301996231, 0.6867507696151733, 0.033096421509981155, 0.02482231706380844, 0.033096421509981155, 0.008274105377495289, 0.04137052595615387, 0.008274105377495289, 0.008274105377495289, 0.08274105191230774, 0.06230056658387184, 0.03115028329193592, 0.46725425124168396, 0.2180519849061966, 0.06230056658387184, 0.03115028329193592, 0.03115028329193592, 0.06230056658387184, 0.117225781083107, 0.07535943388938904, 0.10047924518585205, 0.008373270742595196, 0.1758386790752411, 0.08373270183801651, 0.3516773581504822, 0.008373270742595196, 0.01674654148519039, 0.025119811296463013, 0.025119811296463013, 0.025119811296463013, 0.818415641784668, 0.03720071166753769, 0.07440142333507538, 0.03720071166753769, 0.030420755967497826, 0.016593139618635178, 0.09955883771181107, 0.0027655232697725296, 0.013827616348862648, 0.7937051653862, 0.011062093079090118, 0.030420755967497826, 0.005531046539545059, 0.1725933849811554, 0.49620598554611206, 0.010787086561322212, 0.021574173122644424, 0.20495463907718658, 0.010787086561322212, 0.010787086561322212, 0.010787086561322212, 0.04314834624528885, 0.010787086561322212, 0.018308136612176895, 0.018308136612176895, 0.09764339029788971, 0.006102711893618107, 0.8208147883415222, 0.006102711893618107, 0.027462204918265343, 0.399486780166626, 0.11767827719449997, 0.0681295320391655, 0.003096796805039048, 0.05574234202504158, 0.02167757786810398, 0.08671031147241592, 0.058839138597249985, 0.030967967584729195, 0.012387187220156193, 0.09290390461683273, 0.052645545452833176, 0.2506157457828522, 0.03268900886178017, 0.02179267257452011, 0.02179267257452011, 0.10896336287260056, 0.03268900886178017, 0.03268900886178017, 0.18523772060871124, 0.3159937560558319, 0.04011666029691696, 0.04011666029691696, 0.05014582350850105, 0.14040830731391907, 0.02005833014845848, 0.03008749522268772, 0.04011666029691696, 0.3008749485015869, 0.02005833014845848, 0.2908457815647125, 0.03008749522268772, 0.04410875216126442, 0.04410875216126442, 0.793957531452179, 0.04410875216126442, 0.04410875216126442, 0.03201654180884361, 0.41941672563552856, 0.12806616723537445, 0.0032016541808843613, 0.041621506214141846, 0.1408727914094925, 0.016008270904421806, 0.06083143129944801, 0.05122646689414978, 0.07683970034122467, 0.019209925085306168, 0.009604962542653084, 0.07410475611686707, 0.014820951037108898, 0.2815980613231659, 0.029641902074217796, 0.4446285367012024, 0.07410475611686707, 0.05928380414843559, 0.014820951037108898, 0.05189979448914528, 0.36329856514930725, 0.05189979448914528, 0.05189979448914528, 0.20759917795658112, 0.31139877438545227, 0.05581515654921532, 0.22326062619686127, 0.05581515654921532, 0.5581515431404114, 0.05581515654921532, 0.0856628343462944, 0.2773844003677368, 0.0448710098862648, 0.012237547896802425, 0.00815836526453495, 0.1754048466682434, 0.004079182632267475, 0.1672464907169342, 0.1182962954044342, 0.0203959122300148, 0.0203959122300148, 0.0693461000919342, 0.005855349358171225, 0.005855349358171225, 0.9134345054626465, 0.0234213974326849, 0.0468427948653698, 0.13956451416015625, 0.2791290283203125, 0.06978225708007812, 0.41869351267814636, 0.05885458365082741, 0.8828187584877014, 0.043286122381687164, 0.057714831084012985, 0.2020019143819809, 0.10100095719099045, 0.014428707771003246, 0.057714831084012985, 0.11542966216802597, 0.057714831084012985, 0.2741454541683197, 0.043286122381687164, 0.057714831084012985, 0.42595645785331726, 0.033191412687301636, 0.0055319019593298435, 0.022127607837319374, 0.09957423806190491, 0.04425521567463875, 0.02765950933098793, 0.016595706343650818, 0.04425521567463875, 0.060850922018289566, 0.016595706343650818, 0.21021227538585663, 0.061503294855356216, 0.041002195328474045, 0.08200439065694809, 0.020501097664237022, 0.020501097664237022, 0.041002195328474045, 0.08200439065694809, 0.020501097664237022, 0.12300658971071243, 0.47152525186538696, 0.061503294855356216, 0.03620592877268791, 0.1327550709247589, 0.012068642303347588, 0.03620592877268791, 0.1930982768535614, 0.012068642303347588, 0.012068642303347588, 0.49481433629989624, 0.024137284606695175, 0.04827456921339035, 0.056985724717378616, 0.056985724717378616, 0.056985724717378616, 0.7978001832962036, 0.22790388762950897, 0.13990139961242676, 0.13087549805641174, 0.009025895968079567, 0.029334163293242455, 0.07220716774463654, 0.13538844883441925, 0.15344023704528809, 0.056411851197481155, 0.013538844883441925, 0.03159063681960106, 0.06717749685049057, 0.06717749685049057, 0.06717749685049057, 0.2351212352514267, 0.06717749685049057, 0.33588746190071106, 0.10076624155044556, 0.019408347085118294, 0.019408347085118294, 0.03881669417023659, 0.019408347085118294, 0.09704173356294632, 0.03881669417023659, 0.019408347085118294, 0.019408347085118294, 0.7375171780586243, 0.0540795736014843, 0.01081591472029686, 0.01081591472029686, 0.02703978680074215, 0.07030344754457474, 0.00540795736014843, 0.00540795736014843, 0.23254215717315674, 0.5353877544403076, 0.0540795736014843, 0.06386362761259079, 0.6514090299606323, 0.07024998962879181, 0.006386362947523594, 0.006386362947523594, 0.038318175822496414, 0.006386362947523594, 0.05109090358018875, 0.006386362947523594, 0.05747726559638977, 0.025545451790094376, 0.006386362947523594, 0.033083073794841766, 0.033083073794841766, 0.4962461292743683, 0.033083073794841766, 0.0992492213845253, 0.13233229517936707, 0.06616614758968353, 0.06616614758968353, 0.02017967961728573, 0.7365582585334778, 0.02017967961728573, 0.0504491962492466, 0.02017967961728573, 0.010089839808642864, 0.030269518494606018, 0.030269518494606018, 0.010089839808642864, 0.060539036989212036, 0.0270890761166811, 0.6501378417015076, 0.0270890761166811, 0.0270890761166811, 0.18962353467941284, 0.9557986259460449, 0.018926706165075302, 0.018926706165075302, 0.148871049284935, 0.16381564736366272, 0.04023541882634163, 0.004598333965986967, 0.22991669178009033, 0.03678667172789574, 0.1776106357574463, 0.04023541882634163, 0.010921042412519455, 0.08909271657466888, 0.03736146166920662, 0.020692501217126846, 0.017536483705043793, 0.008768241852521896, 0.07891418039798737, 0.02630472742021084, 0.2367425411939621, 0.04384121298789978, 0.035072967410087585, 0.09645066410303116, 0.02630472742021084, 0.008768241852521896, 0.04384121298789978, 0.37703442573547363, 0.04596460610628128, 0.6435044407844543, 0.04596460610628128, 0.2298230230808258, 0.1901647448539734, 0.11409884691238403, 0.07606589794158936, 0.3422965407371521, 0.07606589794158936, 0.1901647448539734, 0.02923686057329178, 0.03898248076438904, 0.01949124038219452, 0.00974562019109726, 0.00974562019109726, 0.88685142993927, 0.04586918652057648, 0.004586918745189905, 0.00917383749037981, 0.10549913346767426, 0.00917383749037981, 0.06880377978086472, 0.2706282138824463, 0.1972375065088272, 0.02293459326028824, 0.1284337192773819, 0.01834767498075962, 0.11925988644361496, 0.01577092707157135, 0.01577092707157135, 0.29964759945869446, 0.01577092707157135, 0.04731278121471405, 0.5992951989173889, 0.08226695656776428, 0.7815360426902771, 0.08226695656776428, 0.04113347828388214, 0.005454794969409704, 0.010909589938819408, 0.005454794969409704, 0.005454794969409704, 0.12000548839569092, 0.6654849648475647, 0.005454794969409704, 0.005454794969409704, 0.1418246626853943, 0.005454794969409704, 0.03272876888513565, 0.19709889590740204, 0.09854944795370102, 0.09854944795370102, 0.5912966728210449, 0.016506144776940346, 0.3961474895477295, 0.016506144776940346, 0.08253072947263718, 0.4291597902774811, 0.016506144776940346, 0.03301228955388069, 0.06374522298574448, 0.8286879062652588, 0.03985022380948067, 0.03985022380948067, 0.1195506751537323, 0.7571542859077454, 0.039135947823524475, 0.39135947823524475, 0.039135947823524475, 0.508767306804657, 0.03859268128871918, 0.03859268128871918, 0.5981865525245667, 0.01929634064435959, 0.2894451320171356, 0.05746488273143768, 0.01915496215224266, 0.01915496215224266, 0.01915496215224266, 0.13408473134040833, 0.7470434904098511, 0.25946471095085144, 0.38919708132743835, 0.25946471095085144, 0.27503523230552673, 0.014475537464022636, 0.014475537464022636, 0.18818199634552002, 0.47769275307655334, 0.014475537464022636, 0.014475537464022636, 0.07979001104831696, 0.1595800220966339, 0.47874006628990173, 0.01595800183713436, 0.19149602949619293, 0.01595800183713436, 0.01595800183713436, 0.01595800183713436, 0.009858253411948681, 0.009858253411948681, 0.039433013647794724, 0.009858253411948681, 0.009858253411948681, 0.009858253411948681, 0.009858253411948681, 0.8379514813423157, 0.029574759304523468, 0.029574759304523468, 0.7548321485519409, 0.09435401856899261, 0.04717700928449631, 0.04717700928449631, 0.04717700928449631, 0.013005353510379791, 0.11704818159341812, 0.013005353510379791, 0.026010707020759583, 0.039016060531139374, 0.06502676755189896, 0.026010707020759583, 0.026010707020759583, 0.052021414041519165, 0.5072088241577148, 0.07803212106227875, 0.039016060531139374, 0.309451162815094, 0.07141180336475372, 0.14282360672950745, 0.023803934454917908, 0.023803934454917908, 0.023803934454917908, 0.4046669006347656, 0.1553727239370346, 0.1997649371623993, 0.1553727239370346, 0.030123284086585045, 0.14268924295902252, 0.11890769749879837, 0.033294156193733215, 0.03646502643823624, 0.020610667765140533, 0.030123284086585045, 0.04280677065253258, 0.03646502643823624, 0.025607973337173462, 0.15364784002304077, 0.025607973337173462, 0.07682392001152039, 0.6401993036270142, 0.025607973337173462, 0.025607973337173462, 0.0850408747792244, 0.014173479750752449, 0.014173479750752449, 0.014173479750752449, 0.014173479750752449, 0.6519800424575806, 0.1559082716703415, 0.028346959501504898, 0.028346959501504898, 0.014173479750752449, 0.014173479750752449, 0.10781364142894745, 0.22400116920471191, 0.16433730721473694, 0.007327140774577856, 0.1664307713508606, 0.09525283426046371, 0.03558896854519844, 0.029308563098311424, 0.0031402031891047955, 0.08059854805469513, 0.0491965189576149, 0.03558896854519844, 0.9558792114257812, 0.009464150294661522, 0.018928300589323044, 0.9662764072418213, 0.009473297744989395, 0.009473297744989395, 0.153603196144104, 0.5632117390632629, 0.05120106413960457, 0.05120106413960457, 0.10240212827920914, 0.054158229380846024, 0.02407032437622547, 0.22866807878017426, 0.13840436935424805, 0.34901970624923706, 0.054158229380846024, 0.006017581094056368, 0.03610548749566078, 0.030087905004620552, 0.07221097499132156, 0.01805274374783039, 0.7436794638633728, 0.034429602324962616, 0.07574512809515, 0.006885920651257038, 0.02065776288509369, 0.07574512809515, 0.013771841302514076, 0.006885920651257038, 0.006885920651257038, 0.013771841302514076, 0.006885920651257038, 0.027115054428577423, 0.027115054428577423, 0.027115054428577423, 0.027115054428577423, 0.7592214941978455, 0.10846021771430969, 0.027115054428577423, 0.06277057528495789, 0.03923160582780838, 0.01569264382123947, 0.007846321910619736, 0.16477274894714355, 0.05492424964904785, 0.1098484992980957, 0.11769482493400574, 0.023538963869214058, 0.23538964986801147, 0.023538963869214058, 0.14908011257648468, 0.16172128915786743, 0.06468851864337921, 0.3800450265407562, 0.008086064830422401, 0.024258192628622055, 0.09703277051448822, 0.04043032228946686, 0.14554916322231293, 0.024258192628622055, 0.04851638525724411, 0.008086064830422401, 0.021086907014250755, 0.021086907014250755, 0.04217381402850151, 0.021086907014250755, 0.8013024926185608, 0.021086907014250755, 0.021086907014250755, 0.021086907014250755, 0.016980305314064026, 0.09339167922735214, 0.11037199199199677, 0.008490152657032013, 0.16980305314064026, 0.4499781131744385, 0.016980305314064026, 0.03396061062812805, 0.03396061062812805, 0.02547045797109604, 0.042450763285160065, 0.08742664754390717, 0.30890747904777527, 0.029142215847969055, 0.03205643594264984, 0.06411287188529968, 0.03788487985730171, 0.19816707074642181, 0.05245598778128624, 0.008742664940655231, 0.11074042320251465, 0.055370211601257324, 0.014571107923984528, 0.0320880189538002, 0.01974647492170334, 0.01480985525995493, 0.00987323746085167, 0.01974647492170334, 0.012341545894742012, 0.05430280417203903, 0.007404927629977465, 0.7009998559951782, 0.03949294984340668, 0.0666443482041359, 0.02221478335559368, 0.06914651393890381, 0.12100639939308167, 0.017286628484725952, 0.06914651393890381, 0.034573256969451904, 0.4667389690876007, 0.017286628484725952, 0.051859885454177856, 0.051859885454177856, 0.08643314242362976, 0.017286628484725952, 0.028117544949054718, 0.028117544949054718, 0.899761438369751, 0.1031910628080368, 0.043601859360933304, 0.07412315905094147, 0.018894137814641, 0.021800929680466652, 0.02325432375073433, 0.029067905619740486, 0.024707719683647156, 0.05522901937365532, 0.49706119298934937, 0.10900464653968811, 0.04554464668035507, 0.09108929336071014, 0.09108929336071014, 0.5009911060333252, 0.1821785867214203, 0.01536441408097744, 0.26119503378868103, 0.01536441408097744, 0.01536441408097744, 0.4455679953098297, 0.03072882816195488, 0.01536441408097744, 0.03072882816195488, 0.03072882816195488, 0.03072882816195488, 0.12291531264781952, 0.024967191740870476, 0.7739829421043396, 0.07490157335996628, 0.024967191740870476, 0.07490157335996628, 0.08017676323652267, 0.04581529274582863, 0.034361470490694046, 0.16035352647304535, 0.011453823186457157, 0.1259920597076416, 0.011453823186457157, 0.35506853461265564, 0.06872294098138809, 0.09163058549165726, 0.03306673467159271, 0.03306673467159271, 0.09920020401477814, 0.6282679438591003, 0.16533367335796356, 0.03306673467159271, 0.110214002430439, 0.1207105740904808, 0.0052482858300209045, 0.010496571660041809, 0.041986286640167236, 0.04723457247018814, 0.30440056324005127, 0.010496571660041809, 0.07872428745031357, 0.20468313992023468, 0.015744857490062714, 0.052482858300209045, 0.21021711826324463, 0.02272617444396019, 0.14772014319896698, 0.011363087221980095, 0.102267786860466, 0.10794933140277863, 0.011363087221980095, 0.028407718986272812, 0.07386007159948349, 0.09090469777584076, 0.017044631764292717, 0.17044632136821747, 0.631946861743927, 0.03717334195971489, 0.03717334195971489, 0.07434668391942978, 0.03717334195971489, 0.11152002960443497, 0.06995820999145508, 0.04997015371918678, 0.009994030930101871, 0.07995224744081497, 0.009994030930101871, 0.37977316975593567, 0.22986270487308502, 0.019988061860203743, 0.039976123720407486, 0.019988061860203743, 0.07995224744081497, 0.04453449696302414, 0.011133624240756035, 0.12618106603622437, 0.003711208002641797, 0.007422416005283594, 0.02226724848151207, 0.05937932804226875, 0.5047242641448975, 0.007422416005283594, 0.2078276425600052, 0.04550390690565109, 0.13651171326637268, 0.6370546817779541, 0.09100781381130219, 0.04550390690565109, 0.04550390690565109, 0.033467672765254974, 0.033467672765254974, 0.033467672765254974, 0.016733836382627487, 0.06693534553050995, 0.033467672765254974, 0.05020150542259216, 0.016733836382627487, 0.016733836382627487, 0.7028210759162903, 0.1429111212491989, 0.04602222517132759, 0.058133333921432495, 0.060555558651685715, 0.1404888927936554, 0.04602222517132759, 0.13322222232818604, 0.1647111177444458, 0.06540000438690186, 0.021800000220537186, 0.055711112916469574, 0.06782222539186478, 0.9669219255447388, 0.009479627013206482, 0.009479627013206482, 0.025359604507684708, 0.03803940489888191, 0.03803940489888191, 0.7988275289535522, 0.012679802253842354, 0.07607880979776382, 0.012679802253842354, 0.7603974342346191, 0.08089334517717361, 0.03235733509063721, 0.04853600636124611, 0.016178667545318604, 0.016178667545318604, 0.016178667545318604, 0.016178667545318604, 0.016178667545318604, 0.12184445559978485, 0.7310667037963867, 0.040614817291498184, 0.040614817291498184, 0.008155113086104393, 0.03262045234441757, 0.12232670187950134, 0.016310226172208786, 0.4811517000198364, 0.016310226172208786, 0.10601647198200226, 0.12232670187950134, 0.008155113086104393, 0.016310226172208786, 0.016310226172208786, 0.048930682241916656, 0.5814336538314819, 0.15857282280921936, 0.05285760760307312, 0.05285760760307312, 0.020870406180620193, 0.020870406180620193, 0.9391682147979736, 0.03907911479473114, 0.2795659601688385, 0.5290710926055908, 0.021042600274086, 0.012024343013763428, 0.09018257260322571, 0.00901825726032257, 0.00901825726032257, 0.00901825726032257, 0.003006085753440857, 0.030723921954631805, 0.030723921954631805, 0.030723921954631805, 0.07168915122747421, 0.07168915122747421, 0.10241307318210602, 0.020482614636421204, 0.10241307318210602, 0.010241307318210602, 0.07168915122747421, 0.4506175220012665, 0.1887471228837967, 0.4907425343990326, 0.07549884915351868, 0.1887471228837967, 0.5320484042167664, 0.10640968382358551, 0.053204841911792755, 0.053204841911792755, 0.10640968382358551, 0.10640968382358551, 0.09961410611867905, 0.0383131206035614, 0.09195148199796677, 0.010727673768997192, 0.04597574099898338, 0.05823593959212303, 0.0628335177898407, 0.2865821421146393, 0.07049614191055298, 0.11493935436010361, 0.09501653164625168, 0.026052920147776604, 0.04078197479248047, 0.2854738235473633, 0.04078197479248047, 0.04078197479248047, 0.5301656723022461, 0.04078197479248047, 0.20519882440567017, 0.04813305661082268, 0.027866506949067116, 0.3141315281391144, 0.05573301389813423, 0.07599956542253494, 0.21026545763015747, 0.010133274830877781, 0.010133274830877781, 0.0050666374154388905, 0.03293314576148987, 0.0050666374154388905, 0.011736929416656494, 0.011736929416656494, 0.8567959070205688, 0.10563237220048904, 0.15957047045230865, 0.029550086706876755, 0.23049068450927734, 0.05319015681743622, 0.035460103303194046, 0.28368082642555237, 0.0650101900100708, 0.005910017527639866, 0.10638031363487244, 0.017730051651597023, 0.005910017527639866, 0.14958159625530243, 0.17073455452919006, 0.019642027094960213, 0.003021850483492017, 0.2039749026298523, 0.013598326593637466, 0.012087401933968067, 0.031729429960250854, 0.25987914204597473, 0.1163412407040596, 0.010576476342976093, 0.010576476342976093, 0.18503296375274658, 0.12335530668497086, 0.030838826671242714, 0.6167765259742737, 0.2281012088060379, 0.01900843344628811, 0.5132277011871338, 0.01900843344628811, 0.057025302201509476, 0.03801686689257622, 0.01900843344628811, 0.03801686689257622, 0.01900843344628811, 0.03801686689257622, 0.17374633252620697, 0.1547921895980835, 0.034749265760183334, 0.009477073326706886, 0.08845268189907074, 0.037908293306827545, 0.02843121811747551, 0.018954146653413773, 0.32853853702545166, 0.037908293306827545, 0.034749265760183334, 0.050544388592243195, 0.030634354799985886, 0.06126870959997177, 0.3982466161251068, 0.33697789907455444, 0.030634354799985886, 0.12253741919994354, 0.0202498659491539, 0.1012493222951889, 0.0202498659491539, 0.5264964699745178, 0.0809994637966156, 0.2024986445903778, 0.0202498659491539, 0.08876428753137589, 0.02219107188284397, 0.3328660726547241, 0.06657321751117706, 0.02219107188284397, 0.3994393050670624, 0.04438214376568794, 0.2157161980867386, 0.07190539687871933, 0.5752431750297546, 0.07190539687871933, 0.07190539687871933, 0.1950547993183136, 0.3413459062576294, 0.0975273996591568, 0.3413459062576294, 0.13334284722805023, 0.04444761574268341, 0.07778333127498627, 0.03333571180701256, 0.011111903935670853, 0.4000285565853119, 0.10000713914632797, 0.12223094701766968, 0.05555951967835426, 0.011111903935670853, 0.16630378365516663, 0.2839509844779968, 0.0871460884809494, 0.028322476893663406, 0.04720412939786911, 0.031953565776348114, 0.11038503795862198, 0.040668174624443054, 0.05083521828055382, 0.018155435100197792, 0.06753821671009064, 0.0682644322514534, 0.02544679492712021, 0.24810625612735748, 0.04771273955702782, 0.009542548097670078, 0.003180849365890026, 0.015904245898127556, 0.04771273955702782, 0.022265944629907608, 0.08270208537578583, 0.41987210512161255, 0.07634038478136063, 0.06980676203966141, 0.8376811146736145, 0.009531646966934204, 0.005718988366425037, 0.0019063294166699052, 0.007625317666679621, 0.6748406291007996, 0.0038126588333398104, 0.0038126588333398104, 0.02668861299753189, 0.005718988366425037, 0.07434684783220291, 0.14297470450401306, 0.04193924739956856, 0.002764846198260784, 0.002764846198260784, 0.9925797581672668, 0.08771123737096786, 0.15486516058444977, 0.0054819523356854916, 0.009593416936695576, 0.23161248862743378, 0.02055732160806656, 0.0383736677467823, 0.01918683387339115, 0.29054346680641174, 0.1123800203204155, 0.016445856541395187, 0.01233439240604639, 0.013960875570774078, 0.027921751141548157, 0.23733487725257874, 0.027921751141548157, 0.041882626712322235, 0.027921751141548157, 0.041882626712322235, 0.013960875570774078, 0.16753050684928894, 0.36298274993896484, 0.055843502283096313, 0.032726407051086426, 0.032726407051086426, 0.032726407051086426, 0.008181601762771606, 0.057271212339401245, 0.5890753269195557, 0.008181601762771606, 0.10636082291603088, 0.04090800881385803, 0.008181601762771606, 0.07363441586494446, 0.008181601762771606, 0.3667129874229431, 0.21434631943702698, 0.13170677423477173, 0.01549491472542286, 0.059397172182798386, 0.06456214189529419, 0.06456214189529419, 0.005164971575140953, 0.03098982945084572, 0.01807739958167076, 0.025824857875704765, 0.0025824857875704765, 0.024750538170337677, 0.09075196832418442, 0.09900215268135071, 0.06600143015384674, 0.016500357538461685, 0.4620100259780884, 0.024750538170337677, 0.06600143015384674, 0.1155025064945221, 0.016500357538461685, 0.024750538170337677, 0.008250178769230843, 0.10182765126228333, 0.08342505991458893, 0.2797193229198456, 0.0073610348626971245, 0.0515272431075573, 0.10918868333101273, 0.03925885260105133, 0.16071592271327972, 0.041712529957294464, 0.04661988839507103, 0.0441662073135376, 0.034351494163274765, 0.003720813198015094, 0.09674113988876343, 0.037208132445812225, 0.018604066222906113, 0.13767008483409882, 0.42417269945144653, 0.048370569944381714, 0.026045693084597588, 0.014883252792060375, 0.007441626396030188, 0.09674113988876343, 0.08557870239019394, 0.04732085391879082, 0.04732085391879082, 0.5205293893814087, 0.04732085391879082, 0.14196255803108215, 0.04732085391879082, 0.09464170783758163, 0.2967686057090759, 0.15059898793697357, 0.17496059834957123, 0.004429382272064686, 0.09301702678203583, 0.03764974698424339, 0.0420791320502758, 0.08637294918298721, 0.015502837486565113, 0.050937894731760025, 0.0398644395172596, 0.006644073408097029, 0.32294267416000366, 0.11743370443582535, 0.058716852217912674, 0.029358426108956337, 0.4110179543495178, 0.058716852217912674, 0.029358426108956337, 0.024560868740081787, 0.006140217185020447, 0.030701085925102234, 0.6815640926361084, 0.08596304059028625, 0.03684130311012268, 0.030701085925102234, 0.006140217185020447, 0.012280434370040894, 0.006140217185020447, 0.03684130311012268, 0.03684130311012268, 0.0853252187371254, 0.1154399961233139, 0.2308799922466278, 0.005019130185246468, 0.06022956594824791, 0.010038260370492935, 0.015057391487061977, 0.050191305577754974, 0.07026782631874084, 0.2258608639240265, 0.11042086780071259, 0.025095652788877487, 0.14885608851909637, 0.029771218076348305, 0.029771218076348305, 0.7145092487335205, 0.014885609038174152, 0.029771218076348305, 0.014885609038174152, 0.014885609038174152, 0.014885609038174152, 0.013544376008212566, 0.013544376008212566, 0.14898812770843506, 0.027088752016425133, 0.6365856528282166, 0.013544376008212566, 0.12189938127994537, 0.013544376008212566, 0.06301891058683395, 0.04201260954141617, 0.4201260805130005, 0.18905673921108246, 0.08402521908283234, 0.021006304770708084, 0.1260378211736679, 0.04201260954141617, 0.05145140737295151, 0.02875225618481636, 0.040858469903469086, 0.007566383574157953, 0.03177880868315697, 0.05145140737295151, 0.1952126920223236, 0.012106213718652725, 0.06809744983911514, 0.0953364297747612, 0.40858471393585205, 0.010592936538159847, 0.06585993617773056, 0.06585993617773056, 0.7903192639350891, 0.04691686853766441, 0.23458434641361237, 0.04691686853766441, 0.23458434641361237, 0.3284180760383606, 0.09383373707532883, 0.116431824862957, 0.0388106070458889, 0.0776212140917778, 0.0388106070458889, 0.6985909342765808, 0.008432510308921337, 0.008432510308921337, 0.04216255247592926, 0.43849053978919983, 0.3625979423522949, 0.016865020617842674, 0.016865020617842674, 0.016865020617842674, 0.016865020617842674, 0.025297531858086586, 0.04216255247592926, 0.06285123527050018, 0.06285123527050018, 0.2828305661678314, 0.5342354774475098, 0.023329852148890495, 0.03499477729201317, 0.011664926074445248, 0.03499477729201317, 0.7698851227760315, 0.011664926074445248, 0.09331940859556198, 0.023329852148890495, 0.05556195229291916, 0.16163477301597595, 0.03030651994049549, 0.16163477301597595, 0.09597064554691315, 0.025255432352423668, 0.015153259970247746, 0.015153259970247746, 0.05556195229291916, 0.04040869325399399, 0.04040869325399399, 0.3030652105808258, 0.09339245408773422, 0.21791572868824005, 0.4980930984020233, 0.031130818650126457, 0.031130818650126457, 0.031130818650126457, 0.031130818650126457, 0.7340361475944519, 0.1631191372871399, 0.04077978432178497, 0.04077978432178497, 0.009558659978210926, 0.4110223650932312, 0.07328306138515472, 0.0063724396750330925, 0.04142085835337639, 0.0063724396750330925, 0.019117319956421852, 0.009558659978210926, 0.24215270578861237, 0.09558659791946411, 0.07965549826622009, 0.0063724396750330925, 0.01377461850643158, 0.00688730925321579, 0.00688730925321579, 0.19284465909004211, 0.00688730925321579, 0.00688730925321579, 0.38568931818008423, 0.35814008116722107, 0.02754923701286316, 0.00688730925321579, 0.052638981491327286, 0.052638981491327286, 0.4211118519306183, 0.3158338963985443, 0.052638981491327286, 0.19103562831878662, 0.042452361434698105, 0.5518807172775269, 0.0636785477399826, 0.08490472286939621, 0.021226180717349052, 0.021226180717349052, 0.021226180717349052, 0.1029711440205574, 0.14301547408103943, 0.3203546702861786, 0.005720619112253189, 0.06292680650949478, 0.07436804473400116, 0.14301547408103943, 0.06292680650949478, 0.005720619112253189, 0.005720619112253189, 0.04576495289802551, 0.028603095561265945, 0.06750758737325668, 0.06750758737325668, 0.30378416180610657, 0.03375379368662834, 0.03375379368662834, 0.43879932165145874, 0.1020980179309845, 0.0340326726436615, 0.01701633632183075, 0.068065345287323, 0.272261381149292, 0.08508168160915375, 0.05104900896549225, 0.01701633632183075, 0.28927773237228394, 0.068065345287323, 0.0543244332075119, 0.1086488664150238, 0.2716221809387207, 0.4889199137687683, 0.0543244332075119, 0.13023142516613007, 0.17364190518856049, 0.47751525044441223, 0.04341047629714012, 0.04341047629714012, 0.04341047629714012, 0.08682095259428024, 0.18492938578128815, 0.3082156479358673, 0.06164312735199928, 0.06164312735199928, 0.3082156479358673, 0.10719341784715652, 0.5478774309158325, 0.011910379864275455, 0.08337265998125076, 0.03573114052414894, 0.04764151945710182, 0.02382075972855091, 0.1191037967801094, 0.02382075972855091, 0.011910379864275455, 0.04043469578027725, 0.09434761852025986, 0.6604333519935608, 0.013478231616318226, 0.0539129264652729, 0.0808693915605545, 0.0539129264652729, 0.03018590249121189, 0.07546475529670715, 0.015092951245605946, 0.19620835781097412, 0.18111540377140045, 0.015092951245605946, 0.015092951245605946, 0.12074360996484756, 0.3169519603252411, 0.03020308166742325, 0.03020308166742325, 0.15101541578769684, 0.755077064037323, 0.03020308166742325, 0.11220856755971909, 0.12823836505413055, 0.04808938503265381, 0.04808938503265381, 0.43280449509620667, 0.06411918252706528, 0.01602979563176632, 0.06411918252706528, 0.01602979563176632, 0.03205959126353264, 0.03205959126353264, 0.9562429189682007, 0.00946775171905756, 0.01893550343811512, 0.02373047173023224, 0.003955078776925802, 0.3084961175918579, 0.01186523586511612, 0.05141602084040642, 0.0791015699505806, 0.3559570610523224, 0.07119141519069672, 0.06328126043081284, 0.02373047173023224, 0.003955078776925802, 0.024115974083542824, 0.08842523396015167, 0.07770702987909317, 0.018756868317723274, 0.0133977634832263, 0.0428728424012661, 0.48499903082847595, 0.0160773154348135, 0.0133977634832263, 0.14469584822654724, 0.0160773154348135, 0.05895015969872475, 0.0712616890668869, 0.03563084453344345, 0.05700935423374176, 0.7482477426528931, 0.04275701567530632, 0.00712616927921772, 0.02137850783765316, 0.9670808911323547, 0.009481185115873814, 0.009481185115873814, 0.034105367958545685, 0.017052683979272842, 0.2025006264448166, 0.004263170994818211, 0.004263170994818211, 0.021315855905413628, 0.02984219789505005, 0.34318527579307556, 0.03197378292679787, 0.3090799152851105, 0.7192140817642212, 0.029355676844716072, 0.014677838422358036, 0.058711353689432144, 0.10274486988782883, 0.014677838422358036, 0.04403351619839668, 0.014677838422358036, 0.014677838422358036, 0.37921902537345886, 0.012854881584644318, 0.07070185244083405, 0.012854881584644318, 0.10283905267715454, 0.22496043145656586, 0.0771292895078659, 0.006427440792322159, 0.019282322376966476, 0.05141952633857727, 0.006427440792322159, 0.05141952633857727, 0.09225320816040039, 0.11861126869916916, 0.01317902933806181, 0.0790741816163063, 0.03953709080815315, 0.03953709080815315, 0.01317902933806181, 0.03953709080815315, 0.01317902933806181, 0.527161180973053, 0.01317902933806181, 0.029763100668787956, 0.029763100668787956, 0.03968413174152374, 0.01984206587076187, 0.17857860028743744, 0.4166834056377411, 0.12897343933582306, 0.03968413174152374, 0.01984206587076187, 0.029763100668787956, 0.05952620133757591, 0.02527582086622715, 0.02527582086622715, 0.0505516417324543, 0.429688960313797, 0.0758274644613266, 0.02527582086622715, 0.3285856544971466, 0.02527582086622715, 0.24105802178382874, 0.0997481495141983, 0.0997481495141983, 0.016624690964818, 0.054030247032642365, 0.037405554205179214, 0.13715369999408722, 0.012468518689274788, 0.08312345296144485, 0.020780863240361214, 0.17871543765068054, 0.016624690964818, 0.13964956998825073, 0.7680726051330566, 0.022265568375587463, 0.15585897862911224, 0.04453113675117493, 0.6457014679908752, 0.022265568375587463, 0.022265568375587463, 0.06679670512676239, 0.022265568375587463, 0.022265568375587463, 0.02407490648329258, 0.02407490648329258, 0.04814981296658516, 0.3370486795902252, 0.04814981296658516, 0.36112359166145325, 0.04814981296658516, 0.12037453055381775, 0.11785048991441727, 0.5892524719238281, 0.11785048991441727, 0.07856699079275131, 0.039283495396375656, 0.039283495396375656, 0.07953420281410217, 0.039767101407051086, 0.11930130422115326, 0.15906840562820435, 0.039767101407051086, 0.07953420281410217, 0.07953420281410217, 0.35790392756462097, 0.22536873817443848, 0.15024583041667938, 0.15024583041667938, 0.37561458349227905, 0.07265815138816833, 0.09687753766775131, 0.048438768833875656, 0.7023621201515198, 0.07265815138816833, 0.024219384416937828, 0.21711768209934235, 0.00923904962837696, 0.10624907165765762, 0.4942891597747803, 0.023097625002264977, 0.01847809925675392, 0.023097625002264977, 0.013858575373888016, 0.04157572612166405, 0.013858575373888016, 0.03233667463064194, 0.54366135597229, 0.22891004383563995, 0.11445502191781998, 0.028613755479454994, 0.028613755479454994, 0.028613755479454994, 0.028613755479454994, 0.15159107744693756, 0.6568946838378906, 0.05053035914897919, 0.10106071829795837, 0.3804776668548584, 0.06469660997390747, 0.029267512261867523, 0.006161581724882126, 0.2156553566455841, 0.03850988671183586, 0.01694434881210327, 0.02618672139942646, 0.11398926377296448, 0.05083305016160011, 0.02618672139942646, 0.03080790862441063, 0.5462416410446167, 0.060693513602018356, 0.3034675717353821, 0.20794257521629333, 0.02789473719894886, 0.48435404896736145, 0.005071770399808884, 0.04057416319847107, 0.022822966799139977, 0.02789473719894886, 0.048181816935539246, 0.01267942599952221, 0.04311004653573036, 0.03803827613592148, 0.04057416319847107, 0.7089537978172302, 0.13292883336544037, 0.08861922472715378, 0.04430961236357689, 0.12127108126878738, 0.030317770317196846, 0.45476657152175903, 0.21222439408302307, 0.12127108126878738, 0.030317770317196846, 0.025212829932570457, 0.050425659865140915, 0.025212829932570457, 0.6807464361190796, 0.025212829932570457, 0.050425659865140915, 0.050425659865140915, 0.025212829932570457, 0.050425659865140915, 0.08479122817516327, 0.07267819344997406, 0.01211303286254406, 0.03633909672498703, 0.19380852580070496, 0.1211303249001503, 0.14535638689994812, 0.27859973907470703, 0.01211303286254406, 0.04845213145017624, 0.01211303286254406, 0.01211303286254406, 0.5879272818565369, 0.18372726440429688, 0.11023636162281036, 0.036745455116033554, 0.036745455116033554, 0.1827409267425537, 0.5025375485420227, 0.04568523168563843, 0.1827409267425537, 0.04568523168563843, 0.04568523168563843, 0.11914359778165817, 0.014892949722707272, 0.029785899445414543, 0.07446474581956863, 0.521253228187561, 0.04467884823679924, 0.014892949722707272, 0.10425064712762833, 0.014892949722707272, 0.014892949722707272, 0.059571798890829086, 0.9550237655639648, 0.018911361694335938, 0.018911361694335938, 0.03998841717839241, 0.6398146748542786, 0.27991893887519836, 0.04982855170965195, 0.4263109266757965, 0.005536505486816168, 0.02214602194726467, 0.16609516739845276, 0.05536505579948425, 0.06090156361460686, 0.04982855170965195, 0.011073010973632336, 0.08858408778905869, 0.05536505579948425, 0.005536505486816168, 0.08365282416343689, 0.011950403451919556, 0.20315685868263245, 0.011950403451919556, 0.011950403451919556, 0.011950403451919556, 0.05975201725959778, 0.5855697393417358, 0.3904121220111847, 0.008099837228655815, 0.022679543122649193, 0.050218988209962845, 0.09233813732862473, 0.004859901964664459, 0.21545566618442535, 0.04373911768198013, 0.06803862750530243, 0.0793784037232399, 0.008099837228655815, 0.01619967445731163, 0.6445494294166565, 0.06445494294166565, 0.1289098858833313, 0.06445494294166565, 0.06445494294166565, 0.08064661920070648, 0.05223701521754265, 0.1631261110305786, 0.009164388291537762, 0.48662900924682617, 0.009164388291537762, 0.0504041351377964, 0.04490550234913826, 0.008247949182987213, 0.06323427706956863, 0.011913704685866833, 0.021078092977404594, 0.3768008351325989, 0.1648503690958023, 0.12111455202102661, 0.003364293137565255, 0.037007223814725876, 0.11102167516946793, 0.02355005219578743, 0.0437358096241951, 0.02691434510052204, 0.02691434510052204, 0.0437358096241951, 0.02355005219578743, 0.06173445284366608, 0.02057815156877041, 0.054875072091817856, 0.02057815156877041, 0.04801568761467934, 0.006859384011477232, 0.18520335853099823, 0.04115630313754082, 0.04801568761467934, 0.013718768022954464, 0.47329747676849365, 0.02057815156877041, 0.0428837351500988, 0.1286512017250061, 0.0428837351500988, 0.0857674703001976, 0.6003722548484802, 0.0428837351500988, 0.966834306716919, 0.009478767402470112, 0.009478767402470112, 0.33884140849113464, 0.10081232339143753, 0.0812099277973175, 0.002800342161208391, 0.17082087695598602, 0.016802053898572922, 0.042005132883787155, 0.08401026576757431, 0.008401026949286461, 0.04760581627488136, 0.07000855356454849, 0.03920479118824005, 0.9562943577766418, 0.009468261152505875, 0.01893652230501175, 0.06746868789196014, 0.09276944398880005, 0.05903510004281998, 0.09276944398880005, 0.008433585986495018, 0.025300757959485054, 0.08433585613965988, 0.016867171972990036, 0.008433585986495018, 0.522882342338562, 0.008433585986495018, 0.008433585986495018, 0.9560748934745789, 0.018932176753878593, 0.018932176753878593, 0.08224675804376602, 0.12337013334035873, 0.09509781002998352, 0.03598295524716377, 0.05140422284603119, 0.005140422377735376, 0.557735800743103, 0.005140422377735376, 0.015421266667544842, 0.015421266667544842, 0.002570211188867688, 0.010280844755470753, 0.11862164735794067, 0.711729884147644, 0.02965541183948517, 0.007413852959871292, 0.007413852959871292, 0.02965541183948517, 0.007413852959871292, 0.051896970719099045, 0.014827705919742584, 0.05799595266580582, 0.014498988166451454, 0.05799595266580582, 0.014498988166451454, 0.18848684430122375, 0.20298583805561066, 0.02899797633290291, 0.02899797633290291, 0.07249493896961212, 0.333476722240448, 0.014498988166451454, 0.05222419276833534, 0.08704032003879547, 0.27852901816368103, 0.4874258041381836, 0.05222419276833534, 0.11555325239896774, 0.04171597585082054, 0.042967457324266434, 0.1347426027059555, 0.02836686372756958, 0.14350296556949615, 0.025029586628079414, 0.21650591492652893, 0.14934319257736206, 0.042967457324266434, 0.040047336369752884, 0.018772190436720848, 0.08123208582401276, 0.10830944031476974, 0.05415472015738487, 0.1895415335893631, 0.48739248514175415, 0.05415472015738487, 0.027077360078692436, 0.027077360078692436, 0.038990940898656845, 0.038990940898656845, 0.6238550543785095, 0.038990940898656845, 0.038990940898656845, 0.038990940898656845, 0.038990940898656845, 0.038990940898656845, 0.07798188179731369, 0.017147058621048927, 0.05144117400050163, 0.09430881589651108, 0.034294117242097855, 0.12002940475940704, 0.471544086933136, 0.025720587000250816, 0.042867645621299744, 0.017147058621048927, 0.025720587000250816, 0.034294117242097855, 0.06001470237970352, 0.8240347504615784, 0.0646301731467247, 0.016157543286681175, 0.08078771829605103, 0.9664216041564941, 0.009474721737205982, 0.018949443474411964, 0.9562816023826599, 0.018936268985271454, 0.018936268985271454, 0.9660770297050476, 0.009471343830227852, 0.018942687660455704, 0.07657520473003387, 0.19964250922203064, 0.2844221889972687, 0.005469657480716705, 0.05469657853245735, 0.005469657480716705, 0.12033247202634811, 0.10665832459926605, 0.046492088586091995, 0.04102243110537529, 0.051961749792099, 0.005469657480716705, 0.24405235052108765, 0.008563240990042686, 0.5095128417015076, 0.004281620495021343, 0.034252963960170746, 0.008563240990042686, 0.004281620495021343, 0.07278754562139511, 0.008563240990042686, 0.05566106364130974, 0.02568972110748291, 0.02568972110748291, 0.610093355178833, 0.023465128615498543, 0.09386051446199417, 0.07039538770914078, 0.023465128615498543, 0.023465128615498543, 0.14079077541828156, 0.0572417750954628, 0.0858626589179039, 0.7441430687904358, 0.0286208875477314, 0.0572417750954628, 0.08468299359083176, 0.08468299359083176, 0.04234149679541588, 0.006048785522580147, 0.024195142090320587, 0.362927109003067, 0.1814635545015335, 0.048390284180641174, 0.09678056836128235, 0.024195142090320587, 0.03629271313548088, 0.012097571045160294, 0.2390788048505783, 0.11953940242528915, 0.4781576097011566, 0.05976970121264458, 0.336396723985672, 0.15206974744796753, 0.06912261247634888, 0.009216348640620708, 0.1105961874127388, 0.06451444327831268, 0.036865394562482834, 0.03225722163915634, 0.05068991705775261, 0.04608174413442612, 0.0276490468531847, 0.05990626662969589, 0.16212739050388336, 0.037899911403656006, 0.0042111012153327465, 0.025266608223319054, 0.029477708041667938, 0.11791083216667175, 0.052638765424489975, 0.1473885476589203, 0.3368881046772003, 0.058955416083335876, 0.02105550654232502, 0.006316652055829763, 0.1060297042131424, 0.023700756952166557, 0.004989632871001959, 0.06486523151397705, 0.04365928843617439, 0.01247408241033554, 0.02494816482067108, 0.5663233399391174, 0.031185206025838852, 0.08981339633464813, 0.009979265742003918, 0.02120593935251236, 0.5818972587585449, 0.03422924876213074, 0.03422924876213074, 0.10268774628639221, 0.03422924876213074, 0.03422924876213074, 0.13691699504852295, 0.8999411463737488, 0.04368646442890167, 0.05242375656962395, 0.02815569005906582, 0.05631138011813164, 0.6194251775741577, 0.02815569005906582, 0.22524552047252655, 0.03894805908203125, 0.03894805908203125, 0.8568572998046875, 0.03894805908203125, 0.14991220831871033, 0.14991220831871033, 0.016656912863254547, 0.008328456431627274, 0.08328455686569214, 0.016656912863254547, 0.36645206809043884, 0.07495610415935516, 0.008328456431627274, 0.09161301702260971, 0.04164227843284607, 0.05873444303870201, 0.06607624888420105, 0.6093698143959045, 0.007341805379837751, 0.036709025502204895, 0.014683610759675503, 0.11012707650661469, 0.036709025502204895, 0.029367221519351006, 0.022025415673851967, 0.007341805379837751, 0.03614439815282822, 0.32529959082603455, 0.07228879630565643, 0.18072199821472168, 0.36144399642944336, 0.09639021009206772, 0.04392465204000473, 0.11835253238677979, 0.0024402583949267864, 0.11957266181707382, 0.1317739486694336, 0.029283100739121437, 0.11713240295648575, 0.01952206715941429, 0.18057912588119507, 0.09272982180118561, 0.04880516976118088, 0.1667255312204361, 0.1111503541469574, 0.0555751770734787, 0.0555751770734787, 0.0555751770734787, 0.5001766085624695, 0.03115740418434143, 0.7166202664375305, 0.06231480836868286, 0.03115740418434143, 0.06231480836868286, 0.03115740418434143, 0.03115740418434143, 0.06643440574407578, 0.13286881148815155, 0.022144801914691925, 0.1771584153175354, 0.39860641956329346, 0.0885792076587677, 0.04428960382938385, 0.06643440574407578, 0.9664150476455688, 0.009474657475948334, 0.018949314951896667, 0.07960886508226395, 0.3980443477630615, 0.3184354603290558, 0.02741975151002407, 0.00913991779088974, 0.00913991779088974, 0.00913991779088974, 0.05483950302004814, 0.00913991779088974, 0.8500123023986816, 0.00913991779088974, 0.01827983558177948, 0.00913991779088974, 0.026425957679748535, 0.23342929780483246, 0.6210100054740906, 0.004404326435178518, 0.03083028271794319, 0.004404326435178518, 0.03083028271794319, 0.026425957679748535, 0.002202163217589259, 0.004404326435178518, 0.006606489419937134, 0.013212978839874268, 0.01654118113219738, 0.4714236557483673, 0.1406000405550003, 0.00827059056609869, 0.14887061715126038, 0.06616472452878952, 0.06616472452878952, 0.03308236226439476, 0.00827059056609869, 0.03308236226439476, 0.00827059056609869, 0.01654118113219738, 0.03395242989063263, 0.06790485978126526, 0.13580971956253052, 0.5432388782501221, 0.10185728967189789, 0.06790485978126526, 0.06790485978126526, 0.01876072771847248, 0.6378647089004517, 0.01876072771847248, 0.07504291087388992, 0.11256436258554459, 0.05628218129277229, 0.01876072771847248, 0.03752145543694496, 0.01876072771847248, 0.11018717288970947, 0.036729056388139725, 0.6060294508934021, 0.018364528194069862, 0.1285516917705536, 0.036729056388139725, 0.055093586444854736, 0.018364528194069862, 0.8205606341362, 0.04558670148253441, 0.04558670148253441, 0.04558670148253441, 0.04558670148253441, 0.09523206949234009, 0.26188817620277405, 0.07142405211925507, 0.023808017373085022, 0.023808017373085022, 0.07142405211925507, 0.023808017373085022, 0.4047362804412842, 0.023808017373085022, 0.15433238446712494, 0.07482782006263733, 0.037413910031318665, 0.004676738753914833, 0.023383693769574165, 0.15433238446712494, 0.13094867765903473, 0.3320484459400177, 0.023383693769574165, 0.004676738753914833, 0.06079760193824768, 0.10755183547735214, 0.10755183547735214, 0.26887959241867065, 0.43020734190940857, 0.05377591773867607, 0.025022882968187332, 0.08758009225130081, 0.050045765936374664, 0.012511441484093666, 0.025022882968187332, 0.06881292909383774, 0.08132436871528625, 0.025022882968187332, 0.006255720742046833, 0.6193163394927979, 0.6210752129554749, 0.19612900912761688, 0.04903225228190422, 0.04903225228190422, 0.03268817067146301, 0.03268817067146301, 0.016344085335731506, 0.11043667793273926, 0.15461134910583496, 0.15461134910583496, 0.11043667793273926, 0.02208733558654785, 0.02208733558654785, 0.0441746711730957, 0.06626200675964355, 0.02208733558654785, 0.3313100337982178, 0.506019115447998, 0.15180572867393494, 0.050601910799741745, 0.20240764319896698, 0.050601910799741745, 0.06065316125750542, 0.06065316125750542, 0.48522529006004333, 0.06065316125750542, 0.06065316125750542, 0.3032658100128174, 0.26569098234176636, 0.2214091420173645, 0.04428182914853096, 0.39853647351264954, 0.022548194974660873, 0.06764458119869232, 0.022548194974660873, 0.5186084508895874, 0.06764458119869232, 0.29312652349472046, 0.04639637470245361, 0.04639637470245361, 0.007732728961855173, 0.007732728961855173, 0.11599093675613403, 0.42530009150505066, 0.03866364434361458, 0.07732728868722916, 0.15078821778297424, 0.04639637470245361, 0.015465457923710346, 0.027064552530646324, 0.6658827662467957, 0.10244350135326385, 0.05122175067663193, 0.10244350135326385, 0.1297835111618042, 0.05562150850892067, 0.14832402765750885, 0.018540503457188606, 0.44497206807136536, 0.018540503457188606, 0.018540503457188606, 0.11124301701784134, 0.018540503457188606, 0.01913524605333805, 0.0574057400226593, 0.48794877529144287, 0.04783811792731285, 0.0574057400226593, 0.0382704921066761, 0.04783811792731285, 0.10524385422468185, 0.10524385422468185, 0.01913524605333805, 0.01913524605333805, 0.5899775624275208, 0.2528475224971771, 0.04584076628088951, 0.9168153405189514, 0.052283238619565964, 0.20913295447826385, 0.052283238619565964, 0.6273988485336304, 0.03155474364757538, 0.06310948729515076, 0.03155474364757538, 0.2839927077293396, 0.03155474364757538, 0.47332116961479187, 0.03155474364757538, 0.19862787425518036, 0.32742562890052795, 0.11638351529836655, 0.017069581896066666, 0.07448545098304749, 0.04500162601470947, 0.055864088237285614, 0.01862136274576187, 0.007758901454508305, 0.021724922582507133, 0.08379613608121872, 0.03413916379213333, 0.4863329827785492, 0.06947614252567291, 0.17369034886360168, 0.017369035631418228, 0.017369035631418228, 0.017369035631418228, 0.06947614252567291, 0.017369035631418228, 0.017369035631418228, 0.08684517443180084, 0.0712323933839798, 0.0712323933839798, 0.007914709858596325, 0.01582941971719265, 0.2057824581861496, 0.3403325378894806, 0.0474882610142231, 0.1187206506729126, 0.01582941971719265, 0.0712323933839798, 0.02374413050711155, 0.09093289077281952, 0.04546644538640976, 0.02273322269320488, 0.02273322269320488, 0.5455973744392395, 0.02273322269320488, 0.09093289077281952, 0.1136661171913147, 0.04546644538640976, 0.02273322269320488, 0.15598678588867188, 0.6239471435546875, 0.10399118810892105, 0.051995594054460526, 0.051995594054460526, 0.019615046679973602, 0.03138407692313194, 0.058845143765211105, 0.043153103440999985, 0.5688363909721375, 0.08630620688199997, 0.007846019230782986, 0.11376727372407913, 0.011769028380513191, 0.03530708700418472, 0.011769028380513191, 0.011769028380513191, 0.28485023975372314, 0.11370564997196198, 0.036338921636343, 0.010550009086728096, 0.11956676840782166, 0.11487787961959839, 0.21217240393161774, 0.029305581003427505, 0.010550009086728096, 0.016411125659942627, 0.023444464430212975, 0.026961134746670723, 0.015995215624570847, 0.06398086249828339, 0.175947368144989, 0.2079377919435501, 0.49585166573524475, 0.03199043124914169, 0.03169877827167511, 0.15849389135837555, 0.12679511308670044, 0.03169877827167511, 0.03169877827167511, 0.06339755654335022, 0.15849389135837555, 0.4120841324329376, 0.22811126708984375, 0.20510844886302948, 0.15143521130084991, 0.015335211530327797, 0.04983943700790405, 0.044088732451200485, 0.09584507346153259, 0.026836620643734932, 0.015335211530327797, 0.01916901394724846, 0.12843239307403564, 0.021085916087031364, 0.03347703814506531, 0.31803184747695923, 0.005579506512731314, 0.016738519072532654, 0.20086222887039185, 0.41846296191215515, 0.8254145979881287, 0.055027641355991364, 0.055027641355991364, 0.055027641355991364, 0.5357819199562073, 0.03827013820409775, 0.19135069847106934, 0.0765402764081955, 0.0765402764081955, 0.0765402764081955, 0.3458408713340759, 0.059046003967523575, 0.08013386279344559, 0.008435143157839775, 0.10543929785490036, 0.042175717651844025, 0.12652716040611267, 0.05482843145728111, 0.0042175715789198875, 0.05482843145728111, 0.025305431336164474, 0.08856900781393051, 0.9660719633102417, 0.009471293538808823, 0.018942587077617645, 0.026688069105148315, 0.2480420470237732, 0.07535454630851746, 0.05337613821029663, 0.19937556982040405, 0.08320397883653641, 0.015698863193392754, 0.05494602397084236, 0.03453750163316727, 0.025118181481957436, 0.07849431782960892, 0.10675227642059326, 0.955714762210846, 0.018925044685602188, 0.018925044685602188, 0.9666054248809814, 0.009476523846387863, 0.018953047692775726, 0.9661893248558044, 0.018944887444376945, 0.009472443722188473, 0.2683583199977875, 0.020642947405576706, 0.04128589481115341, 0.14450062811374664, 0.10321473330259323, 0.020642947405576706, 0.04128589481115341, 0.3509300947189331, 0.05135975778102875, 0.15407927334308624, 0.35951828956604004, 0.35951828956604004, 0.05135975778102875, 0.0725788027048111, 0.13608525693416595, 0.009072350338101387, 0.009072350338101387, 0.12701290845870972, 0.5352686643600464, 0.009072350338101387, 0.02721705101430416, 0.009072350338101387, 0.02721705101430416, 0.02721705101430416, 0.02409384213387966, 0.02409384213387966, 0.01204692106693983, 0.02409384213387966, 0.01204692106693983, 0.9035190939903259, 0.2009023129940033, 0.2678697407245636, 0.1339348703622818, 0.3348371982574463, 0.19023439288139343, 0.05435268208384514, 0.4619978070259094, 0.013588170520961285, 0.12229353934526443, 0.02717634104192257, 0.02717634104192257, 0.02717634104192257, 0.08152902871370316, 0.0727740004658699, 0.32748299837112427, 0.4366439878940582, 0.10916099697351456, 0.20452775061130524, 0.49086660146713257, 0.0818111002445221, 0.04090555012226105, 0.0818111002445221, 0.04090555012226105, 0.09466984122991562, 0.08304372429847717, 0.09300897270441055, 0.008304372429847717, 0.11460033804178238, 0.104635089635849, 0.06975672394037247, 0.06643497943878174, 0.05314798280596733, 0.09633071720600128, 0.209270179271698, 0.008304372429847717, 0.16162638366222382, 0.24243958294391632, 0.040406595915555954, 0.4444725513458252, 0.040406595915555954, 0.040406595915555954, 0.15081682801246643, 0.15081682801246643, 0.5127772092819214, 0.030163366347551346, 0.030163366347551346, 0.09049010276794434, 0.5755734443664551, 0.33206161856651306, 0.022137440741062164, 0.022137440741062164, 0.12308413535356522, 0.12308413535356522, 0.18462619185447693, 0.06154206767678261, 0.12308413535356522, 0.30771031975746155, 0.1666659563779831, 0.05014728009700775, 0.21976308524608612, 0.007374600041657686, 0.05752187967300415, 0.017699040472507477, 0.023598719388246536, 0.05752187967300415, 0.1666659563779831, 0.1666659563779831, 0.05752187967300415, 0.008849520236253738, 0.07925284653902054, 0.013208807446062565, 0.05283522978425026, 0.02641761489212513, 0.02641761489212513, 0.02641761489212513, 0.18492330610752106, 0.013208807446062565, 0.46230825781822205, 0.07925284653902054, 0.02641761489212513, 0.14496074616909027, 0.2174411118030548, 0.07248037308454514, 0.4348822236061096, 0.07248037308454514, 0.11204099655151367, 0.11204099655151367, 0.058095332235097885, 0.03527216613292694, 0.12034033238887787, 0.20333366096019745, 0.03527216613292694, 0.022823166102170944, 0.1722111701965332, 0.016598666086792946, 0.06846950203180313, 0.04564633220434189, 0.2613804340362549, 0.3079276382923126, 0.0644499659538269, 0.014322214759886265, 0.08951384574174881, 0.025063876062631607, 0.014322214759886265, 0.14680270850658417, 0.025063876062631607, 0.007161107379943132, 0.025063876062631607, 0.017902769148349762, 0.03861672803759575, 0.0772334560751915, 0.057925090193748474, 0.03861672803759575, 0.019308364018797874, 0.7144094705581665, 0.019308364018797874, 0.22577518224716187, 0.02337726578116417, 0.1027369350194931, 0.019070927053689957, 0.07074698805809021, 0.027683604508638382, 0.15871933102607727, 0.0172253530472517, 0.14149397611618042, 0.14333955943584442, 0.06336469203233719, 0.006151912268251181, 0.04183008894324303, 0.0062745134346187115, 0.010457522235810757, 0.09202619642019272, 0.03973858430981636, 0.10875823348760605, 0.03973858430981636, 0.06274513155221939, 0.3848368227481842, 0.0020915044005960226, 0.08156867325305939, 0.12967327237129211, 0.07307242602109909, 0.07307242602109909, 0.14614485204219818, 0.29228970408439636, 0.36536213755607605, 0.035016413778066635, 0.14006565511226654, 0.5602626204490662, 0.035016413778066635, 0.1050492376089096, 0.035016413778066635, 0.07003282755613327, 0.0136967608705163, 0.0273935217410326, 0.20545141398906708, 0.041090283542871475, 0.08902894705533981, 0.00684838043525815, 0.0547870434820652, 0.00684838043525815, 0.24654169380664825, 0.2944803535938263, 0.01503981463611126, 0.7068712711334229, 0.06015925854444504, 0.12031851708889008, 0.03007962927222252, 0.01503981463611126, 0.03007962927222252, 0.01503981463611126, 0.01503981463611126, 0.07805043458938599, 0.5723698735237122, 0.02601681277155876, 0.23415131866931915, 0.02601681277155876, 0.03434435650706291, 0.03434435650706291, 0.05151653662323952, 0.8414367437362671, 0.017172178253531456, 0.017172178253531456, 0.04086167737841606, 0.04086167737841606, 0.04086167737841606, 0.04086167737841606, 0.8172335028648376, 0.02072151005268097, 0.2072151154279709, 0.5594807863235474, 0.02072151005268097, 0.16577208042144775, 0.07500351220369339, 0.037501756101846695, 0.037501756101846695, 0.037501756101846695, 0.5625263452529907, 0.037501756101846695, 0.037501756101846695, 0.15000702440738678, 0.03229328989982605, 0.3875194787979126, 0.03229328989982605, 0.48439934849739075, 0.009703366085886955, 0.41724473237991333, 0.009703366085886955, 0.009703366085886955, 0.009703366085886955, 0.029110098257660866, 0.46576157212257385, 0.03881346434354782, 0.01940673217177391, 0.46510326862335205, 0.16912846267223358, 0.29597482085227966, 0.03586544096469879, 0.017932720482349396, 0.14346176385879517, 0.017932720482349396, 0.23312535881996155, 0.03586544096469879, 0.19725991785526276, 0.017932720482349396, 0.30485624074935913, 0.017932720482349396, 0.03392431139945984, 0.01696215569972992, 0.2786639630794525, 0.18416054546833038, 0.01696215569972992, 0.03150114417076111, 0.026654815301299095, 0.002423164900392294, 0.22535434365272522, 0.10419609397649765, 0.04119380563497543, 0.03634747490286827, 0.5804705023765564, 0.0223257876932621, 0.0223257876932621, 0.1116289421916008, 0.0446515753865242, 0.0893031507730484, 0.0223257876932621, 0.0223257876932621, 0.0223257876932621, 0.0669773668050766, 0.04620109871029854, 0.5544131994247437, 0.04620109871029854, 0.09240219742059708, 0.2310055047273636, 0.09240219742059708, 0.5928052067756653, 0.16937293112277985, 0.04234323278069496, 0.04234323278069496, 0.08468646556138992, 0.04234323278069496, 0.0636901929974556, 0.28685662150382996, 0.07472313940525055, 0.005014975555241108, 0.11484294384717941, 0.06820367276668549, 0.07672912627458572, 0.14192381501197815, 0.04262729361653328, 0.049648258835077286, 0.05967821180820465, 0.015546425245702267, 0.0506482794880867, 0.008441380225121975, 0.1012965589761734, 0.0337655209004879, 0.48115867376327515, 0.05908966064453125, 0.0337655209004879, 0.02532413974404335, 0.1519448459148407, 0.01688276045024395, 0.0337655209004879, 0.012487156316637993, 0.27471745014190674, 0.024974312633275986, 0.012487156316637993, 0.04994862526655197, 0.024974312633275986, 0.4745119512081146, 0.012487156316637993, 0.024974312633275986, 0.07492294162511826, 0.012487156316637993, 0.5574385523796082, 0.055743854492902756, 0.01858128421008587, 0.01858128421008587, 0.185812845826149, 0.01858128421008587, 0.055743854492902756, 0.055743854492902756, 0.01858128421008587, 0.055743854492902756], \"Term\": [\"abdulaziz\", \"abdulaziz\", \"abdulaziz\", \"abdulaziz\", \"abdulaziz\", \"abdullah\", \"abdullah\", \"abdullah\", \"abdullah\", \"abdullah\", \"abdullah\", \"abdullah\", \"abdullah\", \"abl\", \"abl\", \"abl\", \"abl\", \"abl\", \"abl\", \"abl\", \"abl\", \"abl\", \"abl\", \"abl\", \"abl\", \"accept\", \"accept\", \"accept\", \"accept\", \"accept\", \"accept\", \"accept\", \"accept\", \"accept\", \"accept\", \"access\", \"access\", \"access\", \"access\", \"access\", \"access\", \"access\", \"access\", \"access\", \"access\", \"access\", \"access\", \"account\", \"account\", \"account\", \"account\", \"account\", \"account\", \"account\", \"account\", \"account\", \"account\", \"account\", \"account\", \"activ\", \"activ\", \"activ\", \"activ\", \"activ\", \"activ\", \"activ\", \"activ\", \"activ\", \"activ\", \"activ\", \"activ\", \"actual\", \"actual\", \"actual\", \"actual\", \"actual\", \"actual\", \"actual\", \"adapt\", \"adapt\", \"adapt\", \"adapt\", \"adapt\", \"adapt\", \"adapt\", \"add\", \"add\", \"add\", \"add\", \"add\", \"add\", \"add\", \"add\", \"add\", \"add\", \"addc\", \"addc\", \"addc\", \"addc\", \"addc\", \"addc\", \"addc\", \"admin\", \"admin\", \"admin\", \"admin\", \"admin\", \"admin\", \"admin\", \"admin\", \"admin\", \"administr\", \"administr\", \"administr\", \"administr\", \"administr\", \"administr\", \"administr\", \"administr\", \"administr\", \"administr\", \"administr\", \"administr\", \"agent\", \"agent\", \"agent\", \"agent\", \"agent\", \"agent\", \"agent\", \"agent\", \"agent\", \"aim\", \"aim\", \"aim\", \"aim\", \"aim\", \"aim\", \"aim\", \"aim\", \"alarm\", \"alarm\", \"alarm\", \"alarm\", \"alarm\", \"alarm\", \"alarm\", \"alarm\", \"alert\", \"alert\", \"alert\", \"alert\", \"alert\", \"alert\", \"alert\", \"alert\", \"alert\", \"alert\", \"alert\", \"alert\", \"alghamdi\", \"alghamdi\", \"alghamdi\", \"alghamdi\", \"allow\", \"allow\", \"allow\", \"allow\", \"allow\", \"allow\", \"allow\", \"allow\", \"allow\", \"alzahrani\", \"alzahrani\", \"alzahrani\", \"analysi\", \"analysi\", \"analysi\", \"analysi\", \"analysi\", \"analysi\", \"analysi\", \"appear\", \"appear\", \"appear\", \"appear\", \"appear\", \"appear\", \"appear\", \"appear\", \"appear\", \"appear\", \"appear\", \"appear\", \"applic\", \"applic\", \"applic\", \"applic\", \"applic\", \"applic\", \"applic\", \"applic\", \"applic\", \"applic\", \"applic\", \"applic\", \"approv\", \"approv\", \"approv\", \"approv\", \"approv\", \"approv\", \"approv\", \"approv\", \"approv\", \"approv\", \"approv\", \"approv\", \"area\", \"area\", \"area\", \"area\", \"area\", \"area\", \"area\", \"area\", \"arrang\", \"arrang\", \"arrang\", \"arrang\", \"arrang\", \"aspen\", \"aspen\", \"aspen\", \"aspen\", \"aspen\", \"aspen\", \"aspen\", \"aspen\", \"aspen\", \"aspen\", \"aspx\", \"aspx\", \"aspx\", \"aspx\", \"aspx\", \"aspx\", \"aspx\", \"aspx\", \"aspx\", \"asset\", \"asset\", \"asset\", \"asset\", \"asset\", \"asset\", \"asset\", \"asset\", \"asset\", \"assign\", \"assign\", \"assign\", \"assign\", \"assign\", \"assign\", \"assign\", \"assign\", \"assign\", \"assign\", \"assign\", \"assign\", \"attach\", \"attach\", \"attach\", \"attach\", \"attach\", \"attach\", \"attach\", \"attach\", \"attach\", \"attach\", \"attach\", \"attach\", \"attempt\", \"attempt\", \"attempt\", \"attempt\", \"attempt\", \"attempt\", \"attempt\", \"attempt\", \"attempt\", \"audio\", \"audio\", \"audio\", \"audio\", \"audio\", \"audio\", \"august\", \"august\", \"august\", \"august\", \"august\", \"backup\", \"backup\", \"backup\", \"backup\", \"backup\", \"badg\", \"badg\", \"badg\", \"badg\", \"badg\", \"badg\", \"badg\", \"badg\", \"badg\", \"barrier\", \"barrier\", \"barrier\", \"barrier\", \"barrier\", \"barrier\", \"barrier\", \"barrier\", \"behalf\", \"behalf\", \"behalf\", \"behalf\", \"behalf\", \"behalf\", \"behalf\", \"block\", \"block\", \"block\", \"block\", \"block\", \"block\", \"block\", \"block\", \"block\", \"block\", \"block\", \"block\", \"book\", \"book\", \"book\", \"book\", \"book\", \"book\", \"break\", \"break\", \"break\", \"break\", \"break\", \"build\", \"build\", \"build\", \"build\", \"build\", \"build\", \"build\", \"build\", \"build\", \"build\", \"build\", \"build\", \"busi\", \"busi\", \"busi\", \"busi\", \"busi\", \"busi\", \"busi\", \"busi\", \"busi\", \"busi\", \"busi\", \"busi\", \"cabl\", \"cabl\", \"cabl\", \"cabl\", \"cabl\", \"cabl\", \"cabl\", \"cabl\", \"cabl\", \"cabl\", \"cabl\", \"camera\", \"camera\", \"camera\", \"camera\", \"camera\", \"camera\", \"camera\", \"camera\", \"camera\", \"camera\", \"camera\", \"cancel\", \"cancel\", \"cancel\", \"cancel\", \"cancel\", \"cancel\", \"cancel\", \"cancel\", \"cancel\", \"capac\", \"capac\", \"capac\", \"capac\", \"capac\", \"capac\", \"capac\", \"capac\", \"capac\", \"capac\", \"captiva\", \"captiva\", \"captiva\", \"captiva\", \"captiva\", \"card\", \"card\", \"card\", \"card\", \"card\", \"catalog\", \"catalog\", \"catalog\", \"catalog\", \"catalog\", \"catalog\", \"catalyst\", \"catalyst\", \"catalyst\", \"catalyst\", \"catalyst\", \"catalyst\", \"catalyst\", \"catalyst\", \"catalyst\", \"categori\", \"categori\", \"categori\", \"categori\", \"categori\", \"categori\", \"categori\", \"categori\", \"categori\", \"categori\", \"cdata\", \"cdata\", \"cdata\", \"cdata\", \"cdata\", \"cdata\", \"center\", \"center\", \"center\", \"center\", \"center\", \"center\", \"center\", \"center\", \"center\", \"center\", \"center\", \"center\", \"centr\", \"centr\", \"centr\", \"centr\", \"centr\", \"centr\", \"chang\", \"chang\", \"chang\", \"chang\", \"chang\", \"chang\", \"chang\", \"chang\", \"chang\", \"chang\", \"chang\", \"chang\", \"charg\", \"charg\", \"charg\", \"charg\", \"charg\", \"charg\", \"charger\", \"charger\", \"charger\", \"charger\", \"check\", \"check\", \"check\", \"check\", \"check\", \"check\", \"check\", \"check\", \"check\", \"check\", \"check\", \"check\", \"choos\", \"choos\", \"choos\", \"choos\", \"choos\", \"choos\", \"chrome\", \"chrome\", \"chrome\", \"chrome\", \"chrome\", \"chrome\", \"citrix\", \"citrix\", \"citrix\", \"citrix\", \"citrix\", \"citrix\", \"citrix\", \"citrix\", \"citrix\", \"citrix\", \"client\", \"client\", \"client\", \"client\", \"client\", \"client\", \"client\", \"client\", \"close\", \"close\", \"close\", \"close\", \"close\", \"close\", \"close\", \"close\", \"close\", \"close\", \"close\", \"close\", \"code\", \"code\", \"code\", \"code\", \"code\", \"code\", \"code\", \"code\", \"code\", \"code\", \"code\", \"code\", \"collect\", \"collect\", \"collect\", \"collect\", \"collect\", \"collect\", \"collect\", \"collect\", \"color\", \"color\", \"color\", \"color\", \"color\", \"come\", \"come\", \"come\", \"come\", \"come\", \"come\", \"come\", \"come\", \"come\", \"come\", \"come\", \"come\", \"command\", \"command\", \"command\", \"command\", \"command\", \"command\", \"command\", \"command\", \"common\", \"common\", \"common\", \"common\", \"complet\", \"complet\", \"complet\", \"complet\", \"complet\", \"complet\", \"complet\", \"complet\", \"complet\", \"complet\", \"complet\", \"complet\", \"concern\", \"concern\", \"concern\", \"concern\", \"concern\", \"concern\", \"condit\", \"condit\", \"condit\", \"condit\", \"confer\", \"confer\", \"confer\", \"confer\", \"confer\", \"confer\", \"confer\", \"confer\", \"connect\", \"connect\", \"connect\", \"connect\", \"connect\", \"connect\", \"connect\", \"connect\", \"connect\", \"connect\", \"connect\", \"connect\", \"connector\", \"connector\", \"connector\", \"connector\", \"connector\", \"connectorid\", \"connectorid\", \"connectorid\", \"connectorstatu\", \"connectorstatu\", \"connectorstatu\", \"contact\", \"contact\", \"contact\", \"contact\", \"contact\", \"contact\", \"contact\", \"contact\", \"contact\", \"contact\", \"contact\", \"contact\", \"contain\", \"contain\", \"contain\", \"contain\", \"contain\", \"contain\", \"contain\", \"contain\", \"contain\", \"contain\", \"contain\", \"continu\", \"continu\", \"continu\", \"continu\", \"continu\", \"continu\", \"continu\", \"continu\", \"continu\", \"continu\", \"continu\", \"continu\", \"contractor\", \"contractor\", \"contractor\", \"contractor\", \"contractor\", \"contractor\", \"coordin\", \"coordin\", \"coordin\", \"coordin\", \"coordin\", \"copi\", \"copi\", \"copi\", \"copi\", \"copi\", \"copi\", \"copi\", \"copi\", \"copi\", \"copi\", \"copi\", \"core\", \"core\", \"core\", \"corpnet\", \"corpnet\", \"corpnet\", \"corpnet\", \"corpnet\", \"corpnet\", \"corpnet\", \"corpnet\", \"correctli\", \"correctli\", \"correctli\", \"correctli\", \"correctli\", \"correctli\", \"counter\", \"counter\", \"counter\", \"counter\", \"counter\", \"cours\", \"cours\", \"cours\", \"cours\", \"cours\", \"cours\", \"cours\", \"cours\", \"crash\", \"crash\", \"crash\", \"crash\", \"crash\", \"crash\", \"crash\", \"crash\", \"crash\", \"creat\", \"creat\", \"creat\", \"creat\", \"creat\", \"creat\", \"creat\", \"creat\", \"creat\", \"creat\", \"creat\", \"creat\", \"critic\", \"critic\", \"critic\", \"critic\", \"critic\", \"critic\", \"critic\", \"critic\", \"critic\", \"critic\", \"critic\", \"critic\", \"cross\", \"cross\", \"cross\", \"cross\", \"cross\", \"cross\", \"cubicl\", \"cubicl\", \"cubicl\", \"cubicl\", \"cubicl\", \"cubicl\", \"cubicl\", \"cubicl\", \"customfield\", \"customfield\", \"customfield\", \"customfield\", \"customfield\", \"damag\", \"damag\", \"damag\", \"damag\", \"damag\", \"damag\", \"damag\", \"damag\", \"data\", \"data\", \"data\", \"data\", \"data\", \"data\", \"data\", \"data\", \"data\", \"data\", \"data\", \"data\", \"date\", \"date\", \"date\", \"date\", \"date\", \"date\", \"date\", \"date\", \"date\", \"date\", \"date\", \"date\", \"dear\", \"dear\", \"dear\", \"dear\", \"dear\", \"dear\", \"dear\", \"dear\", \"dear\", \"dear\", \"dear\", \"dear\", \"delet\", \"delet\", \"delet\", \"delet\", \"delet\", \"delet\", \"delet\", \"delet\", \"delet\", \"delet\", \"delet\", \"delet\", \"deliveri\", \"deliveri\", \"deliveri\", \"deliveri\", \"deliveri\", \"deliveri\", \"deliveri\", \"deliveri\", \"descript\", \"descript\", \"descript\", \"descript\", \"descript\", \"descript\", \"descript\", \"descript\", \"descript\", \"design\", \"design\", \"design\", \"design\", \"design\", \"desk\", \"desk\", \"desk\", \"desk\", \"desk\", \"desk\", \"desk\", \"desk\", \"desk\", \"deskphon\", \"deskphon\", \"deskphon\", \"deskphon\", \"deskphon\", \"desktop\", \"desktop\", \"desktop\", \"desktop\", \"desktop\", \"desktop\", \"desktop\", \"desktop\", \"desktop\", \"desktop\", \"desktop\", \"desktop\", \"devic\", \"devic\", \"devic\", \"devic\", \"devic\", \"devic\", \"devic\", \"devic\", \"devic\", \"devic\", \"devic\", \"devic\", \"directli\", \"directli\", \"directli\", \"directli\", \"directli\", \"directli\", \"directli\", \"directli\", \"director\", \"director\", \"director\", \"director\", \"director\", \"director\", \"director\", \"director\", \"director\", \"director\", \"director\", \"disconnect\", \"disconnect\", \"disconnect\", \"disconnect\", \"disconnect\", \"disconnect\", \"disconnect\", \"disconnect\", \"disconnect\", \"disconnect\", \"disconnect\", \"disk\", \"disk\", \"disk\", \"disk\", \"disk\", \"disk\", \"disk\", \"disk\", \"disk\", \"dispatch\", \"dispatch\", \"dispatch\", \"dispatch\", \"dispatch\", \"dispatch\", \"dispatch\", \"dispatch\", \"dist\", \"dist\", \"dist\", \"dist\", \"dist\", \"dist\", \"dist\", \"distribut\", \"distribut\", \"distribut\", \"distribut\", \"distribut\", \"dock\", \"dock\", \"dock\", \"dock\", \"dock\", \"dock\", \"document\", \"document\", \"document\", \"document\", \"document\", \"document\", \"document\", \"document\", \"document\", \"document\", \"document\", \"document\", \"door\", \"door\", \"door\", \"door\", \"door\", \"door\", \"draw\", \"draw\", \"draw\", \"draw\", \"draw\", \"drive\", \"drive\", \"drive\", \"drive\", \"drive\", \"drive\", \"drive\", \"drive\", \"drive\", \"drive\", \"drive\", \"drive\", \"drum\", \"drum\", \"drum\", \"drum\", \"drum\", \"drum\", \"drum\", \"drum\", \"drum\", \"email\", \"email\", \"email\", \"email\", \"email\", \"email\", \"email\", \"email\", \"email\", \"email\", \"email\", \"email\", \"employe\", \"employe\", \"employe\", \"employe\", \"employe\", \"employe\", \"employe\", \"employe\", \"employe\", \"employe\", \"employe\", \"employe\", \"encount\", \"encount\", \"encount\", \"encount\", \"encount\", \"encount\", \"encount\", \"enter\", \"enter\", \"enter\", \"enter\", \"enter\", \"enter\", \"enter\", \"enter\", \"enter\", \"enter\", \"enter\", \"enterpris\", \"enterpris\", \"enterpris\", \"error\", \"error\", \"error\", \"error\", \"error\", \"error\", \"error\", \"error\", \"error\", \"error\", \"error\", \"error\", \"exceed\", \"exceed\", \"exceed\", \"exceed\", \"exceed\", \"exceed\", \"export\", \"export\", \"export\", \"export\", \"export\", \"export\", \"export\", \"extend\", \"extend\", \"extend\", \"extend\", \"extend\", \"extend\", \"extend\", \"extend\", \"extend\", \"extend\", \"extsadara\", \"extsadara\", \"extsadara\", \"extsadara\", \"extsadara\", \"extsadara\", \"face\", \"face\", \"face\", \"face\", \"face\", \"face\", \"face\", \"face\", \"face\", \"face\", \"face\", \"face\", \"factor\", \"factor\", \"factor\", \"factor\", \"factor\", \"factor\", \"factor\", \"factor\", \"factor\", \"factor\", \"fail\", \"fail\", \"fail\", \"fail\", \"fail\", \"fail\", \"fail\", \"fail\", \"fail\", \"fail\", \"fail\", \"fail\", \"failur\", \"failur\", \"failur\", \"failur\", \"failur\", \"failur\", \"failur\", \"failur\", \"failur\", \"failur\", \"failur\", \"failur\", \"fals\", \"fals\", \"fals\", \"fals\", \"famili\", \"famili\", \"fault\", \"fault\", \"fault\", \"fault\", \"fault\", \"fault\", \"fault\", \"fault\", \"fault\", \"fault\", \"faulti\", \"faulti\", \"faulti\", \"faulti\", \"faulti\", \"faulti\", \"file\", \"file\", \"file\", \"file\", \"file\", \"file\", \"file\", \"file\", \"file\", \"file\", \"file\", \"file\", \"final\", \"final\", \"final\", \"final\", \"final\", \"final\", \"floor\", \"floor\", \"floor\", \"floor\", \"floor\", \"floor\", \"floor\", \"floor\", \"floor\", \"floor\", \"floor\", \"foreman\", \"foreman\", \"foreman\", \"foreman\", \"foreman\", \"foreman\", \"foreman\", \"forget\", \"forget\", \"forget\", \"forget\", \"forget\", \"forget\", \"forget\", \"forget\", \"forget\", \"framework\", \"framework\", \"framework\", \"framework\", \"free\", \"free\", \"free\", \"free\", \"free\", \"free\", \"free\", \"fulli\", \"fulli\", \"fulli\", \"fulli\", \"fulli\", \"fulli\", \"fulli\", \"fulli\", \"gate\", \"gate\", \"gate\", \"gate\", \"gate\", \"gate\", \"gate\", \"gate\", \"gate\", \"gate\", \"gate\", \"gate\", \"gener\", \"gener\", \"gener\", \"gener\", \"gener\", \"gener\", \"gener\", \"gener\", \"gener\", \"gener\", \"ghulam\", \"ghulam\", \"ghulam\", \"ghulam\", \"ghulam\", \"ghulam\", \"ghulam\", \"ghulam\", \"grant\", \"grant\", \"grant\", \"grant\", \"grant\", \"grant\", \"grant\", \"grant\", \"greet\", \"greet\", \"greet\", \"greet\", \"greet\", \"greet\", \"greet\", \"greet\", \"greet\", \"greet\", \"hard\", \"hard\", \"hard\", \"hard\", \"hard\", \"hard\", \"hard\", \"hard\", \"have\", \"have\", \"have\", \"have\", \"have\", \"have\", \"have\", \"have\", \"have\", \"have\", \"have\", \"have\", \"hdmi\", \"hdmi\", \"hdmi\", \"hdmi\", \"health\", \"health\", \"health\", \"health\", \"health\", \"health\", \"health\", \"health\", \"health\", \"hear\", \"hear\", \"hear\", \"hear\", \"hear\", \"hear\", \"hear\", \"hear\", \"hear\", \"hear\", \"heartbeat\", \"heartbeat\", \"heartbeat\", \"heartbeat\", \"heartbeat\", \"heartbeat\", \"heartbeat\", \"help\", \"help\", \"help\", \"help\", \"help\", \"help\", \"help\", \"help\", \"help\", \"help\", \"help\", \"help\", \"helpdesk\", \"helpdesk\", \"helpdesk\", \"helpdesk\", \"helpdesk\", \"helpdesk\", \"helpdesk\", \"helpdesk\", \"helpdesk\", \"high\", \"high\", \"high\", \"high\", \"high\", \"high\", \"high\", \"high\", \"high\", \"high\", \"high\", \"hint\", \"hint\", \"hint\", \"hint\", \"hint\", \"home\", \"home\", \"home\", \"home\", \"home\", \"home\", \"home\", \"home\", \"home\", \"home\", \"home\", \"home\", \"host\", \"host\", \"host\", \"host\", \"host\", \"host\", \"host\", \"host\", \"hostnam\", \"hostnam\", \"hostnam\", \"hostnam\", \"hostnam\", \"hostnam\", \"hous\", \"hous\", \"hous\", \"hous\", \"hous\", \"http\", \"http\", \"http\", \"http\", \"http\", \"http\", \"http\", \"http\", \"http\", \"http\", \"http\", \"http\", \"hxxp\", \"hxxp\", \"hxxp\", \"hxxp\", \"hxxp\", \"ida\", \"ida\", \"ida\", \"ida\", \"ident_cod\", \"ident_cod\", \"imag\", \"imag\", \"imag\", \"imag\", \"imag\", \"imag\", \"imag\", \"imag\", \"imag\", \"imag\", \"imag\", \"incid\", \"incid\", \"incid\", \"incid\", \"incid\", \"incid\", \"incid\", \"incid\", \"incid\", \"incid\", \"incid\", \"incid\", \"incorrect\", \"incorrect\", \"incorrect\", \"incorrect\", \"incorrect\", \"incorrect\", \"incorrect\", \"incorrect\", \"incorrect\", \"incorrect\", \"incorrect\", \"info\", \"info\", \"info\", \"info\", \"info\", \"info\", \"info\", \"info\", \"info\", \"info\", \"inop\", \"inop\", \"inop\", \"inop\", \"instal\", \"instal\", \"instal\", \"instal\", \"instal\", \"instal\", \"instal\", \"instal\", \"instal\", \"instal\", \"instal\", \"instanc\", \"instanc\", \"instanc\", \"instanc\", \"instanc\", \"instanc\", \"instanc\", \"insuffici\", \"insuffici\", \"insuffici\", \"insuffici\", \"insuffici\", \"insuffici\", \"insuffici\", \"insuffici\", \"insuffici\", \"interfac\", \"interfac\", \"interfac\", \"interfac\", \"interfac\", \"interfac\", \"interfac\", \"interfac\", \"interfac\", \"interfac\", \"internet\", \"internet\", \"internet\", \"internet\", \"internet\", \"internet\", \"internet\", \"internet\", \"internet\", \"internet\", \"internet\", \"internet\", \"inventori\", \"inventori\", \"inventori\", \"inventori\", \"inventori\", \"inventori\", \"inventori\", \"inventori\", \"ioc\", \"ioc\", \"ioc\", \"ioc\", \"ioc\", \"ioc\", \"ioc\", \"ioc\", \"ioc\", \"ioc\", \"ipc\", \"ipc\", \"ipc\", \"ipc\", \"ipc\", \"ismonitoralert\", \"ismonitoralert\", \"ismonitoralert\", \"issu\", \"issu\", \"issu\", \"issu\", \"issu\", \"issu\", \"issu\", \"issu\", \"issu\", \"issu\", \"issu\", \"issu\", \"item\", \"item\", \"item\", \"item\", \"item\", \"item\", \"item\", \"item\", \"item\", \"item\", \"item\", \"item\", \"jam\", \"jam\", \"jam\", \"jam\", \"java\", \"java\", \"java\", \"java\", \"java\", \"java\", \"jblb\", \"jblb\", \"jblb\", \"jblb\", \"jblb\", \"jblb\", \"jblc\", \"jblc\", \"jblc\", \"jblc\", \"jblc\", \"jblc\", \"jblc\", \"jblc\", \"jblc\", \"jblc\", \"jblc\", \"jblc\", \"jbldcd\", \"jbldcd\", \"jbldcd\", \"jbldcd\", \"jbldcd\", \"jbldcd\", \"jbldcvspda\", \"jbldcvspda\", \"jbldcvspda\", \"jbldcvspda\", \"jbldcvspdb\", \"jbldcvspdb\", \"jbldcvspdb\", \"jbldcvspdb\", \"jbldcvspdb\", \"jbldcvspdb\", \"jbldcvspdb\", \"jbldcvspdb\", \"jbldcvspdb\", \"jbldcvspdb\", \"jbldcvspdb\", \"jbldcvsplua\", \"jbldcvsplua\", \"jbldcvsplua\", \"jbldcvsplua\", \"jbldcvspmer\", \"jbldcvspmer\", \"jbldcvspmer\", \"jbldcvspmer\", \"jbldcvspmer\", \"jbldcvspmer\", \"jbldcvspmer\", \"jbldcvspnnm\", \"jbldcvspnnm\", \"jbldcvspnsn\", \"jbldcvspnsn\", \"jbldcvspnsn\", \"jbldcvspnsn\", \"jbldcvspoel\", \"jbldcvspoel\", \"jbldcvspoel\", \"jbldcvspoel\", \"jbldcvspsft\", \"jbldcvspsft\", \"jbldcvspsft\", \"jbldcvspsft\", \"jbldcvspsft\", \"jbldcvspsi\", \"jbldcvspsi\", \"jbldcvspsi\", \"jbldcvspsi\", \"jbldcvspsi\", \"jbldcvspsi\", \"jbldcvspspw\", \"jbldcvspspw\", \"jbldcvspspw\", \"jbldcvspsql\", \"jbldcvspsql\", \"jbldcvspsql\", \"jbldcvspsql\", \"jbldcvspsql\", \"jbldcvspsql\", \"jbldcvspsql\", \"join\", \"join\", \"join\", \"join\", \"join\", \"join\", \"join\", \"join\", \"jsbc\", \"jsbc\", \"jsbc\", \"jsbc\", \"jsbc\", \"jsbc\", \"jsbc\", \"jsbc\", \"jsbc\", \"jsbc\", \"juli\", \"juli\", \"juli\", \"juli\", \"juli\", \"keep\", \"keep\", \"keep\", \"keep\", \"keep\", \"keep\", \"keep\", \"keep\", \"keep\", \"keep\", \"keep\", \"keep\", \"keyboard\", \"keyboard\", \"keyboard\", \"keyboard\", \"keyboard\", \"keyboard\", \"keyboard\", \"kindli\", \"kindli\", \"kindli\", \"kindli\", \"kindli\", \"kindli\", \"kindli\", \"kindli\", \"kindli\", \"kindli\", \"kindli\", \"kindli\", \"label\", \"label\", \"label\", \"label\", \"label\", \"label\", \"label\", \"lane\", \"lane\", \"lane\", \"lane\", \"lane\", \"lane\", \"lane\", \"lane\", \"lane\", \"lane\", \"lane\", \"laptop\", \"laptop\", \"laptop\", \"laptop\", \"laptop\", \"laptop\", \"laptop\", \"laptop\", \"laptop\", \"laptop\", \"laptop\", \"laptop\", \"lastmodifi\", \"lastmodifi\", \"lastmodifi\", \"lastmodifiedbi\", \"lastmodifiedbi\", \"lastmodifiedbi\", \"launch\", \"launch\", \"launch\", \"launch\", \"launch\", \"leav\", \"leav\", \"leav\", \"leav\", \"leav\", \"leav\", \"leav\", \"leav\", \"leav\", \"leav\", \"leav\", \"licens\", \"licens\", \"licens\", \"licens\", \"licens\", \"licens\", \"licens\", \"licens\", \"licens\", \"licens\", \"licens\", \"lim\", \"lim\", \"lim\", \"lim\", \"lim\", \"lim\", \"lim\", \"line\", \"line\", \"line\", \"line\", \"line\", \"line\", \"line\", \"line\", \"line\", \"line\", \"line\", \"line\", \"link\", \"link\", \"link\", \"link\", \"link\", \"link\", \"link\", \"link\", \"link\", \"link\", \"link\", \"linux\", \"linux\", \"linux\", \"linux\", \"linux\", \"linux\", \"linux\", \"linux\", \"load\", \"load\", \"load\", \"load\", \"load\", \"load\", \"load\", \"load\", \"load\", \"load\", \"load\", \"locat\", \"locat\", \"locat\", \"locat\", \"locat\", \"locat\", \"locat\", \"locat\", \"locat\", \"locat\", \"locat\", \"locat\", \"lock\", \"lock\", \"lock\", \"lock\", \"lock\", \"lock\", \"lock\", \"lock\", \"lock\", \"lock\", \"lock\", \"lock\", \"log\", \"log\", \"log\", \"log\", \"log\", \"log\", \"log\", \"log\", \"log\", \"log\", \"log\", \"logic\", \"logic\", \"logic\", \"login\", \"login\", \"login\", \"login\", \"login\", \"login\", \"login\", \"login\", \"login\", \"login\", \"login\", \"logon\", \"logon\", \"logon\", \"logon\", \"logon\", \"long\", \"long\", \"long\", \"long\", \"long\", \"long\", \"long\", \"long\", \"long\", \"long\", \"long\", \"loss\", \"loss\", \"loss\", \"loss\", \"loss\", \"luck\", \"luck\", \"luck\", \"luck\", \"luck\", \"luck\", \"luck\", \"luck\", \"luck\", \"luck\", \"lv_root\", \"lv_root\", \"lv_root\", \"lv_root\", \"lv_root\", \"lv_root\", \"machin\", \"machin\", \"machin\", \"machin\", \"machin\", \"machin\", \"machin\", \"machin\", \"machin\", \"machin\", \"machin\", \"machin\", \"mail\", \"mail\", \"mail\", \"mail\", \"mail\", \"mail\", \"mail\", \"mail\", \"mail\", \"mail\", \"mail\", \"mail\", \"mailbox\", \"mailbox\", \"mailbox\", \"mailbox\", \"mailbox\", \"mailbox\", \"mainten\", \"mainten\", \"mainten\", \"mainten\", \"mainten\", \"mainten\", \"mainten\", \"mainten\", \"mainten\", \"mainten\", \"mainten\", \"major\", \"major\", \"major\", \"major\", \"major\", \"major\", \"major\", \"major\", \"major\", \"major\", \"make\", \"make\", \"make\", \"make\", \"make\", \"make\", \"malfunct\", \"malfunct\", \"malfunct\", \"malfunct\", \"malfunct\", \"malfunct\", \"malfunct\", \"malfunct\", \"malfunct\", \"malfunct\", \"manag\", \"manag\", \"manag\", \"manag\", \"manag\", \"manag\", \"manag\", \"manag\", \"manag\", \"manag\", \"manag\", \"manag\", \"managementgroup\", \"managementgroup\", \"managementgroup\", \"mapper\", \"mapper\", \"mapper\", \"mapper\", \"mapper\", \"mapper\", \"mapper\", \"march\", \"march\", \"march\", \"march\", \"march\", \"march\", \"march\", \"march\", \"march\", \"match\", \"match\", \"match\", \"match\", \"materi\", \"materi\", \"materi\", \"materi\", \"materi\", \"materi\", \"materi\", \"materi\", \"materi\", \"materi\", \"materi\", \"materi\", \"matter\", \"matter\", \"matter\", \"matter\", \"mbyte\", \"mbyte\", \"mbyte\", \"meet\", \"meet\", \"meet\", \"meet\", \"meet\", \"meet\", \"meet\", \"meet\", \"meet\", \"meet\", \"memori\", \"memori\", \"memori\", \"memori\", \"memori\", \"memori\", \"memori\", \"memori\", \"memori\", \"memori\", \"memori\", \"menu\", \"menu\", \"menu\", \"menu\", \"meridium\", \"meridium\", \"meridium\", \"meridium\", \"meridium\", \"meridium\", \"messag\", \"messag\", \"messag\", \"messag\", \"messag\", \"messag\", \"messag\", \"messag\", \"messag\", \"messag\", \"messag\", \"messag\", \"metric\", \"metric\", \"metric\", \"metric\", \"metric\", \"metric\", \"microsoft\", \"microsoft\", \"microsoft\", \"microsoft\", \"microsoft\", \"microsoft\", \"microsoft\", \"microsoft\", \"microsoft\", \"microsoft\", \"microsoft\", \"microsoft\", \"microsoftonlin\", \"microsoftonlin\", \"microsoftonlin\", \"microsoftonlin\", \"miss\", \"miss\", \"miss\", \"miss\", \"miss\", \"miss\", \"miss\", \"miss\", \"miss\", \"miss\", \"miss\", \"mobil\", \"mobil\", \"mobil\", \"mobil\", \"mobil\", \"mobil\", \"mobil\", \"mobil\", \"mobil\", \"mobil\", \"mobil\", \"mobil\", \"model\", \"model\", \"model\", \"model\", \"moham\", \"moham\", \"moham\", \"moham\", \"moham\", \"moham\", \"moham\", \"moham\", \"moham\", \"moham\", \"monitor\", \"monitor\", \"monitor\", \"monitor\", \"monitor\", \"monitor\", \"monitor\", \"monitor\", \"monitor\", \"monitor\", \"monitor\", \"monitor\", \"movement\", \"movement\", \"movement\", \"movement\", \"movement\", \"movement\", \"mustafa\", \"mustafa\", \"mustafa\", \"mustafa\", \"mustafa\", \"mustafa\", \"mustafa\", \"myaccess\", \"myaccess\", \"myaccess\", \"myaccess\", \"myaccess\", \"myaccess\", \"myaccess\", \"nave\", \"nave\", \"nave\", \"nave\", \"nave\", \"naviswork\", \"naviswork\", \"naviswork\", \"naviswork\", \"near\", \"near\", \"near\", \"near\", \"near\", \"near\", \"near\", \"near\", \"near\", \"near\", \"need\", \"need\", \"need\", \"need\", \"need\", \"need\", \"need\", \"need\", \"need\", \"need\", \"need\", \"need\", \"network\", \"network\", \"network\", \"network\", \"network\", \"network\", \"network\", \"network\", \"network\", \"network\", \"network\", \"nnmi\", \"nnmi\", \"node\", \"node\", \"node\", \"node\", \"node\", \"node\", \"node\", \"node\", \"node\", \"node\", \"node\", \"node\", \"null\", \"null\", \"null\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"number\", \"object\", \"object\", \"object\", \"object\", \"object\", \"object\", \"object\", \"object\", \"object\", \"object\", \"object\", \"occur\", \"occur\", \"occur\", \"occur\", \"occur\", \"occur\", \"occur\", \"occur\", \"occur\", \"occur\", \"occur\", \"occur\", \"offic\", \"offic\", \"offic\", \"offic\", \"offic\", \"offic\", \"offic\", \"offic\", \"offic\", \"offic\", \"offic\", \"offic\", \"onedr\", \"onedr\", \"onedr\", \"onedr\", \"onedr\", \"onedr\", \"onedr\", \"onedr\", \"onedr\", \"onedr\", \"onedr\", \"onedr\", \"open\", \"open\", \"open\", \"open\", \"open\", \"open\", \"open\", \"open\", \"open\", \"open\", \"open\", \"open\", \"order\", \"order\", \"order\", \"order\", \"order\", \"order\", \"order\", \"order\", \"order\", \"order\", \"order\", \"order\", \"origin\", \"origin\", \"origin\", \"origin\", \"origin\", \"origin\", \"origin\", \"outlook\", \"outlook\", \"outlook\", \"outlook\", \"outlook\", \"outlook\", \"outlook\", \"outlook\", \"outlook\", \"outlook\", \"outlook\", \"outlook\", \"outsid\", \"outsid\", \"outsid\", \"outsid\", \"outsid\", \"outsid\", \"outsid\", \"owner\", \"owner\", \"owner\", \"owner\", \"owner\", \"owner\", \"owner\", \"owner\", \"owner\", \"owner\", \"owner\", \"owner\", \"page\", \"page\", \"page\", \"page\", \"page\", \"page\", \"page\", \"page\", \"page\", \"page\", \"page\", \"page\", \"pallet\", \"pallet\", \"pallet\", \"pallet\", \"pallet\", \"pallet\", \"pallet\", \"pallet\", \"pallet\", \"paper\", \"paper\", \"paper\", \"paper\", \"paper\", \"paper\", \"paper\", \"paper\", \"pass\", \"pass\", \"pass\", \"pass\", \"pass\", \"pass\", \"pass\", \"pass\", \"password\", \"password\", \"password\", \"password\", \"password\", \"password\", \"password\", \"password\", \"password\", \"password\", \"password\", \"password\", \"passwordreset\", \"passwordreset\", \"passwordreset\", \"payrol\", \"payrol\", \"payrol\", \"payrol\", \"payrol\", \"payrol\", \"pcctv\", \"pcctv\", \"pcctv\", \"pcctv\", \"pcctv\", \"pend\", \"pend\", \"pend\", \"pend\", \"pend\", \"pend\", \"pend\", \"pend\", \"pend\", \"pend\", \"pend\", \"peopl\", \"peopl\", \"peopl\", \"peopl\", \"percent\", \"percent\", \"percent\", \"percent\", \"percent\", \"percent\", \"percent\", \"percent\", \"perform\", \"perform\", \"perform\", \"perform\", \"perform\", \"perform\", \"perform\", \"perform\", \"perform\", \"perform\", \"perform\", \"perform\", \"perman\", \"perman\", \"perman\", \"perman\", \"perman\", \"perman\", \"perman\", \"phish\", \"phish\", \"phish\", \"phish\", \"phone\", \"phone\", \"phone\", \"phone\", \"phone\", \"phone\", \"phone\", \"phone\", \"phone\", \"phone\", \"phone\", \"phone\", \"ping\", \"ping\", \"ping\", \"ping\", \"ping\", \"ping\", \"ping\", \"ping\", \"ping\", \"ping\", \"place\", \"place\", \"place\", \"place\", \"place\", \"plan\", \"plan\", \"plan\", \"plan\", \"plan\", \"plan\", \"plan\", \"plan\", \"plant\", \"plant\", \"plant\", \"plant\", \"plant\", \"plant\", \"plant\", \"plant\", \"plant\", \"plant\", \"plant\", \"plant\", \"plastic\", \"plastic\", \"plastic\", \"plastic\", \"plastic\", \"plastic\", \"polici\", \"polici\", \"polici\", \"polici\", \"polici\", \"polici\", \"polici\", \"polici\", \"polici\", \"polici\", \"polyol\", \"polyol\", \"polyol\", \"polyol\", \"polyol\", \"poor\", \"poor\", \"poor\", \"poor\", \"poor\", \"poor\", \"poor\", \"popup\", \"popup\", \"popup\", \"popup\", \"popup\", \"port\", \"port\", \"port\", \"port\", \"port\", \"port\", \"port\", \"port\", \"port\", \"port\", \"post\", \"post\", \"post\", \"post\", \"post\", \"post\", \"post\", \"power\", \"power\", \"power\", \"power\", \"power\", \"power\", \"power\", \"power\", \"power\", \"powerpoint\", \"powerpoint\", \"powerpoint\", \"powerpoint\", \"powerpoint\", \"previou\", \"previou\", \"previou\", \"previou\", \"previou\", \"previou\", \"previou\", \"previou\", \"previou\", \"previou\", \"previou\", \"principalnam\", \"principalnam\", \"principalnam\", \"print\", \"print\", \"print\", \"print\", \"print\", \"print\", \"print\", \"print\", \"print\", \"print\", \"print\", \"printer\", \"printer\", \"printer\", \"printer\", \"printer\", \"printer\", \"printer\", \"printer\", \"printer\", \"printer\", \"printer\", \"printer\", \"prioriti\", \"prioriti\", \"prioriti\", \"prioriti\", \"prioriti\", \"prioriti\", \"prioriti\", \"problemid\", \"problemid\", \"problemid\", \"processor\", \"processor\", \"processor\", \"processor\", \"processor\", \"processor\", \"processor\", \"processor\", \"processor\", \"processor\", \"prod\", \"prod\", \"prod\", \"prod\", \"prod\", \"prod\", \"prod\", \"prod\", \"prod\", \"product\", \"product\", \"product\", \"product\", \"product\", \"product\", \"product\", \"product\", \"product\", \"product\", \"product\", \"product\", \"profil\", \"profil\", \"profil\", \"profil\", \"profil\", \"profil\", \"profil\", \"profil\", \"profil\", \"profil\", \"profil\", \"program\", \"program\", \"program\", \"program\", \"program\", \"program\", \"program\", \"program\", \"program\", \"program\", \"program\", \"protect\", \"protect\", \"protect\", \"protect\", \"protect\", \"protect\", \"protect\", \"protect\", \"provid\", \"provid\", \"provid\", \"provid\", \"provid\", \"provid\", \"provid\", \"provid\", \"provid\", \"provid\", \"provid\", \"provid\", \"public\", \"public\", \"qualiti\", \"qualiti\", \"qualiti\", \"qualiti\", \"qualiti\", \"qualiti\", \"qualiti\", \"qualiti\", \"qualiti\", \"quantiti\", \"quantiti\", \"quantiti\", \"quantiti\", \"quantiti\", \"quantiti\", \"quantiti\", \"quantiti\", \"queri\", \"queri\", \"queri\", \"queri\", \"queri\", \"queri\", \"queue\", \"queue\", \"queue\", \"queue\", \"queue\", \"queue\", \"queue\", \"queue\", \"quit\", \"quit\", \"quit\", \"quit\", \"radio\", \"radio\", \"radio\", \"radio\", \"radio\", \"radio\", \"rais\", \"rais\", \"rais\", \"rais\", \"rais\", \"rais\", \"rais\", \"rais\", \"rais\", \"rais\", \"rais\", \"reader\", \"reader\", \"reader\", \"reader\", \"reader\", \"reader\", \"reader\", \"real\", \"real\", \"real\", \"real\", \"receiv\", \"receiv\", \"receiv\", \"receiv\", \"receiv\", \"receiv\", \"receiv\", \"receiv\", \"receiv\", \"receiv\", \"receiv\", \"receiv\", \"reconnect\", \"reconnect\", \"reconnect\", \"refer\", \"refer\", \"refer\", \"refer\", \"refer\", \"refer\", \"refer\", \"refer\", \"refer\", \"refer\", \"refer\", \"refer\", \"regular\", \"regular\", \"regular\", \"regular\", \"reinstal\", \"reinstal\", \"reinstal\", \"reinstal\", \"reinstal\", \"reinstal\", \"reject\", \"reject\", \"reject\", \"reject\", \"reject\", \"reject\", \"reject\", \"reject\", \"reject\", \"releas\", \"releas\", \"releas\", \"releas\", \"releas\", \"releas\", \"releas\", \"releas\", \"releas\", \"releas\", \"releas\", \"releas\", \"relev\", \"relev\", \"relev\", \"relev\", \"relev\", \"reliabl\", \"reliabl\", \"reliabl\", \"reliabl\", \"reliabl\", \"reliabl\", \"repeat\", \"repeat\", \"repeat\", \"repeat\", \"repeat\", \"repeat\", \"repeat\", \"repeat\", \"repeat\", \"repeat\", \"repeat\", \"repeatcount\", \"repeatcount\", \"repeatcount\", \"repeatedli\", \"repeatedli\", \"repeatedli\", \"replac\", \"replac\", \"replac\", \"replac\", \"replac\", \"replac\", \"replac\", \"replac\", \"replac\", \"replac\", \"replac\", \"replac\", \"repli\", \"repli\", \"repli\", \"repli\", \"repli\", \"repli\", \"repli\", \"repli\", \"report\", \"report\", \"report\", \"report\", \"report\", \"report\", \"report\", \"report\", \"report\", \"report\", \"report\", \"report\", \"repres\", \"repres\", \"repres\", \"repres\", \"repres\", \"request\", \"request\", \"request\", \"request\", \"request\", \"request\", \"request\", \"request\", \"request\", \"request\", \"request\", \"request\", \"requir\", \"requir\", \"requir\", \"requir\", \"requir\", \"requir\", \"requir\", \"requir\", \"requir\", \"requir\", \"requir\", \"requir\", \"reset\", \"reset\", \"reset\", \"reset\", \"reset\", \"reset\", \"reset\", \"reset\", \"reset\", \"reset\", \"reset\", \"reset\", \"resolut\", \"resolut\", \"resolut\", \"resolut\", \"resolut\", \"resolut\", \"resolutionst\", \"resolutionst\", \"resolutionst\", \"resolv\", \"resolv\", \"resolv\", \"resolv\", \"resolv\", \"resolv\", \"resolv\", \"resolv\", \"resolv\", \"resolv\", \"resolv\", \"resolv\", \"resolvedbi\", \"resolvedbi\", \"resolvedbi\", \"respond\", \"respond\", \"respond\", \"respond\", \"respond\", \"respond\", \"respond\", \"respond\", \"respond\", \"respond\", \"respond\", \"respond\", \"rmshostnam\", \"rmshostnam\", \"rmshostnam\", \"role\", \"role\", \"role\", \"role\", \"role\", \"role\", \"role\", \"role\", \"role\", \"role\", \"role\", \"role\", \"room\", \"room\", \"room\", \"room\", \"room\", \"room\", \"room\", \"room\", \"room\", \"run\", \"run\", \"run\", \"run\", \"run\", \"run\", \"run\", \"run\", \"run\", \"run\", \"run\", \"runtim\", \"runtim\", \"runtim\", \"runtim\", \"runtim\", \"sadara\", \"sadara\", \"sadara\", \"sadara\", \"sadara\", \"sadara\", \"sadara\", \"sadara\", \"sadara\", \"sadara\", \"sadara\", \"sadara\", \"sadarachemco\", \"sadarachemco\", \"sadarachemco\", \"sadarachemco\", \"sadarachemco\", \"sadarachemco\", \"sadarachemco\", \"sadarachemco\", \"safeti\", \"safeti\", \"safeti\", \"safeti\", \"safeti\", \"safeti\", \"safeti\", \"safeti\", \"safeti\", \"save\", \"save\", \"save\", \"save\", \"save\", \"save\", \"save\", \"save\", \"save\", \"save\", \"save\", \"save\", \"scom\", \"scom\", \"scom\", \"scom\", \"scom_alert\", \"scom_alert\", \"scom_alert\", \"scomobjectnod\", \"scomobjectnod\", \"scomobjectnod\", \"scomvers\", \"scomvers\", \"scomvers\", \"screen\", \"screen\", \"screen\", \"screen\", \"screen\", \"screen\", \"screen\", \"screen\", \"screen\", \"screen\", \"screen\", \"screen\", \"screenshot\", \"screenshot\", \"screenshot\", \"screenshot\", \"screenshot\", \"screenshot\", \"screenshot\", \"screenshot\", \"screenshot\", \"screenshot\", \"screenshot\", \"screenshot\", \"sdpc\", \"sdpc\", \"sdpc\", \"sdpc\", \"sdpc\", \"sdpc\", \"sdpc\", \"seal\", \"seal\", \"seal\", \"seal\", \"seal\", \"secur\", \"secur\", \"secur\", \"secur\", \"secur\", \"secur\", \"secur\", \"secur\", \"secur\", \"secur\", \"secur\", \"secur\", \"seek\", \"seek\", \"seek\", \"seek\", \"send\", \"send\", \"send\", \"send\", \"send\", \"send\", \"send\", \"send\", \"send\", \"send\", \"send\", \"send\", \"server\", \"server\", \"server\", \"server\", \"server\", \"server\", \"server\", \"server\", \"server\", \"server\", \"server\", \"server\", \"servic\", \"servic\", \"servic\", \"servic\", \"servic\", \"servic\", \"servic\", \"servic\", \"servic\", \"servic\", \"servic\", \"servic\", \"setup\", \"setup\", \"setup\", \"setup\", \"setup\", \"setup\", \"setup\", \"sever\", \"sever\", \"sever\", \"sftp\", \"sftp\", \"sftp\", \"sftp\", \"sftp\", \"sftpuser\", \"sftpuser\", \"sftpuser\", \"sftpuser\", \"sharepoint\", \"sharepoint\", \"sharepoint\", \"sharepoint\", \"sharepoint\", \"sharepoint\", \"sharepoint\", \"sharepoint\", \"sharepoint\", \"sharepoint\", \"sharepoint\", \"shoot\", \"shoot\", \"shoot\", \"shoot\", \"shoot\", \"shoot\", \"shoot\", \"shoot\", \"shoot\", \"shoot\", \"shoot\", \"shop\", \"shop\", \"shop\", \"shop\", \"shop\", \"show\", \"show\", \"show\", \"show\", \"show\", \"show\", \"show\", \"show\", \"show\", \"show\", \"show\", \"show\", \"shut\", \"shut\", \"shut\", \"shut\", \"shut\", \"shut\", \"shutdown\", \"shutdown\", \"shutdown\", \"shutdown\", \"shutdown\", \"shutdown\", \"shutdown\", \"sit\", \"sit\", \"sit\", \"sit\", \"sit\", \"sit\", \"sit\", \"sit\", \"sitenam\", \"sitenam\", \"sitenam\", \"sitepag\", \"sitepag\", \"sitepag\", \"sitescop\", \"sitescop\", \"sitescop\", \"sitescop\", \"sitescop\", \"sitescop\", \"sitescop\", \"sitescop\", \"sitescop\", \"sitescop\", \"skype\", \"skype\", \"skype\", \"skype\", \"skype\", \"skype\", \"skype\", \"skype\", \"skype\", \"skype\", \"skype\", \"skype\", \"slow\", \"slow\", \"slow\", \"slow\", \"slow\", \"slow\", \"slow\", \"slow\", \"slow\", \"slow\", \"slow\", \"slow\", \"slpf\", \"slpf\", \"slpf\", \"slpf\", \"slpf\", \"slpf\", \"slpf\", \"snap\", \"snap\", \"snap\", \"snap\", \"snap\", \"snap\", \"snap\", \"snap\", \"snap\", \"snapshot\", \"snapshot\", \"snapshot\", \"snapshot\", \"snapshot\", \"snapshot\", \"snapshot\", \"snapshot\", \"snow\", \"snow\", \"snow\", \"snow\", \"snow\", \"soft\", \"soft\", \"soft\", \"soft\", \"soft\", \"soft\", \"soft\", \"soft\", \"soft\", \"softwar\", \"softwar\", \"softwar\", \"softwar\", \"softwar\", \"softwar\", \"softwar\", \"softwar\", \"softwar\", \"softwar\", \"softwar\", \"south\", \"south\", \"south\", \"south\", \"south\", \"space\", \"space\", \"space\", \"space\", \"space\", \"space\", \"space\", \"space\", \"space\", \"space\", \"speaker\", \"speaker\", \"speaker\", \"speaker\", \"speaker\", \"speaker\", \"speaker\", \"specif\", \"specif\", \"specif\", \"specif\", \"specif\", \"specif\", \"specif\", \"specif\", \"specif\", \"specif\", \"spill\", \"spill\", \"spill\", \"spill\", \"spill\", \"spjblz\", \"spjblz\", \"spjblz\", \"spjblz\", \"spjblz\", \"spjblz\", \"sqlserver\", \"sqlserver\", \"sqlserver\", \"sqlserver\", \"sspm\", \"sspm\", \"sspm\", \"sspm\", \"sspm\", \"sspm\", \"statu\", \"statu\", \"statu\", \"statu\", \"statu\", \"statu\", \"statu\", \"statu\", \"statu\", \"statu\", \"statu\", \"statu\", \"stock\", \"stock\", \"stock\", \"stock\", \"submit\", \"submit\", \"submit\", \"submit\", \"submit\", \"submit\", \"submit\", \"submit\", \"submit\", \"success\", \"success\", \"success\", \"success\", \"success\", \"success\", \"success\", \"success\", \"success\", \"success\", \"success\", \"suffer\", \"suffer\", \"suheel\", \"suheel\", \"suppli\", \"suppli\", \"suppli\", \"suppli\", \"supplier\", \"supplier\", \"supplier\", \"supplier\", \"supplier\", \"supplier\", \"supplier\", \"support\", \"support\", \"support\", \"support\", \"support\", \"support\", \"support\", \"support\", \"support\", \"support\", \"support\", \"support\", \"switch\", \"switch\", \"switch\", \"switch\", \"switch\", \"switch\", \"switch\", \"switch\", \"switch\", \"switch\", \"symantec\", \"symantec\", \"symantec\", \"symantec\", \"symantec\", \"symantec\", \"symantec\", \"symantec\", \"symantec\", \"symantec\", \"symantec\", \"sync\", \"sync\", \"sync\", \"sync\", \"sync\", \"sync\", \"sync\", \"sync\", \"sync\", \"sync\", \"talk\", \"talk\", \"talk\", \"talk\", \"talk\", \"task\", \"task\", \"task\", \"task\", \"task\", \"task\", \"task\", \"task\", \"task\", \"task\", \"task\", \"task\", \"team\", \"team\", \"team\", \"team\", \"team\", \"team\", \"team\", \"team\", \"team\", \"team\", \"team\", \"team\", \"tetra\", \"tetra\", \"tetra\", \"tetra\", \"tetra\", \"tetra\", \"text\", \"text\", \"text\", \"text\", \"text\", \"text\", \"text\", \"text\", \"thank\", \"thank\", \"thank\", \"thank\", \"thank\", \"thank\", \"thank\", \"thank\", \"thank\", \"thank\", \"thank\", \"thank\", \"threshold\", \"threshold\", \"threshold\", \"threshold\", \"threshold\", \"threshold\", \"thrift\", \"thrift\", \"thrift\", \"thrift\", \"thursday\", \"thursday\", \"thursday\", \"thursday\", \"thursday\", \"thursday\", \"ticket\", \"ticket\", \"ticket\", \"ticket\", \"ticket\", \"ticket\", \"ticket\", \"ticket\", \"ticket\", \"ticket\", \"ticket\", \"ticket\", \"ticketid\", \"ticketid\", \"ticketid\", \"time\", \"time\", \"time\", \"time\", \"time\", \"time\", \"time\", \"time\", \"time\", \"time\", \"time\", \"time\", \"timead\", \"timead\", \"timead\", \"timerais\", \"timerais\", \"timerais\", \"timeresolv\", \"timeresolv\", \"timeresolv\", \"titl\", \"titl\", \"titl\", \"titl\", \"titl\", \"titl\", \"titl\", \"titl\", \"titu\", \"titu\", \"titu\", \"titu\", \"titu\", \"tmac\", \"tmac\", \"tmac\", \"tmac\", \"tmac\", \"tmac\", \"tmac\", \"tmac\", \"tmac\", \"tmac\", \"tmac\", \"tmpcab\", \"tmpcab\", \"tmpcab\", \"tmpcab\", \"tmpcab\", \"tmpcab\", \"track\", \"track\", \"track\", \"track\", \"train\", \"train\", \"train\", \"train\", \"train\", \"train\", \"train\", \"train\", \"train\", \"travel\", \"travel\", \"travel\", \"travel\", \"tray\", \"tray\", \"tray\", \"tray\", \"tray\", \"tray\", \"tri\", \"tri\", \"tri\", \"tri\", \"tri\", \"tri\", \"tri\", \"tri\", \"tri\", \"tri\", \"tri\", \"tri\", \"troubleshoot\", \"troubleshoot\", \"troubleshoot\", \"troubleshoot\", \"troubleshoot\", \"troubleshoot\", \"turnaround\", \"turnaround\", \"turnaround\", \"turnaround\", \"turnaround\", \"turnaround\", \"turnstil\", \"turnstil\", \"turnstil\", \"turnstil\", \"twice\", \"twice\", \"twice\", \"twice\", \"twice\", \"twice\", \"unabl\", \"unabl\", \"unabl\", \"unabl\", \"unabl\", \"unabl\", \"unabl\", \"unabl\", \"unabl\", \"unabl\", \"unabl\", \"unabl\", \"unlock\", \"unlock\", \"unlock\", \"unlock\", \"unlock\", \"unlock\", \"unlock\", \"unlock\", \"unlock\", \"unlock\", \"unlock\", \"unsuccess\", \"unsuccess\", \"unsuccess\", \"unsuccess\", \"unsuccess\", \"updat\", \"updat\", \"updat\", \"updat\", \"updat\", \"updat\", \"updat\", \"updat\", \"updat\", \"updat\", \"updat\", \"updat\", \"urgent\", \"urgent\", \"urgent\", \"urgent\", \"urgent\", \"urgent\", \"urgent\", \"urgent\", \"urgent\", \"urgent\", \"urgent\", \"urgent\", \"usag\", \"usag\", \"usag\", \"usag\", \"usag\", \"usag\", \"usag\", \"user\", \"user\", \"user\", \"user\", \"user\", \"user\", \"user\", \"user\", \"user\", \"user\", \"user\", \"user\", \"util\", \"util\", \"util\", \"util\", \"util\", \"util\", \"util\", \"util\", \"util\", \"util\", \"util\", \"util\", \"utliz\", \"utliz\", \"utliz\", \"utliz\", \"utliz\", \"vacat\", \"vacat\", \"vacat\", \"vacat\", \"vacat\", \"vacat\", \"vacat\", \"valu\", \"valu\", \"valu\", \"valu\", \"valu\", \"valu\", \"valu\", \"valu\", \"valu\", \"valu\", \"video\", \"video\", \"video\", \"video\", \"video\", \"video\", \"video\", \"video\", \"video\", \"voic\", \"voic\", \"voic\", \"voic\", \"voic\", \"volgroup\", \"volgroup\", \"volgroup\", \"volgroup\", \"volgroup\", \"volgroup\", \"vpnc\", \"vpnc\", \"vpnc\", \"vpnc\", \"vpnc\", \"vspaim\", \"vspaim\", \"vspaim\", \"vspaim\", \"vspaim\", \"vsphi\", \"vsphi\", \"vsphi\", \"vsphi\", \"vsphi\", \"vsphi\", \"vsphi\", \"vsphi\", \"vspvbp\", \"vspvbp\", \"vspvbp\", \"vspvbp\", \"warn\", \"warn\", \"warn\", \"warn\", \"warn\", \"warn\", \"warn\", \"warn\", \"warn\", \"wast\", \"wast\", \"wast\", \"wdrt\", \"wdrt\", \"wdrt\", \"wdrt\", \"wdrt\", \"wdrt\", \"wdrt\", \"wdrt\", \"wdrt\", \"wdrt\", \"window\", \"window\", \"window\", \"window\", \"window\", \"window\", \"window\", \"window\", \"window\", \"window\", \"window\", \"window\", \"wipro\", \"wipro\", \"wipro\", \"wipro\", \"wipro\", \"wipro\", \"wipro\", \"wipro\", \"wipro\", \"wipro\", \"wire\", \"wire\", \"wire\", \"wire\", \"wire\", \"wire\", \"wireless\", \"wireless\", \"wireless\", \"wireless\", \"wireless\", \"wireless\", \"work\", \"work\", \"work\", \"work\", \"work\", \"work\", \"work\", \"work\", \"work\", \"work\", \"work\", \"work\", \"workflow\", \"workflow\", \"workflow\", \"workflow\", \"workflow\", \"workflow\", \"workflow\", \"workflow\", \"workflow\", \"workflow\", \"workflow\", \"xerox\", \"xerox\", \"xerox\", \"xerox\", \"xerox\", \"xerox\", \"xerox\", \"xerox\", \"xerox\", \"xerox\", \"xerox\", \"year\", \"year\", \"year\", \"year\", \"year\", \"year\", \"year\", \"year\", \"year\", \"year\"]}, \"R\": 30, \"lambda.step\": 0.01, \"plot.opts\": {\"xlab\": \"PC1\", \"ylab\": \"PC2\"}, \"topic.order\": [10, 12, 1, 5, 6, 2, 3, 7, 8, 9, 11, 4]};\n",
              "\n",
              "function LDAvis_load_lib(url, callback){\n",
              "  var s = document.createElement('script');\n",
              "  s.src = url;\n",
              "  s.async = true;\n",
              "  s.onreadystatechange = s.onload = callback;\n",
              "  s.onerror = function(){console.warn(\"failed to load library \" + url);};\n",
              "  document.getElementsByTagName(\"head\")[0].appendChild(s);\n",
              "}\n",
              "\n",
              "if(typeof(LDAvis) !== \"undefined\"){\n",
              "   // already loaded: just create the visualization\n",
              "   !function(LDAvis){\n",
              "       new LDAvis(\"#\" + \"ldavis_el1683140121350913144204258636\", ldavis_el1683140121350913144204258636_data);\n",
              "   }(LDAvis);\n",
              "}else if(typeof define === \"function\" && define.amd){\n",
              "   // require.js is available: use it to load d3/LDAvis\n",
              "   require.config({paths: {d3: \"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min\"}});\n",
              "   require([\"d3\"], function(d3){\n",
              "      window.d3 = d3;\n",
              "      LDAvis_load_lib(\"https://cdn.rawgit.com/bmabey/pyLDAvis/files/ldavis.v1.0.0.js\", function(){\n",
              "        new LDAvis(\"#\" + \"ldavis_el1683140121350913144204258636\", ldavis_el1683140121350913144204258636_data);\n",
              "      });\n",
              "    });\n",
              "}else{\n",
              "    // require.js not available: dynamically load d3 & LDAvis\n",
              "    LDAvis_load_lib(\"https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js\", function(){\n",
              "         LDAvis_load_lib(\"https://cdn.rawgit.com/bmabey/pyLDAvis/files/ldavis.v1.0.0.js\", function(){\n",
              "                 new LDAvis(\"#\" + \"ldavis_el1683140121350913144204258636\", ldavis_el1683140121350913144204258636_data);\n",
              "            })\n",
              "         });\n",
              "}\n",
              "</script>"
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 145
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RXONV_w24F0-",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "from collections import OrderedDict\n",
        "data_lda = {i: OrderedDict(lda_model.show_topic(i,25)) for i in range(12)}"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_lsJrl8T60cT",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 52
        },
        "outputId": "8708f0f3-2628-4710-816b-eb640785d562"
      },
      "source": [
        "\n",
        "import pandas as pd\n",
        "\n",
        "df_lda = pd.DataFrame(data_lda)\n",
        "print(df_lda.shape)\n",
        "df_lda = df_lda.fillna(0).T\n",
        "print(df_lda.shape)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "(153, 12)\n",
            "(12, 153)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kU_vhC7u60kN",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 466
        },
        "outputId": "2852fca8-c616-4a28-a9b8-adcf73207666"
      },
      "source": [
        "df_lda\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>attach</th>\n",
              "      <th>skype</th>\n",
              "      <th>open</th>\n",
              "      <th>abl</th>\n",
              "      <th>refer</th>\n",
              "      <th>request</th>\n",
              "      <th>meet</th>\n",
              "      <th>user</th>\n",
              "      <th>error</th>\n",
              "      <th>laptop</th>\n",
              "      <th>work</th>\n",
              "      <th>unabl</th>\n",
              "      <th>need</th>\n",
              "      <th>screenshot</th>\n",
              "      <th>window</th>\n",
              "      <th>screen</th>\n",
              "      <th>sadara</th>\n",
              "      <th>creat</th>\n",
              "      <th>kindli</th>\n",
              "      <th>show</th>\n",
              "      <th>approv</th>\n",
              "      <th>access</th>\n",
              "      <th>shoot</th>\n",
              "      <th>thank</th>\n",
              "      <th>outlook</th>\n",
              "      <th>file</th>\n",
              "      <th>chang</th>\n",
              "      <th>jbldcvspdb</th>\n",
              "      <th>order</th>\n",
              "      <th>statu</th>\n",
              "      <th>team</th>\n",
              "      <th>updat</th>\n",
              "      <th>drive</th>\n",
              "      <th>dear</th>\n",
              "      <th>disk</th>\n",
              "      <th>fault</th>\n",
              "      <th>occur</th>\n",
              "      <th>percent</th>\n",
              "      <th>complet</th>\n",
              "      <th>issu</th>\n",
              "      <th>...</th>\n",
              "      <th>fail</th>\n",
              "      <th>center</th>\n",
              "      <th>connect</th>\n",
              "      <th>softwar</th>\n",
              "      <th>server</th>\n",
              "      <th>sharepoint</th>\n",
              "      <th>lock</th>\n",
              "      <th>monitor</th>\n",
              "      <th>sitescop</th>\n",
              "      <th>phone</th>\n",
              "      <th>ping</th>\n",
              "      <th>desk</th>\n",
              "      <th>login</th>\n",
              "      <th>client</th>\n",
              "      <th>network</th>\n",
              "      <th>jsbc</th>\n",
              "      <th>microsoftonlin</th>\n",
              "      <th>devic</th>\n",
              "      <th>activ</th>\n",
              "      <th>offic</th>\n",
              "      <th>help</th>\n",
              "      <th>support</th>\n",
              "      <th>resolv</th>\n",
              "      <th>employe</th>\n",
              "      <th>requir</th>\n",
              "      <th>licens</th>\n",
              "      <th>space</th>\n",
              "      <th>interfac</th>\n",
              "      <th>jblb</th>\n",
              "      <th>tmpcab</th>\n",
              "      <th>accept</th>\n",
              "      <th>reset</th>\n",
              "      <th>free</th>\n",
              "      <th>date</th>\n",
              "      <th>block</th>\n",
              "      <th>home</th>\n",
              "      <th>build</th>\n",
              "      <th>internet</th>\n",
              "      <th>room</th>\n",
              "      <th>cabl</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.051678</td>\n",
              "      <td>0.02724</td>\n",
              "      <td>0.022024</td>\n",
              "      <td>0.019164</td>\n",
              "      <td>0.018407</td>\n",
              "      <td>0.017190</td>\n",
              "      <td>0.016965</td>\n",
              "      <td>0.016130</td>\n",
              "      <td>0.015215</td>\n",
              "      <td>0.015206</td>\n",
              "      <td>0.014439</td>\n",
              "      <td>0.014375</td>\n",
              "      <td>0.011548</td>\n",
              "      <td>0.011483</td>\n",
              "      <td>0.011142</td>\n",
              "      <td>0.010039</td>\n",
              "      <td>0.009912</td>\n",
              "      <td>0.009743</td>\n",
              "      <td>0.009431</td>\n",
              "      <td>0.009343</td>\n",
              "      <td>0.009129</td>\n",
              "      <td>0.008816</td>\n",
              "      <td>0.008039</td>\n",
              "      <td>0.007619</td>\n",
              "      <td>0.007589</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.010641</td>\n",
              "      <td>0.008020</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.016007</td>\n",
              "      <td>0.010869</td>\n",
              "      <td>0.016246</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.041020</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.008900</td>\n",
              "      <td>0.012932</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.009041</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.037968</td>\n",
              "      <td>0.017140</td>\n",
              "      <td>0.014548</td>\n",
              "      <td>0.013554</td>\n",
              "      <td>0.013071</td>\n",
              "      <td>0.011729</td>\n",
              "      <td>0.011701</td>\n",
              "      <td>0.010883</td>\n",
              "      <td>0.009498</td>\n",
              "      <td>0.009487</td>\n",
              "      <td>0.009181</td>\n",
              "      <td>0.008569</td>\n",
              "      <td>0.007919</td>\n",
              "      <td>0.007766</td>\n",
              "      <td>0.007622</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.009312</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.007029</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.033051</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.019572</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.019499</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.007748</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.023210</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.007124</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.039581</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.015654</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.020588</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.009973</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.008777</td>\n",
              "      <td>0.019640</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.010679</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.010282</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.032353</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>0.014151</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.053352</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.011505</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.015984</td>\n",
              "      <td>0.022993</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.006866</td>\n",
              "      <td>0.011485</td>\n",
              "      <td>0.009048</td>\n",
              "      <td>0.009846</td>\n",
              "      <td>0.022446</td>\n",
              "      <td>0.009594</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.010282</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.040172</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>0.015779</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.017211</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.006424</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.036629</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.037075</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.007292</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.068158</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.012582</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.005950</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.009166</td>\n",
              "      <td>...</td>\n",
              "      <td>0.017261</td>\n",
              "      <td>0.010288</td>\n",
              "      <td>0.009444</td>\n",
              "      <td>0.009359</td>\n",
              "      <td>0.009165</td>\n",
              "      <td>0.005774</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.031874</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.011709</td>\n",
              "      <td>0.015578</td>\n",
              "      <td>0.009710</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.012890</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.049541</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.018013</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.008173</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.011506</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.014181</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.022135</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.039338</td>\n",
              "      <td>0.014454</td>\n",
              "      <td>0.012815</td>\n",
              "      <td>0.010487</td>\n",
              "      <td>0.007678</td>\n",
              "      <td>0.007425</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>0.013759</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.012558</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.009859</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.033555</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.011004</td>\n",
              "      <td>0.014291</td>\n",
              "      <td>0.016284</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.014831</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.021217</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.011862</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.022218</td>\n",
              "      <td>...</td>\n",
              "      <td>0.016814</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.046111</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.049120</td>\n",
              "      <td>0.027089</td>\n",
              "      <td>0.018966</td>\n",
              "      <td>0.01217</td>\n",
              "      <td>0.010467</td>\n",
              "      <td>0.010125</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>0.025212</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.009610</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.026796</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.009255</td>\n",
              "      <td>0.008229</td>\n",
              "      <td>0.016749</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.020223</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.011531</td>\n",
              "      <td>0.056371</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.008679</td>\n",
              "      <td>0.009815</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.017787</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.018912</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.017703</td>\n",
              "      <td>0.010358</td>\n",
              "      <td>0.009393</td>\n",
              "      <td>0.009353</td>\n",
              "      <td>0.008866</td>\n",
              "      <td>0.008678</td>\n",
              "      <td>0.008199</td>\n",
              "      <td>0.007876</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>0.011582</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.016020</td>\n",
              "      <td>0.028389</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.018525</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.014481</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.014898</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.011750</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.010403</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.012242</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.015775</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.010168</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.014604</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.011654</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.015422</td>\n",
              "      <td>0.015354</td>\n",
              "      <td>0.01411</td>\n",
              "      <td>0.011654</td>\n",
              "      <td>0.010982</td>\n",
              "      <td>0.010731</td>\n",
              "      <td>0.009848</td>\n",
              "      <td>0.009697</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00916</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.008091</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.018560</td>\n",
              "      <td>0.049545</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.033820</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.008666</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.010930</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.009245</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.008363</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.024687</td>\n",
              "      <td>...</td>\n",
              "      <td>0.007639</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.037063</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.011135</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.018260</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.011765</td>\n",
              "      <td>0.011359</td>\n",
              "      <td>0.009087</td>\n",
              "      <td>0.00886</td>\n",
              "      <td>0.008341</td>\n",
              "      <td>0.007994</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>12 rows × 153 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "      attach    skype      open  ...  internet      room      cabl\n",
              "0   0.051678  0.02724  0.022024  ...   0.00000  0.000000  0.000000\n",
              "1   0.000000  0.00000  0.010641  ...   0.00000  0.000000  0.000000\n",
              "2   0.000000  0.00000  0.000000  ...   0.00000  0.000000  0.000000\n",
              "3   0.015654  0.00000  0.000000  ...   0.00000  0.000000  0.000000\n",
              "4   0.000000  0.00000  0.000000  ...   0.00000  0.000000  0.000000\n",
              "5   0.014151  0.00000  0.000000  ...   0.00000  0.000000  0.000000\n",
              "6   0.015779  0.00000  0.017211  ...   0.00000  0.000000  0.000000\n",
              "7   0.000000  0.00000  0.000000  ...   0.00000  0.000000  0.000000\n",
              "8   0.013759  0.00000  0.000000  ...   0.00000  0.000000  0.000000\n",
              "9   0.025212  0.00000  0.000000  ...   0.00000  0.000000  0.000000\n",
              "10  0.011582  0.00000  0.000000  ...   0.00000  0.000000  0.000000\n",
              "11  0.000000  0.00916  0.000000  ...   0.00886  0.008341  0.007994\n",
              "\n",
              "[12 rows x 153 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 148
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SnwDV-8N60gy",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 928
        },
        "outputId": "7c310e7f-93e5-48e6-82dd-2bf9e1395366"
      },
      "source": [
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "%matplotlib inline\n",
        "\n",
        "g=sns.clustermap(df_lda.corr(), center=0, cmap=\"RdBu\", metric='cosine', linewidths=.75, figsize=(12, 12))\n",
        "plt.setp(g.ax_heatmap.yaxis.get_majorticklabels(), rotation=0)\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/seaborn/matrix.py:649: UserWarning: Clustering large matrix with scipy. Installing `fastcluster` may give better performance.\n",
            "  warnings.warn(msg)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 864x864 with 4 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "aTpuJRZp60Zy",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "MAX_LENGTH = 500\n",
        "tokenizer = Tokenizer()\n",
        "tokenizer.fit_on_texts(df.description.values)\n",
        "post_seq = tokenizer.texts_to_sequences(df.description.values)\n",
        "post_seq_padded = pad_sequences(post_seq, maxlen=MAX_LENGTH)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "a9KdDjPC60V2",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "X_train, X_test, y_train, y_test = train_test_split(post_seq_padded, y, test_size=0.25,random_state=42)\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "44JbseGu23px",
        "colab_type": "text"
      },
      "source": [
        "**Naive Bayes**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "C2ei8ynf0fo8",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "from sklearn.naive_bayes import MultinomialNB\n",
        "clf = MultinomialNB().fit(X_train, y_train)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_S5KHUq8gtQ0",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "W8tYKmFG0ftQ",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "pred = clf.predict(X_test)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tGfxBK1q0fmI",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "0963b452-453d-4b30-dd2d-8b310cb053f4"
      },
      "source": [
        "clf.score(X_test, y_test)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.09047792776358993"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 154
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GyGzZR6b0fj2",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "23bd8b40-4b42-415d-8922-bae7c8af04d0"
      },
      "source": [
        "pred"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([7, 1, 3, ..., 7, 9, 3], dtype=int8)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 155
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "PZPfnVaj2mhn",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KWBS8DOv2k1V",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "vocab_size = len(tokenizer.word_index) + 1\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "mkLZf6uM3afk",
        "colab_type": "text"
      },
      "source": [
        "**Deep Learning Model**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5ChzDnWM7dYI",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "30d1c9a0-98d6-434c-c974-5f68a947edca"
      },
      "source": [
        "inputs = Input(shape=(MAX_LENGTH, ))\n",
        "embedding_layer = Embedding(vocab_size,\n",
        "                            128,\n",
        "                            input_length=MAX_LENGTH)(inputs)\n",
        "x = Flatten()(embedding_layer)\n",
        "x = Dense(32, activation='relu')(x)\n",
        "\n",
        "predictions = Dense(num_class, activation='softmax')(x)\n",
        "model = Model(inputs=[inputs], outputs=predictions)\n",
        "model.compile(optimizer='adam',\n",
        "              loss='categorical_crossentropy',\n",
        "              metrics=['acc'])\n",
        "\n",
        "model.summary()\n",
        "filepath=\"weights-simple.hdf5\"\n",
        "checkpointer = ModelCheckpoint(filepath, monitor='val_acc', verbose=1, save_best_only=True, mode='max')\n",
        "history = model.fit([X_train], batch_size=64, y=to_categorical(y_train), verbose=1, validation_split=0.25, \n",
        "          shuffle=True, epochs=10, callbacks=[checkpointer])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"functional_1\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "input_1 (InputLayer)         [(None, 500)]             0         \n",
            "_________________________________________________________________\n",
            "embedding (Embedding)        (None, 500, 128)          2154240   \n",
            "_________________________________________________________________\n",
            "flatten (Flatten)            (None, 64000)             0         \n",
            "_________________________________________________________________\n",
            "dense (Dense)                (None, 32)                2048032   \n",
            "_________________________________________________________________\n",
            "dense_1 (Dense)              (None, 12)                396       \n",
            "=================================================================\n",
            "Total params: 4,202,668\n",
            "Trainable params: 4,202,668\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n",
            "Epoch 1/10\n",
            "96/97 [============================>.] - ETA: 0s - loss: 2.3134 - acc: 0.1904\n",
            "Epoch 00001: val_acc improved from -inf to 0.31080, saving model to weights-simple.hdf5\n",
            "97/97 [==============================] - 7s 68ms/step - loss: 2.3127 - acc: 0.1910 - val_loss: 2.1521 - val_acc: 0.3108\n",
            "Epoch 2/10\n",
            "96/97 [============================>.] - ETA: 0s - loss: 1.9225 - acc: 0.3926\n",
            "Epoch 00002: val_acc improved from 0.31080 to 0.39883, saving model to weights-simple.hdf5\n",
            "97/97 [==============================] - 6s 66ms/step - loss: 1.9214 - acc: 0.3930 - val_loss: 1.8129 - val_acc: 0.3988\n",
            "Epoch 3/10\n",
            "96/97 [============================>.] - ETA: 0s - loss: 1.4873 - acc: 0.5254\n",
            "Epoch 00003: val_acc improved from 0.39883 to 0.48833, saving model to weights-simple.hdf5\n",
            "97/97 [==============================] - 6s 65ms/step - loss: 1.4871 - acc: 0.5255 - val_loss: 1.6009 - val_acc: 0.4883\n",
            "Epoch 4/10\n",
            "97/97 [==============================] - ETA: 0s - loss: 1.1218 - acc: 0.6588\n",
            "Epoch 00004: val_acc improved from 0.48833 to 0.54183, saving model to weights-simple.hdf5\n",
            "97/97 [==============================] - 6s 65ms/step - loss: 1.1218 - acc: 0.6588 - val_loss: 1.4739 - val_acc: 0.5418\n",
            "Epoch 5/10\n",
            "96/97 [============================>.] - ETA: 0s - loss: 0.8387 - acc: 0.7578\n",
            "Epoch 00005: val_acc did not improve from 0.54183\n",
            "97/97 [==============================] - 6s 63ms/step - loss: 0.8387 - acc: 0.7580 - val_loss: 1.4734 - val_acc: 0.5399\n",
            "Epoch 6/10\n",
            "96/97 [============================>.] - ETA: 0s - loss: 0.6302 - acc: 0.8341\n",
            "Epoch 00006: val_acc improved from 0.54183 to 0.57831, saving model to weights-simple.hdf5\n",
            "97/97 [==============================] - 6s 65ms/step - loss: 0.6297 - acc: 0.8344 - val_loss: 1.4415 - val_acc: 0.5783\n",
            "Epoch 7/10\n",
            "96/97 [============================>.] - ETA: 0s - loss: 0.4578 - acc: 0.8916\n",
            "Epoch 00007: val_acc improved from 0.57831 to 0.58414, saving model to weights-simple.hdf5\n",
            "97/97 [==============================] - 6s 65ms/step - loss: 0.4569 - acc: 0.8918 - val_loss: 1.4585 - val_acc: 0.5841\n",
            "Epoch 8/10\n",
            "96/97 [============================>.] - ETA: 0s - loss: 0.3339 - acc: 0.9277\n",
            "Epoch 00008: val_acc did not improve from 0.58414\n",
            "97/97 [==============================] - 6s 64ms/step - loss: 0.3332 - acc: 0.9280 - val_loss: 1.5293 - val_acc: 0.5773\n",
            "Epoch 9/10\n",
            "96/97 [============================>.] - ETA: 0s - loss: 0.2499 - acc: 0.9517\n",
            "Epoch 00009: val_acc did not improve from 0.58414\n",
            "97/97 [==============================] - 6s 64ms/step - loss: 0.2502 - acc: 0.9513 - val_loss: 1.5887 - val_acc: 0.5730\n",
            "Epoch 10/10\n",
            "96/97 [============================>.] - ETA: 0s - loss: 0.1918 - acc: 0.9626\n",
            "Epoch 00010: val_acc improved from 0.58414 to 0.58609, saving model to weights-simple.hdf5\n",
            "97/97 [==============================] - 6s 63ms/step - loss: 0.1918 - acc: 0.9625 - val_loss: 1.6492 - val_acc: 0.5861\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "iRmKrK9S7d0G",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 286
        },
        "outputId": "8d05ef58-930f-4fe3-e43d-e15a672cedf9"
      },
      "source": [
        "df1 = pd.DataFrame({'epochs':history.epoch, 'accuracy': history.history['acc'], 'validation_accuracy': history.history['val_acc']})\n",
        "g = sns.pointplot(x=\"epochs\", y=\"accuracy\", data=df1, fit_reg=False)\n",
        "g = sns.pointplot(x=\"epochs\", y=\"validation_accuracy\", data=df1, fit_reg=False, color='green')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "P3pOCUnE7d3Y",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "aff01a65-6413-4208-d144-9e971c774fb9"
      },
      "source": [
        "predicted = model.predict(X_test)\n",
        "predicted = np.argmax(predicted, axis=1)\n",
        "accuracy_score(y_test, predicted)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.591754834002189"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 52
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Rw9nhqcfXwOz",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "a7031241-105d-4c88-b8da-c3eb1d1748cb"
      },
      "source": [
        "pip install mlxtend --upgrade --no-deps\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Requirement already up-to-date: mlxtend in /usr/local/lib/python3.6/dist-packages (0.17.3)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "eYkRdMY3Wqw5",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 490
        },
        "outputId": "f284ab90-ce9e-4aec-ceaa-40231cf87832"
      },
      "source": [
        "from sklearn.metrics import confusion_matrix\n",
        "from sklearn.metrics import plot_confusion_matrix\n",
        "\n",
        "class_names = df.category.values\n",
        "disp = plot_confusion_matrix(clf, X_test, y_test,\n",
        "                                 display_labels=class_names,\n",
        "                                 cmap=plt.cm.Blues)\n",
        "print(disp.confusion_matrix)\n",
        "plt.show()\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[[  0  30   3  74   3   0  20  28  23  28   2   4]\n",
            " [  1  79   9 128   3   0  42  24  26  44   6   1]\n",
            " [  1  56   7 107   4   0  49  24  28  41   2   4]\n",
            " [  0   1   0  31   0   0   9   6   4   5   0   3]\n",
            " [  0  36   6 135  22   0  33  24  22  54   4   3]\n",
            " [  0  29   6  83   1   0  19  41  29  32   1   1]\n",
            " [  0   8   1  36   0   0   8   6   8   9   1   1]\n",
            " [  0  24   4 110   2   0  23  70  26  21   6   7]\n",
            " [  0   9   1  45   1   0  11   9   9   5   0   1]\n",
            " [  0   9   3  31   0   0   7   8   7  12   0   2]\n",
            " [  0  53   4 134   2   0  45  50  25  44   3  26]\n",
            " [  0  24   3 114   0   0  24  37  22  37   5   7]]\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Vk1pq0tcWInw",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "bc8b2cfd-ed5c-4424-e903-73d4e62c21f3"
      },
      "source": [
        "import mlxtend                                                          \n",
        "print(mlxtend.__version__) "
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "0.17.3\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4RK06GxDawDH",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Z7lxOcXpUdeG",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "A-Wvo9sZcC84",
        "colab_type": "text"
      },
      "source": [
        "**RNN**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1aMoaYOEUaFO",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 329
        },
        "outputId": "cf937b9c-dbcd-4d89-b8a9-f65f8f96e717"
      },
      "source": [
        "inputs = Input(shape=(MAX_LENGTH, ))\n",
        "embedding_layer = Embedding(vocab_size,\n",
        "                            128,\n",
        "                            input_length=MAX_LENGTH)(inputs)\n",
        "\n",
        "x = LSTM(64)(embedding_layer)\n",
        "x = Dense(32, activation='relu')(x)\n",
        "predictions = Dense(num_class, activation='softmax')(x)\n",
        "model_lstm = Model(inputs=[inputs], outputs=predictions)\n",
        "model_lstm.compile(optimizer='adam',\n",
        "              loss='categorical_crossentropy',\n",
        "              metrics=['acc'])\n",
        "\n",
        "model_lstm.summary()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"functional_3\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "input_2 (InputLayer)         [(None, 500)]             0         \n",
            "_________________________________________________________________\n",
            "embedding_1 (Embedding)      (None, 500, 128)          2154240   \n",
            "_________________________________________________________________\n",
            "lstm (LSTM)                  (None, 64)                49408     \n",
            "_________________________________________________________________\n",
            "dense_2 (Dense)              (None, 32)                2080      \n",
            "_________________________________________________________________\n",
            "dense_3 (Dense)              (None, 12)                396       \n",
            "=================================================================\n",
            "Total params: 2,206,124\n",
            "Trainable params: 2,206,124\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "px5c4gWcdB52",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "988784e0-ecf1-48e7-cf42-50eb46f6cce5"
      },
      "source": [
        "filepath=\"weights.hdf5\"\n",
        "checkpointer = ModelCheckpoint(filepath, monitor='val_acc', verbose=1, save_best_only=True, mode='max')\n",
        "history = model_lstm.fit([X_train], batch_size=64, y=to_categorical(y_train), verbose=1, validation_split=0.25, \n",
        "          shuffle=True, epochs=20, callbacks=[checkpointer])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/20\n",
            "97/97 [==============================] - ETA: 0s - loss: 2.1922 - acc: 0.2548\n",
            "Epoch 00001: val_acc improved from -inf to 0.23687, saving model to weights.hdf5\n",
            "97/97 [==============================] - 48s 495ms/step - loss: 2.1922 - acc: 0.2548 - val_loss: 2.3226 - val_acc: 0.2369\n",
            "Epoch 2/20\n",
            "97/97 [==============================] - ETA: 0s - loss: 1.5116 - acc: 0.5300\n",
            "Epoch 00002: val_acc improved from 0.23687 to 0.57247, saving model to weights.hdf5\n",
            "97/97 [==============================] - 50s 512ms/step - loss: 1.5116 - acc: 0.5300 - val_loss: 1.4015 - val_acc: 0.5725\n",
            "Epoch 3/20\n",
            "97/97 [==============================] - ETA: 0s - loss: 0.9575 - acc: 0.7092\n",
            "Epoch 00003: val_acc improved from 0.57247 to 0.61479, saving model to weights.hdf5\n",
            "97/97 [==============================] - 50s 516ms/step - loss: 0.9575 - acc: 0.7092 - val_loss: 1.2703 - val_acc: 0.6148\n",
            "Epoch 4/20\n",
            "97/97 [==============================] - ETA: 0s - loss: 0.6640 - acc: 0.7934\n",
            "Epoch 00004: val_acc improved from 0.61479 to 0.64543, saving model to weights.hdf5\n",
            "97/97 [==============================] - 50s 514ms/step - loss: 0.6640 - acc: 0.7934 - val_loss: 1.2331 - val_acc: 0.6454\n",
            "Epoch 5/20\n",
            "97/97 [==============================] - ETA: 0s - loss: 0.4611 - acc: 0.8678\n",
            "Epoch 00005: val_acc did not improve from 0.64543\n",
            "97/97 [==============================] - 50s 511ms/step - loss: 0.4611 - acc: 0.8678 - val_loss: 1.3474 - val_acc: 0.6362\n",
            "Epoch 6/20\n",
            "97/97 [==============================] - ETA: 0s - loss: 0.3517 - acc: 0.8991\n",
            "Epoch 00006: val_acc did not improve from 0.64543\n",
            "97/97 [==============================] - 49s 510ms/step - loss: 0.3517 - acc: 0.8991 - val_loss: 1.3909 - val_acc: 0.6449\n",
            "Epoch 7/20\n",
            "97/97 [==============================] - ETA: 0s - loss: 0.2791 - acc: 0.9207\n",
            "Epoch 00007: val_acc did not improve from 0.64543\n",
            "97/97 [==============================] - 50s 511ms/step - loss: 0.2791 - acc: 0.9207 - val_loss: 1.4509 - val_acc: 0.6367\n",
            "Epoch 8/20\n",
            "97/97 [==============================] - ETA: 0s - loss: 0.2085 - acc: 0.9389\n",
            "Epoch 00008: val_acc did not improve from 0.64543\n",
            "97/97 [==============================] - 50s 513ms/step - loss: 0.2085 - acc: 0.9389 - val_loss: 1.5462 - val_acc: 0.6449\n",
            "Epoch 9/20\n",
            "97/97 [==============================] - ETA: 0s - loss: 0.1606 - acc: 0.9523\n",
            "Epoch 00009: val_acc did not improve from 0.64543\n",
            "97/97 [==============================] - 50s 513ms/step - loss: 0.1606 - acc: 0.9523 - val_loss: 1.7065 - val_acc: 0.6357\n",
            "Epoch 10/20\n",
            "97/97 [==============================] - ETA: 0s - loss: 0.1427 - acc: 0.9598\n",
            "Epoch 00010: val_acc did not improve from 0.64543\n",
            "97/97 [==============================] - 50s 512ms/step - loss: 0.1427 - acc: 0.9598 - val_loss: 1.7478 - val_acc: 0.6352\n",
            "Epoch 11/20\n",
            "97/97 [==============================] - ETA: 0s - loss: 0.1212 - acc: 0.9632\n",
            "Epoch 00011: val_acc did not improve from 0.64543\n",
            "97/97 [==============================] - 49s 508ms/step - loss: 0.1212 - acc: 0.9632 - val_loss: 1.8878 - val_acc: 0.6265\n",
            "Epoch 12/20\n",
            "97/97 [==============================] - ETA: 0s - loss: 0.1017 - acc: 0.9702\n",
            "Epoch 00012: val_acc did not improve from 0.64543\n",
            "97/97 [==============================] - 50s 512ms/step - loss: 0.1017 - acc: 0.9702 - val_loss: 1.9478 - val_acc: 0.6318\n",
            "Epoch 13/20\n",
            "97/97 [==============================] - ETA: 0s - loss: 0.0890 - acc: 0.9708\n",
            "Epoch 00013: val_acc did not improve from 0.64543\n",
            "97/97 [==============================] - 50s 511ms/step - loss: 0.0890 - acc: 0.9708 - val_loss: 2.0551 - val_acc: 0.6294\n",
            "Epoch 14/20\n",
            "97/97 [==============================] - ETA: 0s - loss: 0.0932 - acc: 0.9710\n",
            "Epoch 00014: val_acc did not improve from 0.64543\n",
            "97/97 [==============================] - 49s 510ms/step - loss: 0.0932 - acc: 0.9710 - val_loss: 2.0185 - val_acc: 0.6153\n",
            "Epoch 15/20\n",
            "97/97 [==============================] - ETA: 0s - loss: 0.0825 - acc: 0.9741\n",
            "Epoch 00015: val_acc did not improve from 0.64543\n",
            "97/97 [==============================] - 50s 510ms/step - loss: 0.0825 - acc: 0.9741 - val_loss: 2.1082 - val_acc: 0.6269\n",
            "Epoch 16/20\n",
            "97/97 [==============================] - ETA: 0s - loss: 0.0613 - acc: 0.9818\n",
            "Epoch 00016: val_acc did not improve from 0.64543\n",
            "97/97 [==============================] - 49s 508ms/step - loss: 0.0613 - acc: 0.9818 - val_loss: 2.2102 - val_acc: 0.6420\n",
            "Epoch 17/20\n",
            "97/97 [==============================] - ETA: 0s - loss: 0.0508 - acc: 0.9838\n",
            "Epoch 00017: val_acc did not improve from 0.64543\n",
            "97/97 [==============================] - 49s 509ms/step - loss: 0.0508 - acc: 0.9838 - val_loss: 2.2589 - val_acc: 0.6352\n",
            "Epoch 18/20\n",
            "97/97 [==============================] - ETA: 0s - loss: 0.0431 - acc: 0.9854\n",
            "Epoch 00018: val_acc did not improve from 0.64543\n",
            "97/97 [==============================] - 49s 510ms/step - loss: 0.0431 - acc: 0.9854 - val_loss: 2.4200 - val_acc: 0.6269\n",
            "Epoch 19/20\n",
            "97/97 [==============================] - ETA: 0s - loss: 0.0450 - acc: 0.9859\n",
            "Epoch 00019: val_acc did not improve from 0.64543\n",
            "97/97 [==============================] - 49s 510ms/step - loss: 0.0450 - acc: 0.9859 - val_loss: 2.2363 - val_acc: 0.6128\n",
            "Epoch 20/20\n",
            "97/97 [==============================] - ETA: 0s - loss: 0.0648 - acc: 0.9779\n",
            "Epoch 00020: val_acc did not improve from 0.64543\n",
            "97/97 [==============================] - 49s 510ms/step - loss: 0.0648 - acc: 0.9779 - val_loss: 2.3632 - val_acc: 0.6172\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jJOs8XpqhLS3",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        },
        "outputId": "f582412e-6292-4692-d1a3-05915b1e80dd"
      },
      "source": [
        "df2 = pd.DataFrame({'epochs':history.epoch, 'accuracy': history.history['acc'], 'validation_accuracy': history.history['val_acc']})\n",
        "g = sns.pointplot(x=\"epochs\", y=\"accuracy\", data=df2, fit_reg=False)\n",
        "g = sns.pointplot(x=\"epochs\", y=\"validation_accuracy\", data=df2, fit_reg=False, color='green')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "wmoLvF4_hLhf",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "model_lstm.load_weights('weights.hdf5')\n",
        "predicted = model_lstm.predict(X_test)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "v3eerB39hLu7",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 243
        },
        "outputId": "f0a2e9a1-348d-4fab-b4ee-10c306b089a0"
      },
      "source": [
        "predicted\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[2.9831469e-02, 3.8482651e-02, 4.8706909e-03, ..., 3.4956879e-03,\n",
              "        2.3352986e-02, 7.2540008e-02],\n",
              "       [1.0474424e-02, 9.0662766e-01, 6.4546056e-02, ..., 4.7506380e-04,\n",
              "        9.5972531e-03, 2.8072931e-03],\n",
              "       [7.0309997e-02, 6.8085738e-02, 4.7468795e-03, ..., 8.3169818e-04,\n",
              "        2.0081715e-01, 9.7837895e-03],\n",
              "       ...,\n",
              "       [2.1359925e-03, 2.8395732e-03, 1.2103189e-04, ..., 1.7243827e-05,\n",
              "        3.4363434e-02, 1.0525868e-02],\n",
              "       [1.3869009e-02, 8.7988216e-01, 4.7274962e-02, ..., 5.0858274e-04,\n",
              "        2.7259922e-02, 1.7652851e-02],\n",
              "       [2.7117467e-01, 2.0771371e-02, 6.0670710e-01, ..., 1.3094059e-03,\n",
              "        7.0013836e-02, 1.7297270e-02]], dtype=float32)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 77
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "l5YGYm_qhL3R",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "predicted = np.argmax(predicted, axis=1)\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fKTQSdvJhvvp",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "0b007ed2-3056-4450-8f93-a6251f9cb32a"
      },
      "source": [
        "accuracy_score(y_test, predicted)\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.6504925209777453"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 79
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0ZYnPB0Kh4jc",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 347
        },
        "outputId": "0f32afea-d062-4f35-edcd-2f7256e2b6cd"
      },
      "source": [
        "from sklearn.metrics import classification_report\n",
        "print(classification_report(y_test, predicted))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.28      0.24      0.26       215\n",
            "           1       0.72      0.69      0.70       363\n",
            "           2       0.58      0.66      0.62       323\n",
            "           3       0.70      0.53      0.60        59\n",
            "           4       0.86      0.83      0.85       339\n",
            "           5       0.73      0.74      0.74       242\n",
            "           6       0.65      0.14      0.23        78\n",
            "           7       0.67      0.69      0.68       293\n",
            "           8       0.61      0.51      0.55        91\n",
            "           9       0.56      0.75      0.64        79\n",
            "          10       0.69      0.70      0.70       386\n",
            "          11       0.56      0.68      0.62       273\n",
            "\n",
            "    accuracy                           0.65      2741\n",
            "   macro avg       0.63      0.60      0.60      2741\n",
            "weighted avg       0.65      0.65      0.64      2741\n",
            "\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "dJuyO_FriDWO",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "from sklearn.metrics import confusion_matrix\n",
        "from sklearn.preprocessing import LabelEncoder\n",
        "import itertools"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "awYLPECKiDln",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def plot_confusion_matrix(cm, classes,\n",
        "                          title='Confusion matrix',\n",
        "                          cmap=plt.cm.Blues):\n",
        "    \"\"\"\n",
        "    This function prints and plots the confusion matrix.\n",
        "    Normalization can be applied by setting `normalize=True`.\n",
        "    \"\"\"\n",
        "\n",
        "    cm = cm.astype('float') / cm.sum(axis=1)[:, np.newaxis]\n",
        "\n",
        "    plt.imshow(cm, interpolation='nearest', cmap=cmap)\n",
        "    plt.title(title, fontsize=30)\n",
        "    plt.colorbar()\n",
        "    tick_marks = np.arange(len(classes))\n",
        "    plt.xticks(tick_marks, classes, rotation=45, fontsize=22)\n",
        "    plt.yticks(tick_marks, classes, fontsize=22)\n",
        "\n",
        "    fmt = '.2f'\n",
        "    thresh = cm.max() / 2.\n",
        "    for i, j in itertools.product(range(cm.shape[0]), range(cm.shape[1])):\n",
        "        plt.text(j, i, format(cm[i, j], fmt),\n",
        "                 horizontalalignment=\"center\",\n",
        "                 color=\"white\" if cm[i, j] > thresh else \"black\")\n",
        "\n",
        "    plt.ylabel('True label', fontsize=25)\n",
        "    plt.xlabel('Predicted label', fontsize=25)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "g5ofClKyiDxa",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "50741d11-9b3a-49e6-e1f4-3da7054d7cd0"
      },
      "source": [
        "# Use sklearn utility to convert label strings to numbered index\n",
        "encoder = LabelEncoder()\n",
        "encoder.fit(df.category.values)\n",
        "text_labels = encoder.classes_ \n",
        "cnf_matrix = confusion_matrix(y_test, predicted)\n",
        "plt.figure(figsize=(30,20))\n",
        "plot_confusion_matrix(cnf_matrix, classes=text_labels, title=\"Confusion matrix\")\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 2160x1440 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Qq_y8pA_jB_N",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 72
        },
        "outputId": "45aa857b-98a2-49f9-d02e-bebe881a2f83"
      },
      "source": [
        "from sklearn.externals import joblib\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/sklearn/externals/joblib/__init__.py:15: FutureWarning: sklearn.externals.joblib is deprecated in 0.21 and will be removed in 0.23. Please import this functionality directly from joblib, which can be installed with: pip install joblib. If this warning is raised when loading pickled models, you may need to re-serialize those models with scikit-learn 0.21+.\n",
            "  warnings.warn(msg, category=FutureWarning)\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nBD8eaMXjB9A",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "897ea17d-de33-4c7b-f63d-8c84e2eb1fe2"
      },
      "source": [
        "joblib.dump(clf,'model.pkl')\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['model.pkl']"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 160
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QvSNt5X9fSqJ",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "oJFySVVEDB3H",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}